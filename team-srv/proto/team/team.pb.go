// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/team-srv/proto/team/team.proto

/*
Package go_micro_srv_team is a generated protocol buffer package.

It is generated from these files:
	server/team-srv/proto/team/team.proto

It has these top-level messages:
	Data
	ArrData
	AllRequest
	AllResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	ReadRequest
	ReadResponse
	DeleteRequest
	DeleteResponse
	FilterRequest
	FilterResponse
	SearchRequest
	SearchResponse
	AllTeamMemberRequest
	AllTeamMemberResponse
	CreateTeamMemberRequest
	CreateTeamMemberResponse
	ReadTeamMemberRequest
	ReadTeamMemberResponse
	FilterTeamMemberRequest
	FilterTeamMemberResponse
	CreateEmployeeEdgeRequest
	CreateEmployeeEdgeResponse
	CreateEmployeeProfileRequest
	CreateEmployeeProfileResponse
	CreateTeamMembershipRequest
	CreateTeamMembershipResponse
	CreateEmployeeModuleAccessRequest
	CreateEmployeeModuleAccessResponse
	GetAccessibleModulesByEmployeeRequest
	GetAccessibleModulesByEmployeeResponse
	DeleteEmployeeRequest
	DeleteEmployeeResponse
	Team
	TeamMembership
	TeamMember
	Employee
	ReadEmployeeInfoRequest
	ReadEmployeeInfoResponse
	PutEmployeeInfoRequest
	CheckValidEmployeeResponse
	PutEmployeeInfoResponse
	EmployeeInfo
	EmployeeProfile
	Qualification
	Experience
	ModuleAuthorisation
*/
package go_micro_srv_team

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import go_micro_srv_static "server/static-srv/proto/static"
import go_micro_srv_account "server/account-srv/proto/account"
import go_micro_srv_organisation "server/organisation-srv/proto/organisation"
import go_micro_srv_user "server/user-srv/proto/user"
import go_micro_srv_product "server/product-srv/proto/product"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Data struct {
	Team *Team `protobuf:"bytes,1,opt,name=team" json:"team,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Data) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

type ArrData struct {
	Teams []*Team `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
}

func (m *ArrData) Reset()                    { *m = ArrData{} }
func (m *ArrData) String() string            { return proto.CompactTextString(m) }
func (*ArrData) ProtoMessage()               {}
func (*ArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ArrData) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

type AllRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllRequest) Reset()                    { *m = AllRequest{} }
func (m *AllRequest) String() string            { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()               {}
func (*AllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AllRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllResponse struct {
	Data    *ArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllResponse) Reset()                    { *m = AllResponse{} }
func (m *AllResponse) String() string            { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()               {}
func (*AllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AllResponse) GetData() *ArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateRequest struct {
	Team   *Team  `protobuf:"bytes,1,opt,name=team" json:"team,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateRequest) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *CreateRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateResponse struct {
	Data    *Data  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateRequest struct {
	Team   *Team  `protobuf:"bytes,1,opt,name=team" json:"team,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateRequest) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *UpdateRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateResponse struct {
	Data    *Data  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadResponse struct {
	Data    *Data  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ReadResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteResponse struct {
	Code    int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeleteResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterRequest struct {
	OrgId         string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string   `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string   `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
	Product       []string `protobuf:"bytes,7,rep,name=product" json:"product,omitempty"`
}

func (m *FilterRequest) Reset()                    { *m = FilterRequest{} }
func (m *FilterRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterRequest) ProtoMessage()               {}
func (*FilterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *FilterRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

func (m *FilterRequest) GetProduct() []string {
	if m != nil {
		return m.Product
	}
	return nil
}

type FilterResponse struct {
	Data    *ArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterResponse) Reset()                    { *m = FilterResponse{} }
func (m *FilterResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterResponse) ProtoMessage()               {}
func (*FilterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *FilterResponse) GetData() *ArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SearchRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	TeamName      string `protobuf:"bytes,5,opt,name=team_name,json=teamName" json:"team_name,omitempty"`
	TeamMember    string `protobuf:"bytes,6,opt,name=team_member,json=teamMember" json:"team_member,omitempty"`
	SortParameter string `protobuf:"bytes,7,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,8,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SearchRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SearchRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *SearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetTeamName() string {
	if m != nil {
		return m.TeamName
	}
	return ""
}

func (m *SearchRequest) GetTeamMember() string {
	if m != nil {
		return m.TeamMember
	}
	return ""
}

func (m *SearchRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *SearchRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type SearchResponse struct {
	Data    *ArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SearchResponse) GetData() *ArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SearchResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SearchResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllTeamMemberRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllTeamMemberRequest) Reset()                    { *m = AllTeamMemberRequest{} }
func (m *AllTeamMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*AllTeamMemberRequest) ProtoMessage()               {}
func (*AllTeamMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AllTeamMemberRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllTeamMemberRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllTeamMemberRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllTeamMemberRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllTeamMemberRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllTeamMemberRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllTeamMemberResponse struct {
	Data    *AllTeamMemberResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllTeamMemberResponse) Reset()                    { *m = AllTeamMemberResponse{} }
func (m *AllTeamMemberResponse) String() string            { return proto.CompactTextString(m) }
func (*AllTeamMemberResponse) ProtoMessage()               {}
func (*AllTeamMemberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *AllTeamMemberResponse) GetData() *AllTeamMemberResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllTeamMemberResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllTeamMemberResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllTeamMemberResponse_Data struct {
	Employees []*Employee `protobuf:"bytes,1,rep,name=employees" json:"employees,omitempty"`
}

func (m *AllTeamMemberResponse_Data) Reset()                    { *m = AllTeamMemberResponse_Data{} }
func (m *AllTeamMemberResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*AllTeamMemberResponse_Data) ProtoMessage()               {}
func (*AllTeamMemberResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17, 0} }

func (m *AllTeamMemberResponse_Data) GetEmployees() []*Employee {
	if m != nil {
		return m.Employees
	}
	return nil
}

type CreateTeamMemberRequest struct {
	User     *go_micro_srv_user.User       `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Account  *go_micro_srv_account.Account `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	Employee *Employee                     `protobuf:"bytes,3,opt,name=employee" json:"employee,omitempty"`
	OrgId    string                        `protobuf:"bytes,4,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string                        `protobuf:"bytes,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateTeamMemberRequest) Reset()                    { *m = CreateTeamMemberRequest{} }
func (m *CreateTeamMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTeamMemberRequest) ProtoMessage()               {}
func (*CreateTeamMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CreateTeamMemberRequest) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateTeamMemberRequest) GetAccount() *go_micro_srv_account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateTeamMemberRequest) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

func (m *CreateTeamMemberRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateTeamMemberRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateTeamMemberResponse struct {
	Data    *CreateTeamMemberResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateTeamMemberResponse) Reset()                    { *m = CreateTeamMemberResponse{} }
func (m *CreateTeamMemberResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTeamMemberResponse) ProtoMessage()               {}
func (*CreateTeamMemberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CreateTeamMemberResponse) GetData() *CreateTeamMemberResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateTeamMemberResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateTeamMemberResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateTeamMemberResponse_Data struct {
	Employee *Employee                     `protobuf:"bytes,1,opt,name=employee" json:"employee,omitempty"`
	User     *go_micro_srv_user.User       `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Account  *go_micro_srv_account.Account `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
}

func (m *CreateTeamMemberResponse_Data) Reset()         { *m = CreateTeamMemberResponse_Data{} }
func (m *CreateTeamMemberResponse_Data) String() string { return proto.CompactTextString(m) }
func (*CreateTeamMemberResponse_Data) ProtoMessage()    {}
func (*CreateTeamMemberResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{19, 0}
}

func (m *CreateTeamMemberResponse_Data) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

func (m *CreateTeamMemberResponse_Data) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateTeamMemberResponse_Data) GetAccount() *go_micro_srv_account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ReadTeamMemberRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadTeamMemberRequest) Reset()                    { *m = ReadTeamMemberRequest{} }
func (m *ReadTeamMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadTeamMemberRequest) ProtoMessage()               {}
func (*ReadTeamMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ReadTeamMemberRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ReadTeamMemberRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadTeamMemberRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadTeamMemberResponse struct {
	Data    *ReadTeamMemberResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadTeamMemberResponse) Reset()                    { *m = ReadTeamMemberResponse{} }
func (m *ReadTeamMemberResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadTeamMemberResponse) ProtoMessage()               {}
func (*ReadTeamMemberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *ReadTeamMemberResponse) GetData() *ReadTeamMemberResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadTeamMemberResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadTeamMemberResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadTeamMemberResponse_Data struct {
	User     *go_micro_srv_user.User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Employee *Employee               `protobuf:"bytes,2,opt,name=employee" json:"employee,omitempty"`
}

func (m *ReadTeamMemberResponse_Data) Reset()                    { *m = ReadTeamMemberResponse_Data{} }
func (m *ReadTeamMemberResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*ReadTeamMemberResponse_Data) ProtoMessage()               {}
func (*ReadTeamMemberResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 0} }

func (m *ReadTeamMemberResponse_Data) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ReadTeamMemberResponse_Data) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

type FilterTeamMemberRequest struct {
	OrgId         string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string   `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string   `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
	Team          []string `protobuf:"bytes,7,rep,name=team" json:"team,omitempty"`
}

func (m *FilterTeamMemberRequest) Reset()                    { *m = FilterTeamMemberRequest{} }
func (m *FilterTeamMemberRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterTeamMemberRequest) ProtoMessage()               {}
func (*FilterTeamMemberRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *FilterTeamMemberRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterTeamMemberRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterTeamMemberRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterTeamMemberRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterTeamMemberRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterTeamMemberRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

func (m *FilterTeamMemberRequest) GetTeam() []string {
	if m != nil {
		return m.Team
	}
	return nil
}

type FilterTeamMemberResponse struct {
	Data    *FilterTeamMemberResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int32                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterTeamMemberResponse) Reset()                    { *m = FilterTeamMemberResponse{} }
func (m *FilterTeamMemberResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterTeamMemberResponse) ProtoMessage()               {}
func (*FilterTeamMemberResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *FilterTeamMemberResponse) GetData() *FilterTeamMemberResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterTeamMemberResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterTeamMemberResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterTeamMemberResponse_Data struct {
	Employees []*Employee `protobuf:"bytes,1,rep,name=employees" json:"employees,omitempty"`
}

func (m *FilterTeamMemberResponse_Data) Reset()         { *m = FilterTeamMemberResponse_Data{} }
func (m *FilterTeamMemberResponse_Data) String() string { return proto.CompactTextString(m) }
func (*FilterTeamMemberResponse_Data) ProtoMessage()    {}
func (*FilterTeamMemberResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{23, 0}
}

func (m *FilterTeamMemberResponse_Data) GetEmployees() []*Employee {
	if m != nil {
		return m.Employees
	}
	return nil
}

type CreateEmployeeEdgeRequest struct {
	Employee *Employee `protobuf:"bytes,1,opt,name=employee" json:"employee,omitempty"`
	UserId   string    `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId    string    `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *CreateEmployeeEdgeRequest) Reset()                    { *m = CreateEmployeeEdgeRequest{} }
func (m *CreateEmployeeEdgeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateEmployeeEdgeRequest) ProtoMessage()               {}
func (*CreateEmployeeEdgeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CreateEmployeeEdgeRequest) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

func (m *CreateEmployeeEdgeRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateEmployeeEdgeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type CreateEmployeeEdgeResponse struct {
	Data    *CreateEmployeeEdgeResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateEmployeeEdgeResponse) Reset()                    { *m = CreateEmployeeEdgeResponse{} }
func (m *CreateEmployeeEdgeResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateEmployeeEdgeResponse) ProtoMessage()               {}
func (*CreateEmployeeEdgeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CreateEmployeeEdgeResponse) GetData() *CreateEmployeeEdgeResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateEmployeeEdgeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateEmployeeEdgeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateEmployeeEdgeResponse_Data struct {
	Employee *Employee `protobuf:"bytes,1,opt,name=employee" json:"employee,omitempty"`
}

func (m *CreateEmployeeEdgeResponse_Data) Reset()         { *m = CreateEmployeeEdgeResponse_Data{} }
func (m *CreateEmployeeEdgeResponse_Data) String() string { return proto.CompactTextString(m) }
func (*CreateEmployeeEdgeResponse_Data) ProtoMessage()    {}
func (*CreateEmployeeEdgeResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{25, 0}
}

func (m *CreateEmployeeEdgeResponse_Data) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

type CreateEmployeeProfileRequest struct {
	Profile *EmployeeProfile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *CreateEmployeeProfileRequest) Reset()                    { *m = CreateEmployeeProfileRequest{} }
func (m *CreateEmployeeProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateEmployeeProfileRequest) ProtoMessage()               {}
func (*CreateEmployeeProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *CreateEmployeeProfileRequest) GetProfile() *EmployeeProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type CreateEmployeeProfileResponse struct {
	Data    *CreateEmployeeProfileResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                               `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                              `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateEmployeeProfileResponse) Reset()                    { *m = CreateEmployeeProfileResponse{} }
func (m *CreateEmployeeProfileResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateEmployeeProfileResponse) ProtoMessage()               {}
func (*CreateEmployeeProfileResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CreateEmployeeProfileResponse) GetData() *CreateEmployeeProfileResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateEmployeeProfileResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateEmployeeProfileResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateEmployeeProfileResponse_Data struct {
	Profile *EmployeeProfile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *CreateEmployeeProfileResponse_Data) Reset()         { *m = CreateEmployeeProfileResponse_Data{} }
func (m *CreateEmployeeProfileResponse_Data) String() string { return proto.CompactTextString(m) }
func (*CreateEmployeeProfileResponse_Data) ProtoMessage()    {}
func (*CreateEmployeeProfileResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27, 0}
}

func (m *CreateEmployeeProfileResponse_Data) GetProfile() *EmployeeProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type CreateTeamMembershipRequest struct {
	Employee *Employee               `protobuf:"bytes,1,opt,name=employee" json:"employee,omitempty"`
	User     *go_micro_srv_user.User `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
}

func (m *CreateTeamMembershipRequest) Reset()                    { *m = CreateTeamMembershipRequest{} }
func (m *CreateTeamMembershipRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTeamMembershipRequest) ProtoMessage()               {}
func (*CreateTeamMembershipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CreateTeamMembershipRequest) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

func (m *CreateTeamMembershipRequest) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

type CreateTeamMembershipResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *CreateTeamMembershipResponse) Reset()                    { *m = CreateTeamMembershipResponse{} }
func (m *CreateTeamMembershipResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTeamMembershipResponse) ProtoMessage()               {}
func (*CreateTeamMembershipResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *CreateTeamMembershipResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateTeamMembershipResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateEmployeeModuleAccessRequest struct {
	UserId  string                        `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Modules []*go_micro_srv_static.Module `protobuf:"bytes,2,rep,name=modules" json:"modules,omitempty"`
	OrgId   string                        `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *CreateEmployeeModuleAccessRequest) Reset()         { *m = CreateEmployeeModuleAccessRequest{} }
func (m *CreateEmployeeModuleAccessRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEmployeeModuleAccessRequest) ProtoMessage()    {}
func (*CreateEmployeeModuleAccessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{30}
}

func (m *CreateEmployeeModuleAccessRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateEmployeeModuleAccessRequest) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

func (m *CreateEmployeeModuleAccessRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type CreateEmployeeModuleAccessResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *CreateEmployeeModuleAccessResponse) Reset()         { *m = CreateEmployeeModuleAccessResponse{} }
func (m *CreateEmployeeModuleAccessResponse) String() string { return proto.CompactTextString(m) }
func (*CreateEmployeeModuleAccessResponse) ProtoMessage()    {}
func (*CreateEmployeeModuleAccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{31}
}

func (m *CreateEmployeeModuleAccessResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateEmployeeModuleAccessResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAccessibleModulesByEmployeeRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *GetAccessibleModulesByEmployeeRequest) Reset()         { *m = GetAccessibleModulesByEmployeeRequest{} }
func (m *GetAccessibleModulesByEmployeeRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccessibleModulesByEmployeeRequest) ProtoMessage()    {}
func (*GetAccessibleModulesByEmployeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32}
}

func (m *GetAccessibleModulesByEmployeeRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetAccessibleModulesByEmployeeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type GetAccessibleModulesByEmployeeResponse struct {
	Data    *GetAccessibleModulesByEmployeeResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetAccessibleModulesByEmployeeResponse) Reset() {
	*m = GetAccessibleModulesByEmployeeResponse{}
}
func (m *GetAccessibleModulesByEmployeeResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccessibleModulesByEmployeeResponse) ProtoMessage()    {}
func (*GetAccessibleModulesByEmployeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{33}
}

func (m *GetAccessibleModulesByEmployeeResponse) GetData() *GetAccessibleModulesByEmployeeResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetAccessibleModulesByEmployeeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAccessibleModulesByEmployeeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAccessibleModulesByEmployeeResponse_Data struct {
	Modules []*go_micro_srv_static.Module `protobuf:"bytes,1,rep,name=modules" json:"modules,omitempty"`
}

func (m *GetAccessibleModulesByEmployeeResponse_Data) Reset() {
	*m = GetAccessibleModulesByEmployeeResponse_Data{}
}
func (m *GetAccessibleModulesByEmployeeResponse_Data) String() string {
	return proto.CompactTextString(m)
}
func (*GetAccessibleModulesByEmployeeResponse_Data) ProtoMessage() {}
func (*GetAccessibleModulesByEmployeeResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{33, 0}
}

func (m *GetAccessibleModulesByEmployeeResponse_Data) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

type DeleteEmployeeRequest struct {
	EmployeeId string `protobuf:"bytes,1,opt,name=employee_id,json=employeeId" json:"employee_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId      string `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *DeleteEmployeeRequest) Reset()                    { *m = DeleteEmployeeRequest{} }
func (m *DeleteEmployeeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteEmployeeRequest) ProtoMessage()               {}
func (*DeleteEmployeeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *DeleteEmployeeRequest) GetEmployeeId() string {
	if m != nil {
		return m.EmployeeId
	}
	return ""
}

func (m *DeleteEmployeeRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteEmployeeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type DeleteEmployeeResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteEmployeeResponse) Reset()                    { *m = DeleteEmployeeResponse{} }
func (m *DeleteEmployeeResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteEmployeeResponse) ProtoMessage()               {}
func (*DeleteEmployeeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *DeleteEmployeeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteEmployeeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// organisation teams
type Team struct {
	Id          string                          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId       string                          `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created     int64                           `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated     int64                           `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Name        string                          `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Description string                          `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Image       string                          `protobuf:"bytes,7,opt,name=image" json:"image,omitempty"`
	Color       string                          `protobuf:"bytes,8,opt,name=color" json:"color,omitempty"`
	TeamMembers []*TeamMember                   `protobuf:"bytes,9,rep,name=team_members,json=teamMembers" json:"team_members,omitempty"`
	Products    []*go_micro_srv_product.Product `protobuf:"bytes,10,rep,name=products" json:"products,omitempty"`
	Services    []*go_micro_srv_product.Service `protobuf:"bytes,11,rep,name=services" json:"services,omitempty"`
	CreatedBy   *go_micro_srv_user.User         `protobuf:"bytes,12,opt,name=createdBy" json:"createdBy,omitempty"`
}

func (m *Team) Reset()                    { *m = Team{} }
func (m *Team) String() string            { return proto.CompactTextString(m) }
func (*Team) ProtoMessage()               {}
func (*Team) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *Team) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Team) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Team) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Team) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Team) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Team) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Team) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Team) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Team) GetTeamMembers() []*TeamMember {
	if m != nil {
		return m.TeamMembers
	}
	return nil
}

func (m *Team) GetProducts() []*go_micro_srv_product.Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *Team) GetServices() []*go_micro_srv_product.Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Team) GetCreatedBy() *go_micro_srv_user.User {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

type TeamMembership struct {
	Team *Team                     `protobuf:"bytes,1,opt,name=team" json:"team,omitempty"`
	User *go_micro_srv_user.User   `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Role *go_micro_srv_static.Role `protobuf:"bytes,3,opt,name=role" json:"role,omitempty"`
}

func (m *TeamMembership) Reset()                    { *m = TeamMembership{} }
func (m *TeamMembership) String() string            { return proto.CompactTextString(m) }
func (*TeamMembership) ProtoMessage()               {}
func (*TeamMembership) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *TeamMembership) GetTeam() *Team {
	if m != nil {
		return m.Team
	}
	return nil
}

func (m *TeamMembership) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *TeamMembership) GetRole() *go_micro_srv_static.Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type TeamMember struct {
	User *go_micro_srv_user.User   `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Role *go_micro_srv_static.Role `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
}

func (m *TeamMember) Reset()                    { *m = TeamMember{} }
func (m *TeamMember) String() string            { return proto.CompactTextString(m) }
func (*TeamMember) ProtoMessage()               {}
func (*TeamMember) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *TeamMember) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *TeamMember) GetRole() *go_micro_srv_static.Role {
	if m != nil {
		return m.Role
	}
	return nil
}

// this is the edge table between User and Organisation
type Employee struct {
	Id           string                                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId        string                                  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created      int64                                   `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated      int64                                   `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Role         *go_micro_srv_static.Role               `protobuf:"bytes,5,opt,name=role" json:"role,omitempty"`
	Profile      *EmployeeProfile                        `protobuf:"bytes,6,opt,name=profile" json:"profile,omitempty"`
	Teams        []*Team                                 `protobuf:"bytes,7,rep,name=teams" json:"teams,omitempty"`
	User         *go_micro_srv_user.User                 `protobuf:"bytes,8,opt,name=user" json:"user,omitempty"`
	Organisation *go_micro_srv_organisation.Organisation `protobuf:"bytes,9,opt,name=organisation" json:"organisation,omitempty"`
	Modules      []*go_micro_srv_static.Module           `protobuf:"bytes,10,rep,name=modules" json:"modules,omitempty"`
}

func (m *Employee) Reset()                    { *m = Employee{} }
func (m *Employee) String() string            { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()               {}
func (*Employee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *Employee) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Employee) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Employee) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Employee) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Employee) GetRole() *go_micro_srv_static.Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Employee) GetProfile() *EmployeeProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *Employee) GetTeams() []*Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *Employee) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Employee) GetOrganisation() *go_micro_srv_organisation.Organisation {
	if m != nil {
		return m.Organisation
	}
	return nil
}

func (m *Employee) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

type ReadEmployeeInfoRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *ReadEmployeeInfoRequest) Reset()                    { *m = ReadEmployeeInfoRequest{} }
func (m *ReadEmployeeInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadEmployeeInfoRequest) ProtoMessage()               {}
func (*ReadEmployeeInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *ReadEmployeeInfoRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ReadEmployeeInfoResponse struct {
	Employee *EmployeeInfo `protobuf:"bytes,1,opt,name=employee" json:"employee,omitempty"`
}

func (m *ReadEmployeeInfoResponse) Reset()                    { *m = ReadEmployeeInfoResponse{} }
func (m *ReadEmployeeInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadEmployeeInfoResponse) ProtoMessage()               {}
func (*ReadEmployeeInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *ReadEmployeeInfoResponse) GetEmployee() *EmployeeInfo {
	if m != nil {
		return m.Employee
	}
	return nil
}

type PutEmployeeInfoRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *PutEmployeeInfoRequest) Reset()                    { *m = PutEmployeeInfoRequest{} }
func (m *PutEmployeeInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*PutEmployeeInfoRequest) ProtoMessage()               {}
func (*PutEmployeeInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *PutEmployeeInfoRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PutEmployeeInfoRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type CheckValidEmployeeResponse struct {
	Valid    bool      `protobuf:"varint,1,opt,name=valid" json:"valid,omitempty"`
	Employee *Employee `protobuf:"bytes,3,opt,name=employee" json:"employee,omitempty"`
}

func (m *CheckValidEmployeeResponse) Reset()                    { *m = CheckValidEmployeeResponse{} }
func (m *CheckValidEmployeeResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckValidEmployeeResponse) ProtoMessage()               {}
func (*CheckValidEmployeeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CheckValidEmployeeResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func (m *CheckValidEmployeeResponse) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

type PutEmployeeInfoResponse struct {
	Data *PutEmployeeInfoResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *PutEmployeeInfoResponse) Reset()                    { *m = PutEmployeeInfoResponse{} }
func (m *PutEmployeeInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*PutEmployeeInfoResponse) ProtoMessage()               {}
func (*PutEmployeeInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *PutEmployeeInfoResponse) GetData() *PutEmployeeInfoResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type PutEmployeeInfoResponse_Data struct {
	Employee *Employee `protobuf:"bytes,1,opt,name=employee" json:"employee,omitempty"`
}

func (m *PutEmployeeInfoResponse_Data) Reset()         { *m = PutEmployeeInfoResponse_Data{} }
func (m *PutEmployeeInfoResponse_Data) String() string { return proto.CompactTextString(m) }
func (*PutEmployeeInfoResponse_Data) ProtoMessage()    {}
func (*PutEmployeeInfoResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{44, 0}
}

func (m *PutEmployeeInfoResponse_Data) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

type EmployeeInfo struct {
	UserId   string    `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId    string    `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Employee *Employee `protobuf:"bytes,3,opt,name=employee" json:"employee,omitempty"`
}

func (m *EmployeeInfo) Reset()                    { *m = EmployeeInfo{} }
func (m *EmployeeInfo) String() string            { return proto.CompactTextString(m) }
func (*EmployeeInfo) ProtoMessage()               {}
func (*EmployeeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *EmployeeInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *EmployeeInfo) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *EmployeeInfo) GetEmployee() *Employee {
	if m != nil {
		return m.Employee
	}
	return nil
}

type EmployeeProfile struct {
	Id             string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId          string           `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created        int64            `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated        int64            `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Qualifications []*Qualification `protobuf:"bytes,5,rep,name=qualifications" json:"qualifications,omitempty"`
	Experiences    []*Experience    `protobuf:"bytes,6,rep,name=experiences" json:"experiences,omitempty"`
}

func (m *EmployeeProfile) Reset()                    { *m = EmployeeProfile{} }
func (m *EmployeeProfile) String() string            { return proto.CompactTextString(m) }
func (*EmployeeProfile) ProtoMessage()               {}
func (*EmployeeProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *EmployeeProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EmployeeProfile) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *EmployeeProfile) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *EmployeeProfile) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *EmployeeProfile) GetQualifications() []*Qualification {
	if m != nil {
		return m.Qualifications
	}
	return nil
}

func (m *EmployeeProfile) GetExperiences() []*Experience {
	if m != nil {
		return m.Experiences
	}
	return nil
}

type Qualification struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId       string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created     int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated     int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Summary     string `protobuf:"bytes,6,opt,name=summary" json:"summary,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
}

func (m *Qualification) Reset()                    { *m = Qualification{} }
func (m *Qualification) String() string            { return proto.CompactTextString(m) }
func (*Qualification) ProtoMessage()               {}
func (*Qualification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *Qualification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Qualification) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Qualification) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Qualification) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Qualification) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Qualification) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Qualification) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Experience struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId       string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created     int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated     int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Summary     string `protobuf:"bytes,6,opt,name=summary" json:"summary,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	Duration    string `protobuf:"bytes,8,opt,name=duration" json:"duration,omitempty"`
}

func (m *Experience) Reset()                    { *m = Experience{} }
func (m *Experience) String() string            { return proto.CompactTextString(m) }
func (*Experience) ProtoMessage()               {}
func (*Experience) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *Experience) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Experience) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Experience) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Experience) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Experience) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Experience) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Experience) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Experience) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

type ModuleAuthorisation struct {
	Id      string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId   string                      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created int64                       `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated int64                       `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Module  *go_micro_srv_static.Module `protobuf:"bytes,5,opt,name=module" json:"module,omitempty"`
	Role    *go_micro_srv_static.Role   `protobuf:"bytes,6,opt,name=role" json:"role,omitempty"`
}

func (m *ModuleAuthorisation) Reset()                    { *m = ModuleAuthorisation{} }
func (m *ModuleAuthorisation) String() string            { return proto.CompactTextString(m) }
func (*ModuleAuthorisation) ProtoMessage()               {}
func (*ModuleAuthorisation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *ModuleAuthorisation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ModuleAuthorisation) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ModuleAuthorisation) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ModuleAuthorisation) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ModuleAuthorisation) GetModule() *go_micro_srv_static.Module {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *ModuleAuthorisation) GetRole() *go_micro_srv_static.Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func init() {
	proto.RegisterType((*Data)(nil), "go.micro.srv.team.Data")
	proto.RegisterType((*ArrData)(nil), "go.micro.srv.team.ArrData")
	proto.RegisterType((*AllRequest)(nil), "go.micro.srv.team.AllRequest")
	proto.RegisterType((*AllResponse)(nil), "go.micro.srv.team.AllResponse")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.team.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.team.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.team.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.team.UpdateResponse")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.team.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.team.ReadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.team.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.team.DeleteResponse")
	proto.RegisterType((*FilterRequest)(nil), "go.micro.srv.team.FilterRequest")
	proto.RegisterType((*FilterResponse)(nil), "go.micro.srv.team.FilterResponse")
	proto.RegisterType((*SearchRequest)(nil), "go.micro.srv.team.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "go.micro.srv.team.SearchResponse")
	proto.RegisterType((*AllTeamMemberRequest)(nil), "go.micro.srv.team.AllTeamMemberRequest")
	proto.RegisterType((*AllTeamMemberResponse)(nil), "go.micro.srv.team.AllTeamMemberResponse")
	proto.RegisterType((*AllTeamMemberResponse_Data)(nil), "go.micro.srv.team.AllTeamMemberResponse.Data")
	proto.RegisterType((*CreateTeamMemberRequest)(nil), "go.micro.srv.team.CreateTeamMemberRequest")
	proto.RegisterType((*CreateTeamMemberResponse)(nil), "go.micro.srv.team.CreateTeamMemberResponse")
	proto.RegisterType((*CreateTeamMemberResponse_Data)(nil), "go.micro.srv.team.CreateTeamMemberResponse.Data")
	proto.RegisterType((*ReadTeamMemberRequest)(nil), "go.micro.srv.team.ReadTeamMemberRequest")
	proto.RegisterType((*ReadTeamMemberResponse)(nil), "go.micro.srv.team.ReadTeamMemberResponse")
	proto.RegisterType((*ReadTeamMemberResponse_Data)(nil), "go.micro.srv.team.ReadTeamMemberResponse.Data")
	proto.RegisterType((*FilterTeamMemberRequest)(nil), "go.micro.srv.team.FilterTeamMemberRequest")
	proto.RegisterType((*FilterTeamMemberResponse)(nil), "go.micro.srv.team.FilterTeamMemberResponse")
	proto.RegisterType((*FilterTeamMemberResponse_Data)(nil), "go.micro.srv.team.FilterTeamMemberResponse.Data")
	proto.RegisterType((*CreateEmployeeEdgeRequest)(nil), "go.micro.srv.team.CreateEmployeeEdgeRequest")
	proto.RegisterType((*CreateEmployeeEdgeResponse)(nil), "go.micro.srv.team.CreateEmployeeEdgeResponse")
	proto.RegisterType((*CreateEmployeeEdgeResponse_Data)(nil), "go.micro.srv.team.CreateEmployeeEdgeResponse.Data")
	proto.RegisterType((*CreateEmployeeProfileRequest)(nil), "go.micro.srv.team.CreateEmployeeProfileRequest")
	proto.RegisterType((*CreateEmployeeProfileResponse)(nil), "go.micro.srv.team.CreateEmployeeProfileResponse")
	proto.RegisterType((*CreateEmployeeProfileResponse_Data)(nil), "go.micro.srv.team.CreateEmployeeProfileResponse.Data")
	proto.RegisterType((*CreateTeamMembershipRequest)(nil), "go.micro.srv.team.CreateTeamMembershipRequest")
	proto.RegisterType((*CreateTeamMembershipResponse)(nil), "go.micro.srv.team.CreateTeamMembershipResponse")
	proto.RegisterType((*CreateEmployeeModuleAccessRequest)(nil), "go.micro.srv.team.CreateEmployeeModuleAccessRequest")
	proto.RegisterType((*CreateEmployeeModuleAccessResponse)(nil), "go.micro.srv.team.CreateEmployeeModuleAccessResponse")
	proto.RegisterType((*GetAccessibleModulesByEmployeeRequest)(nil), "go.micro.srv.team.GetAccessibleModulesByEmployeeRequest")
	proto.RegisterType((*GetAccessibleModulesByEmployeeResponse)(nil), "go.micro.srv.team.GetAccessibleModulesByEmployeeResponse")
	proto.RegisterType((*GetAccessibleModulesByEmployeeResponse_Data)(nil), "go.micro.srv.team.GetAccessibleModulesByEmployeeResponse.Data")
	proto.RegisterType((*DeleteEmployeeRequest)(nil), "go.micro.srv.team.DeleteEmployeeRequest")
	proto.RegisterType((*DeleteEmployeeResponse)(nil), "go.micro.srv.team.DeleteEmployeeResponse")
	proto.RegisterType((*Team)(nil), "go.micro.srv.team.Team")
	proto.RegisterType((*TeamMembership)(nil), "go.micro.srv.team.TeamMembership")
	proto.RegisterType((*TeamMember)(nil), "go.micro.srv.team.TeamMember")
	proto.RegisterType((*Employee)(nil), "go.micro.srv.team.Employee")
	proto.RegisterType((*ReadEmployeeInfoRequest)(nil), "go.micro.srv.team.ReadEmployeeInfoRequest")
	proto.RegisterType((*ReadEmployeeInfoResponse)(nil), "go.micro.srv.team.ReadEmployeeInfoResponse")
	proto.RegisterType((*PutEmployeeInfoRequest)(nil), "go.micro.srv.team.PutEmployeeInfoRequest")
	proto.RegisterType((*CheckValidEmployeeResponse)(nil), "go.micro.srv.team.CheckValidEmployeeResponse")
	proto.RegisterType((*PutEmployeeInfoResponse)(nil), "go.micro.srv.team.PutEmployeeInfoResponse")
	proto.RegisterType((*PutEmployeeInfoResponse_Data)(nil), "go.micro.srv.team.PutEmployeeInfoResponse.Data")
	proto.RegisterType((*EmployeeInfo)(nil), "go.micro.srv.team.EmployeeInfo")
	proto.RegisterType((*EmployeeProfile)(nil), "go.micro.srv.team.EmployeeProfile")
	proto.RegisterType((*Qualification)(nil), "go.micro.srv.team.Qualification")
	proto.RegisterType((*Experience)(nil), "go.micro.srv.team.Experience")
	proto.RegisterType((*ModuleAuthorisation)(nil), "go.micro.srv.team.ModuleAuthorisation")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for TeamService service

type TeamServiceClient interface {
	All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Filter(ctx context.Context, in *FilterRequest, opts ...client.CallOption) (*FilterResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
	AllTeamMember(ctx context.Context, in *AllTeamMemberRequest, opts ...client.CallOption) (*AllTeamMemberResponse, error)
	CreateTeamMember(ctx context.Context, in *CreateTeamMemberRequest, opts ...client.CallOption) (*CreateTeamMemberResponse, error)
	ReadTeamMember(ctx context.Context, in *ReadTeamMemberRequest, opts ...client.CallOption) (*ReadTeamMemberResponse, error)
	FilterTeamMember(ctx context.Context, in *FilterTeamMemberRequest, opts ...client.CallOption) (*FilterTeamMemberResponse, error)
	CreateEmployeeEdge(ctx context.Context, in *CreateEmployeeEdgeRequest, opts ...client.CallOption) (*CreateEmployeeEdgeResponse, error)
	CreateEmployeeProfile(ctx context.Context, in *CreateEmployeeProfileRequest, opts ...client.CallOption) (*CreateEmployeeProfileResponse, error)
	CreateTeamMembership(ctx context.Context, in *CreateTeamMembershipRequest, opts ...client.CallOption) (*CreateTeamMembershipResponse, error)
	CreateEmployeeModuleAccess(ctx context.Context, in *CreateEmployeeModuleAccessRequest, opts ...client.CallOption) (*CreateEmployeeModuleAccessResponse, error)
	GetAccessibleModulesByEmployee(ctx context.Context, in *GetAccessibleModulesByEmployeeRequest, opts ...client.CallOption) (*GetAccessibleModulesByEmployeeResponse, error)
	ReadEmployeeInfo(ctx context.Context, in *ReadEmployeeInfoRequest, opts ...client.CallOption) (*ReadEmployeeInfoResponse, error)
	PutEmployeeInfo(ctx context.Context, in *PutEmployeeInfoRequest, opts ...client.CallOption) (*PutEmployeeInfoResponse, error)
	CheckValidEmployee(ctx context.Context, in *ReadEmployeeInfoRequest, opts ...client.CallOption) (*CheckValidEmployeeResponse, error)
	DeleteEmployee(ctx context.Context, in *DeleteEmployeeRequest, opts ...client.CallOption) (*DeleteEmployeeResponse, error)
}

type teamServiceClient struct {
	c           client.Client
	serviceName string
}

func NewTeamServiceClient(serviceName string, c client.Client) TeamServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.team"
	}
	return &teamServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *teamServiceClient) All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.All", in)
	out := new(AllResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) Filter(ctx context.Context, in *FilterRequest, opts ...client.CallOption) (*FilterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.Filter", in)
	out := new(FilterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) AllTeamMember(ctx context.Context, in *AllTeamMemberRequest, opts ...client.CallOption) (*AllTeamMemberResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.AllTeamMember", in)
	out := new(AllTeamMemberResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) CreateTeamMember(ctx context.Context, in *CreateTeamMemberRequest, opts ...client.CallOption) (*CreateTeamMemberResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.CreateTeamMember", in)
	out := new(CreateTeamMemberResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) ReadTeamMember(ctx context.Context, in *ReadTeamMemberRequest, opts ...client.CallOption) (*ReadTeamMemberResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.ReadTeamMember", in)
	out := new(ReadTeamMemberResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) FilterTeamMember(ctx context.Context, in *FilterTeamMemberRequest, opts ...client.CallOption) (*FilterTeamMemberResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.FilterTeamMember", in)
	out := new(FilterTeamMemberResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) CreateEmployeeEdge(ctx context.Context, in *CreateEmployeeEdgeRequest, opts ...client.CallOption) (*CreateEmployeeEdgeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.CreateEmployeeEdge", in)
	out := new(CreateEmployeeEdgeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) CreateEmployeeProfile(ctx context.Context, in *CreateEmployeeProfileRequest, opts ...client.CallOption) (*CreateEmployeeProfileResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.CreateEmployeeProfile", in)
	out := new(CreateEmployeeProfileResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) CreateTeamMembership(ctx context.Context, in *CreateTeamMembershipRequest, opts ...client.CallOption) (*CreateTeamMembershipResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.CreateTeamMembership", in)
	out := new(CreateTeamMembershipResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) CreateEmployeeModuleAccess(ctx context.Context, in *CreateEmployeeModuleAccessRequest, opts ...client.CallOption) (*CreateEmployeeModuleAccessResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.CreateEmployeeModuleAccess", in)
	out := new(CreateEmployeeModuleAccessResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) GetAccessibleModulesByEmployee(ctx context.Context, in *GetAccessibleModulesByEmployeeRequest, opts ...client.CallOption) (*GetAccessibleModulesByEmployeeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.GetAccessibleModulesByEmployee", in)
	out := new(GetAccessibleModulesByEmployeeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) ReadEmployeeInfo(ctx context.Context, in *ReadEmployeeInfoRequest, opts ...client.CallOption) (*ReadEmployeeInfoResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.ReadEmployeeInfo", in)
	out := new(ReadEmployeeInfoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) PutEmployeeInfo(ctx context.Context, in *PutEmployeeInfoRequest, opts ...client.CallOption) (*PutEmployeeInfoResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.PutEmployeeInfo", in)
	out := new(PutEmployeeInfoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) CheckValidEmployee(ctx context.Context, in *ReadEmployeeInfoRequest, opts ...client.CallOption) (*CheckValidEmployeeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.CheckValidEmployee", in)
	out := new(CheckValidEmployeeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *teamServiceClient) DeleteEmployee(ctx context.Context, in *DeleteEmployeeRequest, opts ...client.CallOption) (*DeleteEmployeeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "TeamService.DeleteEmployee", in)
	out := new(DeleteEmployeeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TeamService service

type TeamServiceHandler interface {
	All(context.Context, *AllRequest, *AllResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Filter(context.Context, *FilterRequest, *FilterResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
	AllTeamMember(context.Context, *AllTeamMemberRequest, *AllTeamMemberResponse) error
	CreateTeamMember(context.Context, *CreateTeamMemberRequest, *CreateTeamMemberResponse) error
	ReadTeamMember(context.Context, *ReadTeamMemberRequest, *ReadTeamMemberResponse) error
	FilterTeamMember(context.Context, *FilterTeamMemberRequest, *FilterTeamMemberResponse) error
	CreateEmployeeEdge(context.Context, *CreateEmployeeEdgeRequest, *CreateEmployeeEdgeResponse) error
	CreateEmployeeProfile(context.Context, *CreateEmployeeProfileRequest, *CreateEmployeeProfileResponse) error
	CreateTeamMembership(context.Context, *CreateTeamMembershipRequest, *CreateTeamMembershipResponse) error
	CreateEmployeeModuleAccess(context.Context, *CreateEmployeeModuleAccessRequest, *CreateEmployeeModuleAccessResponse) error
	GetAccessibleModulesByEmployee(context.Context, *GetAccessibleModulesByEmployeeRequest, *GetAccessibleModulesByEmployeeResponse) error
	ReadEmployeeInfo(context.Context, *ReadEmployeeInfoRequest, *ReadEmployeeInfoResponse) error
	PutEmployeeInfo(context.Context, *PutEmployeeInfoRequest, *PutEmployeeInfoResponse) error
	CheckValidEmployee(context.Context, *ReadEmployeeInfoRequest, *CheckValidEmployeeResponse) error
	DeleteEmployee(context.Context, *DeleteEmployeeRequest, *DeleteEmployeeResponse) error
}

func RegisterTeamServiceHandler(s server.Server, hdlr TeamServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&TeamService{hdlr}, opts...))
}

type TeamService struct {
	TeamServiceHandler
}

func (h *TeamService) All(ctx context.Context, in *AllRequest, out *AllResponse) error {
	return h.TeamServiceHandler.All(ctx, in, out)
}

func (h *TeamService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.TeamServiceHandler.Create(ctx, in, out)
}

func (h *TeamService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.TeamServiceHandler.Update(ctx, in, out)
}

func (h *TeamService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.TeamServiceHandler.Read(ctx, in, out)
}

func (h *TeamService) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.TeamServiceHandler.Delete(ctx, in, out)
}

func (h *TeamService) Filter(ctx context.Context, in *FilterRequest, out *FilterResponse) error {
	return h.TeamServiceHandler.Filter(ctx, in, out)
}

func (h *TeamService) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.TeamServiceHandler.Search(ctx, in, out)
}

func (h *TeamService) AllTeamMember(ctx context.Context, in *AllTeamMemberRequest, out *AllTeamMemberResponse) error {
	return h.TeamServiceHandler.AllTeamMember(ctx, in, out)
}

func (h *TeamService) CreateTeamMember(ctx context.Context, in *CreateTeamMemberRequest, out *CreateTeamMemberResponse) error {
	return h.TeamServiceHandler.CreateTeamMember(ctx, in, out)
}

func (h *TeamService) ReadTeamMember(ctx context.Context, in *ReadTeamMemberRequest, out *ReadTeamMemberResponse) error {
	return h.TeamServiceHandler.ReadTeamMember(ctx, in, out)
}

func (h *TeamService) FilterTeamMember(ctx context.Context, in *FilterTeamMemberRequest, out *FilterTeamMemberResponse) error {
	return h.TeamServiceHandler.FilterTeamMember(ctx, in, out)
}

func (h *TeamService) CreateEmployeeEdge(ctx context.Context, in *CreateEmployeeEdgeRequest, out *CreateEmployeeEdgeResponse) error {
	return h.TeamServiceHandler.CreateEmployeeEdge(ctx, in, out)
}

func (h *TeamService) CreateEmployeeProfile(ctx context.Context, in *CreateEmployeeProfileRequest, out *CreateEmployeeProfileResponse) error {
	return h.TeamServiceHandler.CreateEmployeeProfile(ctx, in, out)
}

func (h *TeamService) CreateTeamMembership(ctx context.Context, in *CreateTeamMembershipRequest, out *CreateTeamMembershipResponse) error {
	return h.TeamServiceHandler.CreateTeamMembership(ctx, in, out)
}

func (h *TeamService) CreateEmployeeModuleAccess(ctx context.Context, in *CreateEmployeeModuleAccessRequest, out *CreateEmployeeModuleAccessResponse) error {
	return h.TeamServiceHandler.CreateEmployeeModuleAccess(ctx, in, out)
}

func (h *TeamService) GetAccessibleModulesByEmployee(ctx context.Context, in *GetAccessibleModulesByEmployeeRequest, out *GetAccessibleModulesByEmployeeResponse) error {
	return h.TeamServiceHandler.GetAccessibleModulesByEmployee(ctx, in, out)
}

func (h *TeamService) ReadEmployeeInfo(ctx context.Context, in *ReadEmployeeInfoRequest, out *ReadEmployeeInfoResponse) error {
	return h.TeamServiceHandler.ReadEmployeeInfo(ctx, in, out)
}

func (h *TeamService) PutEmployeeInfo(ctx context.Context, in *PutEmployeeInfoRequest, out *PutEmployeeInfoResponse) error {
	return h.TeamServiceHandler.PutEmployeeInfo(ctx, in, out)
}

func (h *TeamService) CheckValidEmployee(ctx context.Context, in *ReadEmployeeInfoRequest, out *CheckValidEmployeeResponse) error {
	return h.TeamServiceHandler.CheckValidEmployee(ctx, in, out)
}

func (h *TeamService) DeleteEmployee(ctx context.Context, in *DeleteEmployeeRequest, out *DeleteEmployeeResponse) error {
	return h.TeamServiceHandler.DeleteEmployee(ctx, in, out)
}

func init() { proto.RegisterFile("server/team-srv/proto/team/team.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1944 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x1a, 0x4d, 0x73, 0xdc, 0x48,
	0x75, 0x34, 0xdf, 0x7e, 0x63, 0xcf, 0x2e, 0x8d, 0x3f, 0xb4, 0x13, 0x1c, 0x7b, 0xbb, 0x2a, 0xac,
	0x77, 0x8d, 0xc7, 0x5b, 0x0e, 0xae, 0xdd, 0x14, 0xec, 0x2e, 0x93, 0x38, 0x26, 0x2e, 0x08, 0x31,
	0x4a, 0x42, 0x2e, 0x54, 0x05, 0x45, 0x6a, 0xdb, 0xc2, 0xd2, 0x68, 0x22, 0x69, 0x0c, 0xae, 0xe2,
	0x06, 0x27, 0xf8, 0x01, 0x14, 0x27, 0x4e, 0x9c, 0xa9, 0xca, 0x81, 0xe2, 0xc0, 0x89, 0x2b, 0x27,
	0x0a, 0x72, 0xe0, 0xc2, 0x19, 0x7e, 0x01, 0x70, 0xa3, 0xfa, 0x6b, 0x46, 0xd2, 0xb4, 0xc6, 0xd2,
	0xb8, 0xec, 0x2a, 0x5f, 0x32, 0xee, 0xd6, 0x7b, 0xaf, 0xdf, 0x47, 0xbf, 0xcf, 0x0e, 0xdc, 0x09,
	0x49, 0x70, 0x46, 0x82, 0xed, 0x88, 0x98, 0xde, 0x56, 0x18, 0x9c, 0x6d, 0x0f, 0x02, 0x3f, 0xf2,
	0xd9, 0x92, 0xfd, 0xd3, 0x65, 0x6b, 0xf4, 0xa5, 0x63, 0xbf, 0xeb, 0x39, 0x56, 0xe0, 0x77, 0xc3,
	0xe0, 0xac, 0x4b, 0x3f, 0x74, 0x36, 0x05, 0x66, 0x18, 0x99, 0x91, 0x63, 0xc5, 0x70, 0xf9, 0x86,
	0xf8, 0xe1, 0xf8, 0x9d, 0xae, 0x00, 0x36, 0x2d, 0xcb, 0x1f, 0xf6, 0xa3, 0x18, 0xb4, 0xd8, 0x91,
	0xbf, 0x02, 0xfe, 0x33, 0x01, 0xef, 0x07, 0xc7, 0x66, 0xdf, 0x09, 0xcd, 0xc8, 0xf1, 0xfb, 0x31,
	0xa4, 0xf8, 0x76, 0x62, 0x21, 0xd0, 0xa5, 0x54, 0xc3, 0x90, 0x04, 0x31, 0x34, 0xba, 0x64, 0xff,
	0xa4, 0xb8, 0x1a, 0x04, 0xbe, 0x3d, 0xb4, 0xe2, 0x5c, 0x89, 0x1d, 0xf9, 0xcb, 0xe1, 0xf1, 0x5d,
	0xa8, 0xee, 0x99, 0x91, 0x89, 0x36, 0xa1, 0x4a, 0x55, 0xa0, 0x6b, 0xeb, 0xda, 0x46, 0x6b, 0x67,
	0xa5, 0x3b, 0xa1, 0x9c, 0xee, 0x33, 0x62, 0x7a, 0x06, 0x03, 0xc2, 0x9f, 0x42, 0xa3, 0x17, 0x04,
	0x0c, 0x6f, 0x0b, 0x6a, 0x74, 0x2b, 0xd4, 0xb5, 0xf5, 0xca, 0x34, 0x44, 0x0e, 0x85, 0xff, 0xa8,
	0x01, 0xf4, 0x5c, 0xd7, 0x20, 0xaf, 0x87, 0x24, 0x8c, 0xd0, 0x12, 0xd4, 0xfd, 0xe0, 0xf8, 0xa5,
	0x63, 0xb3, 0x73, 0xe7, 0x8c, 0x9a, 0x1f, 0x1c, 0x1f, 0xd8, 0x68, 0x05, 0x1a, 0x14, 0x9c, 0xee,
	0x97, 0xd9, 0x7e, 0x9d, 0x2e, 0x0f, 0x6c, 0xb4, 0x08, 0x35, 0xd7, 0xf1, 0x9c, 0x48, 0xaf, 0xac,
	0x6b, 0x1b, 0x15, 0x83, 0x2f, 0xd0, 0x32, 0xd4, 0xfd, 0xa3, 0xa3, 0x90, 0x44, 0x7a, 0x95, 0x6d,
	0x8b, 0x15, 0xba, 0x03, 0xed, 0xd0, 0x0f, 0xa2, 0x97, 0x03, 0x33, 0x30, 0x3d, 0x12, 0x91, 0x40,
	0xaf, 0x31, 0x6a, 0x0b, 0x74, 0xf7, 0x50, 0x6e, 0x8e, 0xc0, 0x6c, 0x27, 0x20, 0x16, 0xd5, 0xb8,
	0x5e, 0x1f, 0x83, 0xed, 0xc9, 0x4d, 0x7c, 0x0a, 0x2d, 0xc6, 0x79, 0x38, 0xf0, 0xfb, 0x21, 0x41,
	0x5d, 0xa8, 0xda, 0x66, 0x64, 0x0a, 0x85, 0x75, 0x14, 0x72, 0x0b, 0x15, 0x19, 0x0c, 0x0e, 0x21,
	0xa8, 0x5a, 0xbe, 0x4d, 0x98, 0x40, 0x15, 0x83, 0xfd, 0x8d, 0x74, 0x68, 0x78, 0x24, 0x0c, 0xcd,
	0x63, 0xc2, 0x04, 0x9a, 0x33, 0xe4, 0x12, 0xbb, 0xb0, 0xf0, 0x20, 0x20, 0x66, 0x44, 0xa4, 0xa6,
	0x8a, 0xd8, 0x27, 0xa6, 0xd6, 0x72, 0x86, 0x5a, 0x2b, 0x71, 0xb5, 0xe2, 0x53, 0x68, 0xcb, 0xd3,
	0x84, 0x74, 0x9b, 0x09, 0xe9, 0x54, 0xc7, 0x5d, 0x46, 0xb4, 0xe7, 0x03, 0xfb, 0x1a, 0x45, 0x93,
	0xa7, 0x5d, 0xbd, 0x68, 0x8f, 0xa1, 0x65, 0x10, 0xd3, 0x96, 0x82, 0xb5, 0xa1, 0x3c, 0xba, 0xd9,
	0x65, 0xc7, 0x2e, 0xcc, 0xbb, 0x03, 0xf3, 0x9c, 0xdc, 0xd5, 0x73, 0xfe, 0x04, 0x16, 0xf6, 0x88,
	0x4b, 0xc6, 0x46, 0xb9, 0x2c, 0xef, 0x9f, 0x43, 0x5b, 0x12, 0x14, 0xdc, 0x17, 0x63, 0xe8, 0xad,
	0x06, 0x0b, 0xfb, 0x8e, 0x1b, 0x91, 0xe0, 0x06, 0xc6, 0x0a, 0x2a, 0x97, 0x08, 0xb3, 0x7a, 0x63,
	0xbd, 0x42, 0xe5, 0x12, 0x4b, 0xdc, 0x87, 0xb6, 0x14, 0xeb, 0x5a, 0x02, 0xc9, 0xff, 0x34, 0x58,
	0x78, 0x4a, 0xcc, 0xc0, 0x3a, 0xb9, 0x1e, 0x3d, 0xde, 0x82, 0x39, 0x46, 0xa6, 0x6f, 0x7a, 0x44,
	0xa8, 0xb0, 0x49, 0x37, 0xbe, 0x67, 0x7a, 0x04, 0xad, 0x41, 0x8b, 0x7d, 0xf4, 0x88, 0xf7, 0x8a,
	0x04, 0x42, 0x75, 0x40, 0xb7, 0x1e, 0xb3, 0x1d, 0x85, 0x15, 0x1a, 0xf9, 0xac, 0xd0, 0x54, 0x45,
	0xec, 0x3e, 0xb4, 0xa5, 0xe8, 0xd7, 0xa2, 0xeb, 0x3f, 0x6b, 0xb0, 0xd8, 0x73, 0xdd, 0x67, 0x23,
	0x79, 0x6e, 0x62, 0x9a, 0xfb, 0x8b, 0x06, 0x4b, 0x29, 0x21, 0x84, 0xf2, 0x7a, 0x09, 0xe5, 0x6d,
	0xa9, 0x94, 0xa7, 0xc2, 0x9b, 0x39, 0x28, 0x75, 0x7a, 0xa2, 0x36, 0xb9, 0x07, 0x73, 0xc4, 0x1b,
	0xb8, 0xfe, 0x39, 0x21, 0xb2, 0xce, 0xb8, 0xa5, 0x38, 0xfd, 0xa1, 0x80, 0x31, 0xc6, 0xd0, 0xf8,
	0x5f, 0x1a, 0xac, 0xf0, 0xd4, 0x36, 0x69, 0x95, 0x4d, 0xa8, 0xd2, 0xc2, 0x49, 0x1d, 0x4e, 0x59,
	0x49, 0xf5, 0x3c, 0x24, 0x81, 0xc1, 0x80, 0xd0, 0x27, 0xd0, 0x10, 0xe5, 0x1c, 0x63, 0xbe, 0xb5,
	0xb3, 0x9a, 0x84, 0x97, 0xb5, 0x5e, 0x8f, 0xff, 0x1a, 0x12, 0x1a, 0x7d, 0x02, 0x4d, 0xc9, 0x0e,
	0x93, 0xef, 0x02, 0xde, 0x47, 0xc0, 0xb1, 0x4b, 0x53, 0xcd, 0xb8, 0x34, 0xb5, 0x44, 0xc4, 0xfd,
	0x43, 0x19, 0xf4, 0x49, 0x51, 0x85, 0xed, 0xf6, 0x12, 0xb6, 0xfb, 0x58, 0xc1, 0x41, 0x16, 0xea,
	0xec, 0xe6, 0xfb, 0x9d, 0x26, 0xec, 0x17, 0x57, 0x81, 0x56, 0x44, 0x05, 0xd2, 0x42, 0xe5, 0x82,
	0x16, 0xaa, 0x14, 0xb1, 0x10, 0xfe, 0x11, 0x2c, 0xd1, 0x34, 0x3b, 0x79, 0x41, 0x56, 0xa0, 0x41,
	0x29, 0x8f, 0xfd, 0xb6, 0x4e, 0x97, 0x07, 0xc5, 0x93, 0xe1, 0x7f, 0x35, 0x58, 0x4e, 0x1f, 0x21,
	0x0c, 0x73, 0x3f, 0x61, 0x98, 0xae, 0x42, 0x2f, 0x6a, 0xc4, 0xd9, 0xcd, 0xe2, 0x8e, 0x2b, 0xfe,
	0x22, 0xd7, 0x7f, 0x6c, 0xc2, 0x72, 0x01, 0x13, 0xe2, 0x7f, 0x68, 0xb0, 0xc2, 0x13, 0xde, 0x8d,
	0x0e, 0x8b, 0x54, 0xc7, 0xac, 0x48, 0xe5, 0xe9, 0x9c, 0xb7, 0x41, 0x7f, 0xd5, 0x40, 0x9f, 0x94,
	0x2d, 0xb7, 0xc7, 0x65, 0xa1, 0x66, 0x99, 0xb6, 0x76, 0x1d, 0x01, 0xf3, 0x17, 0x1a, 0xbc, 0xc7,
	0x43, 0x81, 0xfc, 0xfa, 0xd0, 0x3e, 0x1e, 0x55, 0x85, 0x33, 0x7b, 0x72, 0xcc, 0x95, 0xca, 0x19,
	0xae, 0x54, 0x89, 0xdd, 0x01, 0xfc, 0x37, 0x0d, 0x3a, 0x2a, 0x36, 0x84, 0x72, 0xf7, 0x13, 0xca,
	0xdd, 0xc9, 0x0c, 0x67, 0x2a, 0xe4, 0xd9, 0x3d, 0xe7, 0x8b, 0x4b, 0xc6, 0x33, 0xfc, 0x43, 0xf8,
	0x4a, 0x92, 0xaf, 0xc3, 0xc0, 0x3f, 0x72, 0xdc, 0x91, 0x7a, 0xbf, 0xc9, 0xca, 0x46, 0xba, 0x23,
	0xe8, 0xe2, 0x29, 0x74, 0x25, 0xae, 0x44, 0xc1, 0xff, 0xd4, 0x60, 0x35, 0x83, 0xbc, 0x50, 0xdb,
	0x41, 0x42, 0x6d, 0xbb, 0x17, 0xaa, 0x2d, 0x85, 0x3f, 0xbb, 0xe6, 0xf6, 0x84, 0xe6, 0x2e, 0x27,
	0xe0, 0xcf, 0x35, 0xb8, 0x95, 0x4e, 0x53, 0xe1, 0x89, 0x33, 0xb8, 0xf4, 0xed, 0x2c, 0x92, 0x67,
	0xf0, 0x77, 0xa5, 0x11, 0xd3, 0x4c, 0xa4, 0xfa, 0x1c, 0x4d, 0xad, 0x99, 0x72, 0xb2, 0x66, 0xfc,
	0xa5, 0x06, 0xef, 0x27, 0x95, 0xfe, 0xd8, 0xb7, 0x87, 0x2e, 0xe9, 0x59, 0x16, 0x09, 0xc3, 0x0b,
	0x33, 0xd1, 0x2e, 0x34, 0x3c, 0x06, 0x1f, 0xea, 0x65, 0x95, 0x9f, 0x8b, 0x89, 0x15, 0xa7, 0x69,
	0x48, 0xd8, 0x2c, 0xaf, 0x33, 0x00, 0x4f, 0xe3, 0x65, 0x26, 0x01, 0x5f, 0xc0, 0x9d, 0x6f, 0x93,
	0x88, 0x93, 0x70, 0x5e, 0xb9, 0x82, 0x64, 0x78, 0xff, 0x7c, 0x64, 0x87, 0xd9, 0xb2, 0x2d, 0xfe,
	0xb7, 0x06, 0x5f, 0xbd, 0x88, 0xb2, 0xe0, 0xd8, 0x48, 0xdc, 0xfb, 0xcf, 0x15, 0x97, 0x22, 0x1f,
	0xa1, 0xd9, 0x1d, 0xe0, 0x33, 0xe1, 0x00, 0x31, 0x7b, 0x69, 0xf9, 0xed, 0x85, 0x4f, 0x60, 0x89,
	0x77, 0xd3, 0x69, 0xa5, 0xad, 0x41, 0x4b, 0xde, 0xe2, 0xb1, 0xe2, 0x40, 0x6e, 0xf1, 0x64, 0x5a,
	0x28, 0xf0, 0xee, 0xc3, 0x72, 0xfa, 0xa4, 0x99, 0xcc, 0xfe, 0xa6, 0x02, 0x55, 0xea, 0x20, 0x79,
	0x07, 0x09, 0x3a, 0x34, 0x2c, 0x76, 0xf5, 0x6c, 0x91, 0xdd, 0xe5, 0x92, 0x7e, 0x19, 0xb2, 0x09,
	0x8e, 0x2d, 0x12, 0xbc, 0x5c, 0x52, 0x8e, 0x62, 0x6d, 0x26, 0xfb, 0x1b, 0xad, 0x43, 0xcb, 0x26,
	0xa1, 0x15, 0x38, 0x83, 0x58, 0x2e, 0x8f, 0x6f, 0xd1, 0x2a, 0xc2, 0xf1, 0x28, 0xc7, 0xbc, 0xb5,
	0xe4, 0x0b, 0xba, 0x6b, 0xf9, 0xae, 0x1f, 0x88, 0x4e, 0x92, 0x2f, 0xd0, 0xb7, 0x60, 0x3e, 0xd6,
	0xb0, 0x86, 0xfa, 0x1c, 0xb3, 0xd9, 0x6a, 0xc6, 0x88, 0x4a, 0xa4, 0xf1, 0xd6, 0xb8, 0xa1, 0x0d,
	0xd1, 0x3d, 0x68, 0x8a, 0xd6, 0x3f, 0xd4, 0x41, 0x85, 0x2d, 0xc7, 0xb1, 0x87, 0xfc, 0xd7, 0x18,
	0x81, 0x53, 0xd4, 0x90, 0x04, 0x67, 0x8e, 0x45, 0x42, 0xbd, 0x35, 0x0d, 0xf5, 0x29, 0x87, 0x32,
	0x46, 0xe0, 0x68, 0x17, 0xe6, 0x84, 0xfa, 0xee, 0x9f, 0xeb, 0xf3, 0xd3, 0xa3, 0xda, 0x18, 0x12,
	0xff, 0x46, 0x83, 0x76, 0x32, 0xaa, 0x15, 0x1b, 0xce, 0x15, 0xaa, 0xd7, 0xb7, 0xa0, 0x1a, 0xf8,
	0xae, 0x6c, 0x8a, 0xde, 0x53, 0xfa, 0x81, 0xe1, 0xbb, 0xc4, 0x60, 0x60, 0xf8, 0x04, 0x60, 0xcc,
	0x5a, 0xb1, 0xe2, 0x55, 0x9e, 0x54, 0xce, 0x77, 0xd2, 0x9b, 0x0a, 0x34, 0xe5, 0xed, 0xbf, 0xca,
	0xeb, 0x2b, 0xd9, 0xaa, 0xe5, 0x62, 0x2b, 0x9e, 0x3b, 0xeb, 0x85, 0x73, 0xe7, 0x78, 0x4e, 0xdf,
	0xc8, 0x33, 0xa7, 0x1f, 0xe9, 0xb7, 0x99, 0x47, 0xbf, 0xdf, 0x81, 0xf9, 0xf8, 0x83, 0x85, 0x3e,
	0xc7, 0x90, 0x3e, 0x48, 0x22, 0x25, 0x9e, 0x34, 0x9e, 0xc4, 0x16, 0x46, 0x02, 0x39, 0x1e, 0x21,
	0xa1, 0x40, 0x84, 0xdc, 0x81, 0x15, 0xda, 0x28, 0x49, 0xf9, 0x0f, 0xfa, 0x47, 0xfe, 0x45, 0x89,
	0x05, 0xbf, 0x00, 0x7d, 0x12, 0x47, 0x44, 0xbb, 0x6f, 0x4c, 0xd4, 0x12, 0x6b, 0x53, 0xd4, 0xcd,
	0x50, 0xc7, 0x75, 0xde, 0x23, 0x58, 0x3e, 0x1c, 0x46, 0x45, 0x78, 0xc9, 0x4a, 0x72, 0xa7, 0xd0,
	0x79, 0x70, 0x42, 0xac, 0xd3, 0x1f, 0x98, 0xae, 0x63, 0x4f, 0x84, 0xe4, 0x45, 0xa8, 0x9d, 0xd1,
	0x0f, 0x8c, 0x56, 0xd3, 0xe0, 0x8b, 0x99, 0x27, 0x0e, 0xf8, 0xb7, 0x1a, 0xac, 0x4c, 0xf0, 0x2d,
	0x8e, 0x7a, 0x90, 0x48, 0xa1, 0xdb, 0x0a, 0x82, 0x19, 0x98, 0xb1, 0x9c, 0x79, 0xf9, 0x02, 0xfa,
	0x27, 0x30, 0x1f, 0x3f, 0xa3, 0x70, 0x87, 0x3e, 0xb3, 0x6a, 0xfe, 0xa3, 0xc1, 0x3b, 0x29, 0xdf,
	0xba, 0xca, 0xd0, 0xf0, 0x08, 0xda, 0xaf, 0x87, 0xa6, 0xeb, 0x1c, 0x39, 0x16, 0xf3, 0x8a, 0x50,
	0xaf, 0x31, 0x5f, 0x58, 0x57, 0x70, 0xfb, 0xfd, 0x38, 0xa0, 0x91, 0xc2, 0x43, 0x5f, 0x40, 0x8b,
	0xfc, 0x74, 0x40, 0x02, 0x87, 0xf4, 0x69, 0x1e, 0xa9, 0x67, 0x26, 0xb0, 0x87, 0x23, 0x28, 0x23,
	0x8e, 0x81, 0xff, 0xa4, 0xc1, 0x42, 0xe2, 0x88, 0xab, 0x94, 0x7b, 0x11, 0x6a, 0x91, 0x13, 0xb9,
	0x32, 0xa5, 0xf3, 0x05, 0x85, 0x0f, 0x87, 0x9e, 0x67, 0x06, 0xe7, 0x22, 0x9f, 0xcb, 0x65, 0x3a,
	0xdb, 0x37, 0x26, 0xb2, 0x3d, 0x7e, 0xab, 0x01, 0x8c, 0x45, 0xbb, 0x51, 0xbc, 0xa3, 0x0e, 0x34,
	0xed, 0x61, 0x60, 0xc6, 0x06, 0xdc, 0xa3, 0x35, 0xfe, 0xbb, 0x06, 0x5f, 0x16, 0xd5, 0xf9, 0x30,
	0x3a, 0xf1, 0x03, 0x19, 0x3e, 0xaf, 0x50, 0xc0, 0xbb, 0x50, 0xe7, 0xd1, 0x56, 0x64, 0xac, 0xa9,
	0x81, 0x59, 0x80, 0x8e, 0x92, 0x5c, 0x3d, 0x57, 0x92, 0xdb, 0xf9, 0xfd, 0xbb, 0xd0, 0xa2, 0x79,
	0x48, 0x94, 0x34, 0x68, 0x1f, 0x2a, 0x3d, 0xd7, 0x45, 0xab, 0xea, 0x61, 0xb3, 0x88, 0xaa, 0x9d,
	0xdb, 0x59, 0x9f, 0x79, 0x08, 0xc2, 0x25, 0xf4, 0x04, 0xea, 0xbc, 0xb3, 0x41, 0xeb, 0x99, 0x5d,
	0xaf, 0xa4, 0xf6, 0xfe, 0x14, 0x88, 0x38, 0x41, 0xfe, 0xae, 0xa8, 0x24, 0x98, 0x78, 0xe0, 0x54,
	0x12, 0x4c, 0x3e, 0x4a, 0xe2, 0x12, 0xed, 0xcd, 0x69, 0x32, 0x42, 0xb7, 0x33, 0x46, 0x80, 0x92,
	0xd8, 0x5a, 0xe6, 0xf7, 0x38, 0x6f, 0xbc, 0x86, 0x57, 0xf2, 0x96, 0x78, 0xe7, 0x53, 0xf2, 0x96,
	0x7c, 0xb8, 0xe3, 0x04, 0xf9, 0xb0, 0x4a, 0x49, 0x30, 0xf1, 0x4c, 0xa7, 0x24, 0x98, 0x7c, 0xf1,
	0xe2, 0x04, 0xf9, 0xcb, 0x8c, 0x92, 0x60, 0xe2, 0xbd, 0x4a, 0x49, 0x30, 0xf9, 0xac, 0x83, 0x4b,
	0xc8, 0x86, 0x85, 0xc4, 0xe3, 0x03, 0xfa, 0xe0, 0xe2, 0xe7, 0x09, 0x4e, 0x7e, 0x23, 0xef, 0x3b,
	0x06, 0x2e, 0x21, 0x0f, 0xde, 0x4d, 0xb7, 0xfe, 0xe8, 0xa3, 0x5c, 0xb3, 0x74, 0x7e, 0xd6, 0x66,
	0x81, 0xb9, 0x3b, 0x2e, 0xa1, 0x63, 0x68, 0x27, 0x87, 0xbf, 0x68, 0x23, 0xc7, 0x7c, 0x98, 0x1f,
	0xf5, 0x61, 0xee, 0x49, 0x32, 0x97, 0x2b, 0x3d, 0x8c, 0x54, 0xca, 0x95, 0x31, 0xc8, 0x55, 0xca,
	0x95, 0x35, 0xdd, 0xc4, 0x25, 0x14, 0x02, 0x9a, 0x1c, 0xcf, 0xa1, 0xaf, 0xe5, 0x9c, 0xe2, 0xf1,
	0x23, 0xb7, 0x0a, 0xcd, 0xfc, 0x70, 0x09, 0xfd, 0x0c, 0x96, 0x94, 0xc3, 0x2d, 0xb4, 0x9d, 0x7f,
	0x0c, 0xc6, 0x8f, 0xfe, 0xb8, 0xe8, 0xdc, 0x0c, 0x97, 0xd0, 0x39, 0x2c, 0xaa, 0x86, 0x46, 0xa8,
	0x9b, 0xe3, 0x46, 0xc4, 0x46, 0x5c, 0x9d, 0xed, 0xdc, 0xf0, 0xa3, 0xa3, 0x7f, 0x35, 0x31, 0x4a,
	0x8d, 0x4f, 0x75, 0xd0, 0xd7, 0x2f, 0x94, 0x46, 0x31, 0x90, 0xea, 0xec, 0x16, 0xc4, 0x1a, 0x71,
	0xf3, 0x6b, 0x0d, 0x6e, 0x4f, 0x1f, 0xb6, 0xa0, 0x4f, 0x67, 0x98, 0xcf, 0x70, 0xae, 0xee, 0xcd,
	0x3c, 0xd9, 0xe1, 0x4e, 0x90, 0xee, 0x06, 0x94, 0x4e, 0x90, 0xd1, 0x66, 0x28, 0x9d, 0x20, 0xab,
	0xbd, 0xc0, 0x25, 0xf4, 0x63, 0x78, 0x27, 0x55, 0x31, 0xa3, 0x0f, 0xf3, 0x54, 0xd5, 0xfc, 0xb0,
	0x8f, 0xf2, 0x17, 0xe0, 0xb8, 0x84, 0x5e, 0x03, 0x9a, 0xec, 0x22, 0x0a, 0x09, 0xa7, 0x74, 0xb7,
	0xcc, 0xc6, 0x84, 0xc7, 0xae, 0xe4, 0x1c, 0x49, 0x19, 0xbb, 0x94, 0x43, 0x2d, 0x65, 0xec, 0x52,
	0x0f, 0xa5, 0x70, 0xe9, 0x55, 0x9d, 0xfd, 0x3f, 0xb6, 0xbb, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff,
	0xbd, 0xf4, 0x23, 0x3e, 0xf6, 0x27, 0x00, 0x00,
}
