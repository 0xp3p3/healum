// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/content-srv/proto/content/content.proto

/*
Package go_micro_srv_content is a generated protocol buffer package.

It is generated from these files:
	server/content-srv/proto/content/content.proto

It has these top-level messages:
	SourceData
	SourceArrData
	TaxonomyData
	TaxonomyArrData
	ContentCategoryItemData
	ContentCategoryItemArrData
	ContentData
	ContentArrData
	ContentRuleData
	ContentRuleArrData
	AllSourcesRequest
	AllSourcesResponse
	CreateSourceRequest
	CreateSourceResponse
	UpdateSourceRequest
	UpdateSourceResponse
	ReadSourceRequest
	ReadSourceResponse
	DeleteSourceRequest
	DeleteSourceResponse
	AllTaxonomysRequest
	AllTaxonomysResponse
	CreateTaxonomyRequest
	CreateTaxonomyResponse
	UpdateTaxonomyRequest
	UpdateTaxonomyResponse
	ReadTaxonomyRequest
	ReadTaxonomyResponse
	DeleteTaxonomyRequest
	DeleteTaxonomyResponse
	AllContentCategoryItemsRequest
	AllContentCategoryItemsResponse
	CreateContentCategoryItemRequest
	CreateContentCategoryItemResponse
	UpdateContentCategoryItemRequest
	UpdateContentCategoryItemResponse
	ReadContentCategoryItemRequest
	ReadContentCategoryItemResponse
	DeleteContentCategoryItemRequest
	DeleteContentCategoryItemResponse
	AllContentsRequest
	AllContentsResponse
	CreateContentRequest
	CreateContentResponse
	UpdateContentRequest
	UpdateContentResponse
	ReadContentRequest
	ReadContentResponse
	DeleteContentRequest
	DeleteContentResponse
	AllContentRulesRequest
	AllContentRulesResponse
	UpdateContentRuleRequest
	UpdateContentRuleResponse
	CreateContentRuleRequest
	CreateContentRuleResponse
	ReadContentRuleRequest
	ReadContentRuleResponse
	DeleteContentRuleRequest
	DeleteContentRuleResponse
	FilterContentRequest
	FilterContentResponse
	SearchContentRequest
	SearchContentResponse
	CreateActivityContentRequest
	CreateRecipeContentRequest
	CreateExerciseContentRequest
	CreateArticleContentRequest
	CreatePlaceContentRequest
	CreateWellbeingContentRequest
	CreateVideoContentRequest
	CreateProductContentRequest
	CreateServiceContentRequest
	CreateEventContentRequest
	CreateResearchContentRequest
	CreateAppContentRequest
	CreateContentRecommendationRequest
	CreateContentRecommendationResponse
	GetContentCategorysRequest
	GetContentCategorysResponse
	GetContentDetailRequest
	GetContentDetailResponse
	GetContentByCategoryRequest
	GetContentByCategoryResponse
	GetFiltersForCategoryRequest
	GetFiltersForCategoryResponse
	FiltersAutocompleteRequest
	FiltersAutocompleteResponse
	FilterContentInParticularCategoryRequest
	FilterContentInParticularCategoryResponse
	GetContentRecommendationByUserRequest
	GetContentRecommendationByUserResponse
	GetContentRecommendationByCategoryRequest
	GetContentRecommendationByCategoryResponse
	GetRandomItemsRequest
	GetRandomItemsResponse
	GetAllSharedContentsRequest
	GetAllSharedContentsResponse
	GetContentRecommendationsRequest
	GetContentRecommendationsResponse
	GetContentFiltersByPreferenceRequest
	GetContentFiltersByPreferenceResponse
	FilterContentRecommendationsRequest
	FilterContentRecommendationsResponse
	Source
	Content
	ContentRule
	Expression
	Recipe
	Nutrition
	Ingredient
	Article
	Exercise
	Level
	Wellbeing
	Recurrence
	Place
	Geo
	OpeningHours
	Photo
	AltId
	Activity
	Restrictions
	Organizer
	Class
	ClassStatus
	ClassType
	Coach
	ActivityAttr
	Offer
	Contributor
	Park
	Borough
	SubEvent
	ShareContentRequest
	ShareContentResponse
	ShareContentUser
	CategoryResponse
	ContentResponse
	ContentRecommendation
	Recommendation
	Product
	Service
	Event
	Video
	Research
	SharedContent
	GetTopTagsRequest
	GetTopTagsResponse
	AutocompleteTagsRequest
	AutocompleteTagsResponse
	WarmupCacheContentRequest
	WarmupCacheContentResponse
	AutocompleteContentCategoryItemRequest
	AutocompleteContentCategoryItemResponse
	AllContentCategoryItemByNameslugRequest
	AllContentCategoryItemByNameslugResponse
	ContentCategoryItemResponse
*/
package go_micro_srv_content

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import go_micro_srv_static "server/static-srv/proto/static"
import go_micro_srv_user "server/user-srv/proto/user"
import go_micro_srv_todo "server/todo-srv/proto/todo"
import go_micro_srv_static1 "server/static-srv/proto/pubsub"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RuleType int32

const (
	RuleType_RuleType_NONE RuleType = 0
	RuleType_INCLUDE       RuleType = 1
	RuleType_EXCLUDE       RuleType = 2
)

var RuleType_name = map[int32]string{
	0: "RuleType_NONE",
	1: "INCLUDE",
	2: "EXCLUDE",
}
var RuleType_value = map[string]int32{
	"RuleType_NONE": 0,
	"INCLUDE":       1,
	"EXCLUDE":       2,
}

func (x RuleType) String() string {
	return proto.EnumName(RuleType_name, int32(x))
}
func (RuleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Operator int32

const (
	Operator_Operator_NONE Operator = 0
	Operator_PERCENTAGE    Operator = 1
	Operator_EQUAL         Operator = 2
	Operator_GTE           Operator = 3
	Operator_LTE           Operator = 4
)

var Operator_name = map[int32]string{
	0: "Operator_NONE",
	1: "PERCENTAGE",
	2: "EQUAL",
	3: "GTE",
	4: "LTE",
}
var Operator_value = map[string]int32{
	"Operator_NONE": 0,
	"PERCENTAGE":    1,
	"EQUAL":         2,
	"GTE":           3,
	"LTE":           4,
}

func (x Operator) String() string {
	return proto.EnumName(Operator_name, int32(x))
}
func (Operator) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SourceData struct {
	Source *Source `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
}

func (m *SourceData) Reset()                    { *m = SourceData{} }
func (m *SourceData) String() string            { return proto.CompactTextString(m) }
func (*SourceData) ProtoMessage()               {}
func (*SourceData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SourceData) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

type SourceArrData struct {
	Sources []*Source `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
}

func (m *SourceArrData) Reset()                    { *m = SourceArrData{} }
func (m *SourceArrData) String() string            { return proto.CompactTextString(m) }
func (*SourceArrData) ProtoMessage()               {}
func (*SourceArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SourceArrData) GetSources() []*Source {
	if m != nil {
		return m.Sources
	}
	return nil
}

type TaxonomyData struct {
	Taxonomy *go_micro_srv_static.Taxonomy `protobuf:"bytes,1,opt,name=taxonomy" json:"taxonomy,omitempty"`
}

func (m *TaxonomyData) Reset()                    { *m = TaxonomyData{} }
func (m *TaxonomyData) String() string            { return proto.CompactTextString(m) }
func (*TaxonomyData) ProtoMessage()               {}
func (*TaxonomyData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *TaxonomyData) GetTaxonomy() *go_micro_srv_static.Taxonomy {
	if m != nil {
		return m.Taxonomy
	}
	return nil
}

type TaxonomyArrData struct {
	Taxonomys []*go_micro_srv_static.Taxonomy `protobuf:"bytes,1,rep,name=taxonomys" json:"taxonomys,omitempty"`
}

func (m *TaxonomyArrData) Reset()                    { *m = TaxonomyArrData{} }
func (m *TaxonomyArrData) String() string            { return proto.CompactTextString(m) }
func (*TaxonomyArrData) ProtoMessage()               {}
func (*TaxonomyArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TaxonomyArrData) GetTaxonomys() []*go_micro_srv_static.Taxonomy {
	if m != nil {
		return m.Taxonomys
	}
	return nil
}

type ContentCategoryItemData struct {
	ContentCategoryItem *go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,1,opt,name=contentCategoryItem" json:"contentCategoryItem,omitempty"`
}

func (m *ContentCategoryItemData) Reset()                    { *m = ContentCategoryItemData{} }
func (m *ContentCategoryItemData) String() string            { return proto.CompactTextString(m) }
func (*ContentCategoryItemData) ProtoMessage()               {}
func (*ContentCategoryItemData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ContentCategoryItemData) GetContentCategoryItem() *go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.ContentCategoryItem
	}
	return nil
}

type ContentCategoryItemArrData struct {
	ContentCategoryItems []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,1,rep,name=contentCategoryItems" json:"contentCategoryItems,omitempty"`
}

func (m *ContentCategoryItemArrData) Reset()                    { *m = ContentCategoryItemArrData{} }
func (m *ContentCategoryItemArrData) String() string            { return proto.CompactTextString(m) }
func (*ContentCategoryItemArrData) ProtoMessage()               {}
func (*ContentCategoryItemArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ContentCategoryItemArrData) GetContentCategoryItems() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.ContentCategoryItems
	}
	return nil
}

type ContentData struct {
	Content *Content `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
}

func (m *ContentData) Reset()                    { *m = ContentData{} }
func (m *ContentData) String() string            { return proto.CompactTextString(m) }
func (*ContentData) ProtoMessage()               {}
func (*ContentData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ContentData) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

type ContentArrData struct {
	Contents []*Content `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
}

func (m *ContentArrData) Reset()                    { *m = ContentArrData{} }
func (m *ContentArrData) String() string            { return proto.CompactTextString(m) }
func (*ContentArrData) ProtoMessage()               {}
func (*ContentArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ContentArrData) GetContents() []*Content {
	if m != nil {
		return m.Contents
	}
	return nil
}

type ContentRuleData struct {
	ContentRule *ContentRule `protobuf:"bytes,1,opt,name=contentRule" json:"contentRule,omitempty"`
}

func (m *ContentRuleData) Reset()                    { *m = ContentRuleData{} }
func (m *ContentRuleData) String() string            { return proto.CompactTextString(m) }
func (*ContentRuleData) ProtoMessage()               {}
func (*ContentRuleData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ContentRuleData) GetContentRule() *ContentRule {
	if m != nil {
		return m.ContentRule
	}
	return nil
}

type ContentRuleArrData struct {
	ContentRules []*ContentRule `protobuf:"bytes,1,rep,name=contentRules" json:"contentRules,omitempty"`
}

func (m *ContentRuleArrData) Reset()                    { *m = ContentRuleArrData{} }
func (m *ContentRuleArrData) String() string            { return proto.CompactTextString(m) }
func (*ContentRuleArrData) ProtoMessage()               {}
func (*ContentRuleArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ContentRuleArrData) GetContentRules() []*ContentRule {
	if m != nil {
		return m.ContentRules
	}
	return nil
}

type AllSourcesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllSourcesRequest) Reset()                    { *m = AllSourcesRequest{} }
func (m *AllSourcesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllSourcesRequest) ProtoMessage()               {}
func (*AllSourcesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AllSourcesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllSourcesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllSourcesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllSourcesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllSourcesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllSourcesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllSourcesResponse struct {
	Data    *SourceArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllSourcesResponse) Reset()                    { *m = AllSourcesResponse{} }
func (m *AllSourcesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllSourcesResponse) ProtoMessage()               {}
func (*AllSourcesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AllSourcesResponse) GetData() *SourceArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllSourcesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllSourcesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateSourceRequest struct {
	Source *Source `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	OrgId  string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string  `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateSourceRequest) Reset()                    { *m = CreateSourceRequest{} }
func (m *CreateSourceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSourceRequest) ProtoMessage()               {}
func (*CreateSourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CreateSourceRequest) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *CreateSourceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateSourceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateSourceResponse struct {
	Data    *SourceData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateSourceResponse) Reset()                    { *m = CreateSourceResponse{} }
func (m *CreateSourceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSourceResponse) ProtoMessage()               {}
func (*CreateSourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CreateSourceResponse) GetData() *SourceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateSourceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateSourceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateSourceRequest struct {
	Source *Source `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	OrgId  string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string  `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateSourceRequest) Reset()                    { *m = UpdateSourceRequest{} }
func (m *UpdateSourceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSourceRequest) ProtoMessage()               {}
func (*UpdateSourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UpdateSourceRequest) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *UpdateSourceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateSourceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateSourceResponse struct {
	Data    *SourceData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateSourceResponse) Reset()                    { *m = UpdateSourceResponse{} }
func (m *UpdateSourceResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateSourceResponse) ProtoMessage()               {}
func (*UpdateSourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *UpdateSourceResponse) GetData() *SourceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateSourceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateSourceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadSourceRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadSourceRequest) Reset()                    { *m = ReadSourceRequest{} }
func (m *ReadSourceRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadSourceRequest) ProtoMessage()               {}
func (*ReadSourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ReadSourceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadSourceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadSourceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadSourceResponse struct {
	Data    *SourceData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadSourceResponse) Reset()                    { *m = ReadSourceResponse{} }
func (m *ReadSourceResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadSourceResponse) ProtoMessage()               {}
func (*ReadSourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ReadSourceResponse) GetData() *SourceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadSourceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadSourceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteSourceRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteSourceRequest) Reset()                    { *m = DeleteSourceRequest{} }
func (m *DeleteSourceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSourceRequest) ProtoMessage()               {}
func (*DeleteSourceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *DeleteSourceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteSourceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteSourceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteSourceResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteSourceResponse) Reset()                    { *m = DeleteSourceResponse{} }
func (m *DeleteSourceResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteSourceResponse) ProtoMessage()               {}
func (*DeleteSourceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *DeleteSourceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteSourceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllTaxonomysRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllTaxonomysRequest) Reset()                    { *m = AllTaxonomysRequest{} }
func (m *AllTaxonomysRequest) String() string            { return proto.CompactTextString(m) }
func (*AllTaxonomysRequest) ProtoMessage()               {}
func (*AllTaxonomysRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *AllTaxonomysRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllTaxonomysRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllTaxonomysRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllTaxonomysRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllTaxonomysRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllTaxonomysRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllTaxonomysResponse struct {
	Data    *TaxonomyArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllTaxonomysResponse) Reset()                    { *m = AllTaxonomysResponse{} }
func (m *AllTaxonomysResponse) String() string            { return proto.CompactTextString(m) }
func (*AllTaxonomysResponse) ProtoMessage()               {}
func (*AllTaxonomysResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *AllTaxonomysResponse) GetData() *TaxonomyArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllTaxonomysResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllTaxonomysResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateTaxonomyRequest struct {
	Taxonomy *go_micro_srv_static.Taxonomy `protobuf:"bytes,1,opt,name=taxonomy" json:"taxonomy,omitempty"`
	OrgId    string                        `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string                        `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateTaxonomyRequest) Reset()                    { *m = CreateTaxonomyRequest{} }
func (m *CreateTaxonomyRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTaxonomyRequest) ProtoMessage()               {}
func (*CreateTaxonomyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CreateTaxonomyRequest) GetTaxonomy() *go_micro_srv_static.Taxonomy {
	if m != nil {
		return m.Taxonomy
	}
	return nil
}

func (m *CreateTaxonomyRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateTaxonomyRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateTaxonomyResponse struct {
	Data    *TaxonomyData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateTaxonomyResponse) Reset()                    { *m = CreateTaxonomyResponse{} }
func (m *CreateTaxonomyResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTaxonomyResponse) ProtoMessage()               {}
func (*CreateTaxonomyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CreateTaxonomyResponse) GetData() *TaxonomyData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateTaxonomyResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateTaxonomyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateTaxonomyRequest struct {
	Taxonomy *go_micro_srv_static.Taxonomy `protobuf:"bytes,1,opt,name=taxonomy" json:"taxonomy,omitempty"`
	OrgId    string                        `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string                        `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateTaxonomyRequest) Reset()                    { *m = UpdateTaxonomyRequest{} }
func (m *UpdateTaxonomyRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTaxonomyRequest) ProtoMessage()               {}
func (*UpdateTaxonomyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *UpdateTaxonomyRequest) GetTaxonomy() *go_micro_srv_static.Taxonomy {
	if m != nil {
		return m.Taxonomy
	}
	return nil
}

func (m *UpdateTaxonomyRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateTaxonomyRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateTaxonomyResponse struct {
	Data    *TaxonomyData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateTaxonomyResponse) Reset()                    { *m = UpdateTaxonomyResponse{} }
func (m *UpdateTaxonomyResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateTaxonomyResponse) ProtoMessage()               {}
func (*UpdateTaxonomyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *UpdateTaxonomyResponse) GetData() *TaxonomyData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateTaxonomyResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateTaxonomyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadTaxonomyRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadTaxonomyRequest) Reset()                    { *m = ReadTaxonomyRequest{} }
func (m *ReadTaxonomyRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadTaxonomyRequest) ProtoMessage()               {}
func (*ReadTaxonomyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ReadTaxonomyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadTaxonomyRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadTaxonomyRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadTaxonomyResponse struct {
	Data    *TaxonomyData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadTaxonomyResponse) Reset()                    { *m = ReadTaxonomyResponse{} }
func (m *ReadTaxonomyResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadTaxonomyResponse) ProtoMessage()               {}
func (*ReadTaxonomyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ReadTaxonomyResponse) GetData() *TaxonomyData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadTaxonomyResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadTaxonomyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteTaxonomyRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteTaxonomyRequest) Reset()                    { *m = DeleteTaxonomyRequest{} }
func (m *DeleteTaxonomyRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTaxonomyRequest) ProtoMessage()               {}
func (*DeleteTaxonomyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *DeleteTaxonomyRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteTaxonomyRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteTaxonomyRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteTaxonomyResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteTaxonomyResponse) Reset()                    { *m = DeleteTaxonomyResponse{} }
func (m *DeleteTaxonomyResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteTaxonomyResponse) ProtoMessage()               {}
func (*DeleteTaxonomyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *DeleteTaxonomyResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteTaxonomyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllContentCategoryItemsRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllContentCategoryItemsRequest) Reset()                    { *m = AllContentCategoryItemsRequest{} }
func (m *AllContentCategoryItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*AllContentCategoryItemsRequest) ProtoMessage()               {}
func (*AllContentCategoryItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *AllContentCategoryItemsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllContentCategoryItemsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllContentCategoryItemsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllContentCategoryItemsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllContentCategoryItemsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllContentCategoryItemsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllContentCategoryItemsResponse struct {
	Data    *ContentCategoryItemArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllContentCategoryItemsResponse) Reset()         { *m = AllContentCategoryItemsResponse{} }
func (m *AllContentCategoryItemsResponse) String() string { return proto.CompactTextString(m) }
func (*AllContentCategoryItemsResponse) ProtoMessage()    {}
func (*AllContentCategoryItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{31}
}

func (m *AllContentCategoryItemsResponse) GetData() *ContentCategoryItemArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllContentCategoryItemsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllContentCategoryItemsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateContentCategoryItemRequest struct {
	ContentCategoryItem *go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,1,opt,name=contentCategoryItem" json:"contentCategoryItem,omitempty"`
	OrgId               string                                   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId              string                                   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateContentCategoryItemRequest) Reset()         { *m = CreateContentCategoryItemRequest{} }
func (m *CreateContentCategoryItemRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContentCategoryItemRequest) ProtoMessage()    {}
func (*CreateContentCategoryItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32}
}

func (m *CreateContentCategoryItemRequest) GetContentCategoryItem() *go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.ContentCategoryItem
	}
	return nil
}

func (m *CreateContentCategoryItemRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateContentCategoryItemRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentCategoryItemResponse struct {
	Data    *ContentCategoryItemData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateContentCategoryItemResponse) Reset()         { *m = CreateContentCategoryItemResponse{} }
func (m *CreateContentCategoryItemResponse) String() string { return proto.CompactTextString(m) }
func (*CreateContentCategoryItemResponse) ProtoMessage()    {}
func (*CreateContentCategoryItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{33}
}

func (m *CreateContentCategoryItemResponse) GetData() *ContentCategoryItemData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateContentCategoryItemResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateContentCategoryItemResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateContentCategoryItemRequest struct {
	ContentCategoryItem *go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,1,opt,name=contentCategoryItem" json:"contentCategoryItem,omitempty"`
	OrgId               string                                   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId              string                                   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateContentCategoryItemRequest) Reset()         { *m = UpdateContentCategoryItemRequest{} }
func (m *UpdateContentCategoryItemRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateContentCategoryItemRequest) ProtoMessage()    {}
func (*UpdateContentCategoryItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34}
}

func (m *UpdateContentCategoryItemRequest) GetContentCategoryItem() *go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.ContentCategoryItem
	}
	return nil
}

func (m *UpdateContentCategoryItemRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateContentCategoryItemRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateContentCategoryItemResponse struct {
	Data    *ContentCategoryItemData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateContentCategoryItemResponse) Reset()         { *m = UpdateContentCategoryItemResponse{} }
func (m *UpdateContentCategoryItemResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateContentCategoryItemResponse) ProtoMessage()    {}
func (*UpdateContentCategoryItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{35}
}

func (m *UpdateContentCategoryItemResponse) GetData() *ContentCategoryItemData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateContentCategoryItemResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateContentCategoryItemResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadContentCategoryItemRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadContentCategoryItemRequest) Reset()                    { *m = ReadContentCategoryItemRequest{} }
func (m *ReadContentCategoryItemRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadContentCategoryItemRequest) ProtoMessage()               {}
func (*ReadContentCategoryItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ReadContentCategoryItemRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadContentCategoryItemRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadContentCategoryItemRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadContentCategoryItemResponse struct {
	Data    *ContentCategoryItemData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadContentCategoryItemResponse) Reset()         { *m = ReadContentCategoryItemResponse{} }
func (m *ReadContentCategoryItemResponse) String() string { return proto.CompactTextString(m) }
func (*ReadContentCategoryItemResponse) ProtoMessage()    {}
func (*ReadContentCategoryItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{37}
}

func (m *ReadContentCategoryItemResponse) GetData() *ContentCategoryItemData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadContentCategoryItemResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadContentCategoryItemResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteContentCategoryItemRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteContentCategoryItemRequest) Reset()         { *m = DeleteContentCategoryItemRequest{} }
func (m *DeleteContentCategoryItemRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteContentCategoryItemRequest) ProtoMessage()    {}
func (*DeleteContentCategoryItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{38}
}

func (m *DeleteContentCategoryItemRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteContentCategoryItemRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteContentCategoryItemRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteContentCategoryItemResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteContentCategoryItemResponse) Reset()         { *m = DeleteContentCategoryItemResponse{} }
func (m *DeleteContentCategoryItemResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteContentCategoryItemResponse) ProtoMessage()    {}
func (*DeleteContentCategoryItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{39}
}

func (m *DeleteContentCategoryItemResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteContentCategoryItemResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllContentsRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllContentsRequest) Reset()                    { *m = AllContentsRequest{} }
func (m *AllContentsRequest) String() string            { return proto.CompactTextString(m) }
func (*AllContentsRequest) ProtoMessage()               {}
func (*AllContentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *AllContentsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllContentsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllContentsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllContentsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllContentsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllContentsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllContentsResponse struct {
	Data    *ContentArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64           `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllContentsResponse) Reset()                    { *m = AllContentsResponse{} }
func (m *AllContentsResponse) String() string            { return proto.CompactTextString(m) }
func (*AllContentsResponse) ProtoMessage()               {}
func (*AllContentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *AllContentsResponse) GetData() *ContentArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllContentsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllContentsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateContentRequest struct {
	Content *Content `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	UserId  string   `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId   string   `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId  string   `protobuf:"bytes,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateContentRequest) Reset()                    { *m = CreateContentRequest{} }
func (m *CreateContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateContentRequest) ProtoMessage()               {}
func (*CreateContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *CreateContentRequest) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CreateContentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentResponse struct {
	Data    *ContentData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateContentResponse) Reset()                    { *m = CreateContentResponse{} }
func (m *CreateContentResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateContentResponse) ProtoMessage()               {}
func (*CreateContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CreateContentResponse) GetData() *ContentData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateContentResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateContentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateContentRequest struct {
	Content *Content `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	UserId  string   `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId   string   `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId  string   `protobuf:"bytes,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateContentRequest) Reset()                    { *m = UpdateContentRequest{} }
func (m *UpdateContentRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateContentRequest) ProtoMessage()               {}
func (*UpdateContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *UpdateContentRequest) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *UpdateContentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateContentResponse struct {
	Data    *ContentData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateContentResponse) Reset()                    { *m = UpdateContentResponse{} }
func (m *UpdateContentResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateContentResponse) ProtoMessage()               {}
func (*UpdateContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *UpdateContentResponse) GetData() *ContentData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateContentResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateContentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadContentRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	UserId string `protobuf:"bytes,4,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *ReadContentRequest) Reset()                    { *m = ReadContentRequest{} }
func (m *ReadContentRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadContentRequest) ProtoMessage()               {}
func (*ReadContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *ReadContentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *ReadContentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type ReadContentResponse struct {
	Data    *ContentData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadContentResponse) Reset()                    { *m = ReadContentResponse{} }
func (m *ReadContentResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadContentResponse) ProtoMessage()               {}
func (*ReadContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *ReadContentResponse) GetData() *ContentData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadContentResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadContentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteContentRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteContentRequest) Reset()                    { *m = DeleteContentRequest{} }
func (m *DeleteContentRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteContentRequest) ProtoMessage()               {}
func (*DeleteContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *DeleteContentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteContentResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteContentResponse) Reset()                    { *m = DeleteContentResponse{} }
func (m *DeleteContentResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteContentResponse) ProtoMessage()               {}
func (*DeleteContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *DeleteContentResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteContentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllContentRulesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllContentRulesRequest) Reset()                    { *m = AllContentRulesRequest{} }
func (m *AllContentRulesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllContentRulesRequest) ProtoMessage()               {}
func (*AllContentRulesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *AllContentRulesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllContentRulesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllContentRulesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllContentRulesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllContentRulesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllContentRulesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllContentRulesResponse struct {
	Data    *ContentRuleArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64               `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllContentRulesResponse) Reset()                    { *m = AllContentRulesResponse{} }
func (m *AllContentRulesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllContentRulesResponse) ProtoMessage()               {}
func (*AllContentRulesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *AllContentRulesResponse) GetData() *ContentRuleArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllContentRulesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllContentRulesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateContentRuleRequest struct {
	ContentRule *ContentRule `protobuf:"bytes,1,opt,name=contentRule" json:"contentRule,omitempty"`
	OrgId       string       `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId      string       `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateContentRuleRequest) Reset()                    { *m = UpdateContentRuleRequest{} }
func (m *UpdateContentRuleRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateContentRuleRequest) ProtoMessage()               {}
func (*UpdateContentRuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *UpdateContentRuleRequest) GetContentRule() *ContentRule {
	if m != nil {
		return m.ContentRule
	}
	return nil
}

func (m *UpdateContentRuleRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateContentRuleRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateContentRuleResponse struct {
	Data    *ContentRuleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateContentRuleResponse) Reset()                    { *m = UpdateContentRuleResponse{} }
func (m *UpdateContentRuleResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateContentRuleResponse) ProtoMessage()               {}
func (*UpdateContentRuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *UpdateContentRuleResponse) GetData() *ContentRuleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateContentRuleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateContentRuleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateContentRuleRequest struct {
	ContentRule *ContentRule `protobuf:"bytes,1,opt,name=contentRule" json:"contentRule,omitempty"`
	OrgId       string       `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId      string       `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateContentRuleRequest) Reset()                    { *m = CreateContentRuleRequest{} }
func (m *CreateContentRuleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateContentRuleRequest) ProtoMessage()               {}
func (*CreateContentRuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *CreateContentRuleRequest) GetContentRule() *ContentRule {
	if m != nil {
		return m.ContentRule
	}
	return nil
}

func (m *CreateContentRuleRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateContentRuleRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentRuleResponse struct {
	Data    *ContentRuleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateContentRuleResponse) Reset()                    { *m = CreateContentRuleResponse{} }
func (m *CreateContentRuleResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateContentRuleResponse) ProtoMessage()               {}
func (*CreateContentRuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *CreateContentRuleResponse) GetData() *ContentRuleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateContentRuleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateContentRuleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadContentRuleRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadContentRuleRequest) Reset()                    { *m = ReadContentRuleRequest{} }
func (m *ReadContentRuleRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadContentRuleRequest) ProtoMessage()               {}
func (*ReadContentRuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *ReadContentRuleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadContentRuleRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadContentRuleRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadContentRuleResponse struct {
	Data    *ContentRuleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadContentRuleResponse) Reset()                    { *m = ReadContentRuleResponse{} }
func (m *ReadContentRuleResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadContentRuleResponse) ProtoMessage()               {}
func (*ReadContentRuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *ReadContentRuleResponse) GetData() *ContentRuleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadContentRuleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadContentRuleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteContentRuleRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteContentRuleRequest) Reset()                    { *m = DeleteContentRuleRequest{} }
func (m *DeleteContentRuleRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteContentRuleRequest) ProtoMessage()               {}
func (*DeleteContentRuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *DeleteContentRuleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteContentRuleRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteContentRuleRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteContentRuleResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteContentRuleResponse) Reset()                    { *m = DeleteContentRuleResponse{} }
func (m *DeleteContentRuleResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteContentRuleResponse) ProtoMessage()               {}
func (*DeleteContentRuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *DeleteContentRuleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteContentRuleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterContentRequest struct {
	OrgId                   string   `protobuf:"bytes,11,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId                  string   `protobuf:"bytes,12,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit                   int64    `protobuf:"varint,13,opt,name=limit" json:"limit,omitempty"`
	Offset                  int64    `protobuf:"varint,14,opt,name=offset" json:"offset,omitempty"`
	SortParameter           string   `protobuf:"bytes,15,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection           string   `protobuf:"bytes,16,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
	Sources                 []string `protobuf:"bytes,1,rep,name=sources" json:"sources,omitempty"`
	SourceTypes             []string `protobuf:"bytes,2,rep,name=sourceTypes" json:"sourceTypes,omitempty"`
	ContentTypes            []string `protobuf:"bytes,3,rep,name=contentTypes" json:"contentTypes,omitempty"`
	ContentParentCategories []string `protobuf:"bytes,4,rep,name=contentParentCategories" json:"contentParentCategories,omitempty"`
	ContentCategories       []string `protobuf:"bytes,5,rep,name=contentCategories" json:"contentCategories,omitempty"`
	ContentCategoryItems    []string `protobuf:"bytes,6,rep,name=contentCategoryItems" json:"contentCategoryItems,omitempty"`
	Type                    []string `protobuf:"bytes,7,rep,name=type" json:"type,omitempty"`
	CreatedBy               []string `protobuf:"bytes,8,rep,name=created_by,json=createdBy" json:"created_by,omitempty"`
}

func (m *FilterContentRequest) Reset()                    { *m = FilterContentRequest{} }
func (m *FilterContentRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterContentRequest) ProtoMessage()               {}
func (*FilterContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *FilterContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterContentRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterContentRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterContentRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterContentRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

func (m *FilterContentRequest) GetSources() []string {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *FilterContentRequest) GetSourceTypes() []string {
	if m != nil {
		return m.SourceTypes
	}
	return nil
}

func (m *FilterContentRequest) GetContentTypes() []string {
	if m != nil {
		return m.ContentTypes
	}
	return nil
}

func (m *FilterContentRequest) GetContentParentCategories() []string {
	if m != nil {
		return m.ContentParentCategories
	}
	return nil
}

func (m *FilterContentRequest) GetContentCategories() []string {
	if m != nil {
		return m.ContentCategories
	}
	return nil
}

func (m *FilterContentRequest) GetContentCategoryItems() []string {
	if m != nil {
		return m.ContentCategoryItems
	}
	return nil
}

func (m *FilterContentRequest) GetType() []string {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *FilterContentRequest) GetCreatedBy() []string {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

type FilterContentResponse struct {
	Data    *ContentArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64           `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterContentResponse) Reset()                    { *m = FilterContentResponse{} }
func (m *FilterContentResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterContentResponse) ProtoMessage()               {}
func (*FilterContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *FilterContentResponse) GetData() *ContentArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterContentResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterContentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SearchContentRequest struct {
	OrgId       string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId      string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit       int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset      int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Summary     string `protobuf:"bytes,6,opt,name=summary" json:"summary,omitempty"`
	Description string `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
}

func (m *SearchContentRequest) Reset()                    { *m = SearchContentRequest{} }
func (m *SearchContentRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchContentRequest) ProtoMessage()               {}
func (*SearchContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *SearchContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SearchContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *SearchContentRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchContentRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchContentRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SearchContentRequest) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *SearchContentRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type SearchContentResponse struct {
	Data    *SearchContentResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SearchContentResponse) Reset()                    { *m = SearchContentResponse{} }
func (m *SearchContentResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchContentResponse) ProtoMessage()               {}
func (*SearchContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *SearchContentResponse) GetData() *SearchContentResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SearchContentResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SearchContentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SearchContentResponse_Data struct {
	Contents []*Content `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
}

func (m *SearchContentResponse_Data) Reset()                    { *m = SearchContentResponse_Data{} }
func (m *SearchContentResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*SearchContentResponse_Data) ProtoMessage()               {}
func (*SearchContentResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63, 0} }

func (m *SearchContentResponse_Data) GetContents() []*Content {
	if m != nil {
		return m.Contents
	}
	return nil
}

type CreateActivityContentRequest struct {
	Activitys []*Activity `protobuf:"bytes,1,rep,name=activitys" json:"activitys,omitempty"`
	OrgId     string      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId    string      `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateActivityContentRequest) Reset()                    { *m = CreateActivityContentRequest{} }
func (m *CreateActivityContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateActivityContentRequest) ProtoMessage()               {}
func (*CreateActivityContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *CreateActivityContentRequest) GetActivitys() []*Activity {
	if m != nil {
		return m.Activitys
	}
	return nil
}

func (m *CreateActivityContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateActivityContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateRecipeContentRequest struct {
	Recipes []*Recipe `protobuf:"bytes,1,rep,name=recipes" json:"recipes,omitempty"`
	OrgId   string    `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId  string    `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateRecipeContentRequest) Reset()                    { *m = CreateRecipeContentRequest{} }
func (m *CreateRecipeContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRecipeContentRequest) ProtoMessage()               {}
func (*CreateRecipeContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *CreateRecipeContentRequest) GetRecipes() []*Recipe {
	if m != nil {
		return m.Recipes
	}
	return nil
}

func (m *CreateRecipeContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateRecipeContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateExerciseContentRequest struct {
	Exercises []*Exercise `protobuf:"bytes,1,rep,name=exercises" json:"exercises,omitempty"`
	OrgId     string      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId    string      `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateExerciseContentRequest) Reset()                    { *m = CreateExerciseContentRequest{} }
func (m *CreateExerciseContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateExerciseContentRequest) ProtoMessage()               {}
func (*CreateExerciseContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *CreateExerciseContentRequest) GetExercises() []*Exercise {
	if m != nil {
		return m.Exercises
	}
	return nil
}

func (m *CreateExerciseContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateExerciseContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateArticleContentRequest struct {
	Articles []*Article `protobuf:"bytes,1,rep,name=articles" json:"articles,omitempty"`
	OrgId    string     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string     `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateArticleContentRequest) Reset()                    { *m = CreateArticleContentRequest{} }
func (m *CreateArticleContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateArticleContentRequest) ProtoMessage()               {}
func (*CreateArticleContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *CreateArticleContentRequest) GetArticles() []*Article {
	if m != nil {
		return m.Articles
	}
	return nil
}

func (m *CreateArticleContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateArticleContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreatePlaceContentRequest struct {
	Places []*Place `protobuf:"bytes,1,rep,name=places" json:"places,omitempty"`
	OrgId  string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreatePlaceContentRequest) Reset()                    { *m = CreatePlaceContentRequest{} }
func (m *CreatePlaceContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePlaceContentRequest) ProtoMessage()               {}
func (*CreatePlaceContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *CreatePlaceContentRequest) GetPlaces() []*Place {
	if m != nil {
		return m.Places
	}
	return nil
}

func (m *CreatePlaceContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreatePlaceContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateWellbeingContentRequest struct {
	Wellbeings []*Wellbeing `protobuf:"bytes,1,rep,name=wellbeings" json:"wellbeings,omitempty"`
	OrgId      string       `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId     string       `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateWellbeingContentRequest) Reset()                    { *m = CreateWellbeingContentRequest{} }
func (m *CreateWellbeingContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateWellbeingContentRequest) ProtoMessage()               {}
func (*CreateWellbeingContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *CreateWellbeingContentRequest) GetWellbeings() []*Wellbeing {
	if m != nil {
		return m.Wellbeings
	}
	return nil
}

func (m *CreateWellbeingContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateWellbeingContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateVideoContentRequest struct {
	Videos []*Video `protobuf:"bytes,1,rep,name=videos" json:"videos,omitempty"`
	OrgId  string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateVideoContentRequest) Reset()                    { *m = CreateVideoContentRequest{} }
func (m *CreateVideoContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateVideoContentRequest) ProtoMessage()               {}
func (*CreateVideoContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *CreateVideoContentRequest) GetVideos() []*Video {
	if m != nil {
		return m.Videos
	}
	return nil
}

func (m *CreateVideoContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateVideoContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateProductContentRequest struct {
	Products []*Product `protobuf:"bytes,1,rep,name=products" json:"products,omitempty"`
	OrgId    string     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string     `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateProductContentRequest) Reset()                    { *m = CreateProductContentRequest{} }
func (m *CreateProductContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProductContentRequest) ProtoMessage()               {}
func (*CreateProductContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *CreateProductContentRequest) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *CreateProductContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateProductContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateServiceContentRequest struct {
	Services []*Service `protobuf:"bytes,1,rep,name=services" json:"services,omitempty"`
	OrgId    string     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string     `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateServiceContentRequest) Reset()                    { *m = CreateServiceContentRequest{} }
func (m *CreateServiceContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateServiceContentRequest) ProtoMessage()               {}
func (*CreateServiceContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *CreateServiceContentRequest) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *CreateServiceContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateServiceContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateEventContentRequest struct {
	Events []*Event `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	OrgId  string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateEventContentRequest) Reset()                    { *m = CreateEventContentRequest{} }
func (m *CreateEventContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateEventContentRequest) ProtoMessage()               {}
func (*CreateEventContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *CreateEventContentRequest) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *CreateEventContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateEventContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateResearchContentRequest struct {
	Researchs []*Research `protobuf:"bytes,1,rep,name=researchs" json:"researchs,omitempty"`
	OrgId     string      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId    string      `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateResearchContentRequest) Reset()                    { *m = CreateResearchContentRequest{} }
func (m *CreateResearchContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateResearchContentRequest) ProtoMessage()               {}
func (*CreateResearchContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *CreateResearchContentRequest) GetResearchs() []*Research {
	if m != nil {
		return m.Researchs
	}
	return nil
}

func (m *CreateResearchContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateResearchContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateAppContentRequest struct {
	Apps   []*go_micro_srv_static.App `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
	OrgId  string                     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string                     `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateAppContentRequest) Reset()                    { *m = CreateAppContentRequest{} }
func (m *CreateAppContentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAppContentRequest) ProtoMessage()               {}
func (*CreateAppContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *CreateAppContentRequest) GetApps() []*go_micro_srv_static.App {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *CreateAppContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateAppContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentRecommendationRequest struct {
	Recommendation *ContentRecommendation `protobuf:"bytes,1,opt,name=recommendation" json:"recommendation,omitempty"`
	OrgId          string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId         string                 `protobuf:"bytes,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateContentRecommendationRequest) Reset()         { *m = CreateContentRecommendationRequest{} }
func (m *CreateContentRecommendationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContentRecommendationRequest) ProtoMessage()    {}
func (*CreateContentRecommendationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{76}
}

func (m *CreateContentRecommendationRequest) GetRecommendation() *ContentRecommendation {
	if m != nil {
		return m.Recommendation
	}
	return nil
}

func (m *CreateContentRecommendationRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateContentRecommendationRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentRecommendationResponse struct {
	Data    *CreateContentRecommendationResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateContentRecommendationResponse) Reset()         { *m = CreateContentRecommendationResponse{} }
func (m *CreateContentRecommendationResponse) String() string { return proto.CompactTextString(m) }
func (*CreateContentRecommendationResponse) ProtoMessage()    {}
func (*CreateContentRecommendationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{77}
}

func (m *CreateContentRecommendationResponse) GetData() *CreateContentRecommendationResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateContentRecommendationResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateContentRecommendationResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateContentRecommendationResponse_Data struct {
	Recommendation *ContentRecommendation `protobuf:"bytes,1,opt,name=recommendation" json:"recommendation,omitempty"`
}

func (m *CreateContentRecommendationResponse_Data) Reset() {
	*m = CreateContentRecommendationResponse_Data{}
}
func (m *CreateContentRecommendationResponse_Data) String() string { return proto.CompactTextString(m) }
func (*CreateContentRecommendationResponse_Data) ProtoMessage()    {}
func (*CreateContentRecommendationResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{77, 0}
}

func (m *CreateContentRecommendationResponse_Data) GetRecommendation() *ContentRecommendation {
	if m != nil {
		return m.Recommendation
	}
	return nil
}

type GetContentCategorysRequest struct {
}

func (m *GetContentCategorysRequest) Reset()                    { *m = GetContentCategorysRequest{} }
func (m *GetContentCategorysRequest) String() string            { return proto.CompactTextString(m) }
func (*GetContentCategorysRequest) ProtoMessage()               {}
func (*GetContentCategorysRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

type GetContentCategorysResponse struct {
	Data    *GetContentCategorysResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                             `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                            `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetContentCategorysResponse) Reset()                    { *m = GetContentCategorysResponse{} }
func (m *GetContentCategorysResponse) String() string            { return proto.CompactTextString(m) }
func (*GetContentCategorysResponse) ProtoMessage()               {}
func (*GetContentCategorysResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *GetContentCategorysResponse) GetData() *GetContentCategorysResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetContentCategorysResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetContentCategorysResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetContentCategorysResponse_Data struct {
	Categorys []*CategoryResponse `protobuf:"bytes,1,rep,name=categorys" json:"categorys,omitempty"`
}

func (m *GetContentCategorysResponse_Data) Reset()         { *m = GetContentCategorysResponse_Data{} }
func (m *GetContentCategorysResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetContentCategorysResponse_Data) ProtoMessage()    {}
func (*GetContentCategorysResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{79, 0}
}

func (m *GetContentCategorysResponse_Data) GetCategorys() []*CategoryResponse {
	if m != nil {
		return m.Categorys
	}
	return nil
}

type GetContentDetailRequest struct {
	ContentId string `protobuf:"bytes,1,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
}

func (m *GetContentDetailRequest) Reset()                    { *m = GetContentDetailRequest{} }
func (m *GetContentDetailRequest) String() string            { return proto.CompactTextString(m) }
func (*GetContentDetailRequest) ProtoMessage()               {}
func (*GetContentDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *GetContentDetailRequest) GetContentId() string {
	if m != nil {
		return m.ContentId
	}
	return ""
}

type GetContentDetailResponse struct {
	Data    *GetContentDetailResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetContentDetailResponse) Reset()                    { *m = GetContentDetailResponse{} }
func (m *GetContentDetailResponse) String() string            { return proto.CompactTextString(m) }
func (*GetContentDetailResponse) ProtoMessage()               {}
func (*GetContentDetailResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *GetContentDetailResponse) GetData() *GetContentDetailResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetContentDetailResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetContentDetailResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetContentDetailResponse_Data struct {
	// string user_id = 1;
	Content    *Content `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	Rating     int64    `protobuf:"varint,3,opt,name=rating" json:"rating,omitempty"`
	Bookmarked bool     `protobuf:"varint,4,opt,name=bookmarked" json:"bookmarked,omitempty"`
}

func (m *GetContentDetailResponse_Data) Reset()         { *m = GetContentDetailResponse_Data{} }
func (m *GetContentDetailResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetContentDetailResponse_Data) ProtoMessage()    {}
func (*GetContentDetailResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{81, 0}
}

func (m *GetContentDetailResponse_Data) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *GetContentDetailResponse_Data) GetRating() int64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *GetContentDetailResponse_Data) GetBookmarked() bool {
	if m != nil {
		return m.Bookmarked
	}
	return false
}

type GetContentByCategoryRequest struct {
	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Offset     int64  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit      int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *GetContentByCategoryRequest) Reset()                    { *m = GetContentByCategoryRequest{} }
func (m *GetContentByCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetContentByCategoryRequest) ProtoMessage()               {}
func (*GetContentByCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *GetContentByCategoryRequest) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *GetContentByCategoryRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetContentByCategoryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetContentByCategoryResponse struct {
	Data    *GetContentByCategoryResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetContentByCategoryResponse) Reset()                    { *m = GetContentByCategoryResponse{} }
func (m *GetContentByCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetContentByCategoryResponse) ProtoMessage()               {}
func (*GetContentByCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *GetContentByCategoryResponse) GetData() *GetContentByCategoryResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetContentByCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetContentByCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetContentByCategoryResponse_Data struct {
	Contents []*ContentResponse `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
}

func (m *GetContentByCategoryResponse_Data) Reset()         { *m = GetContentByCategoryResponse_Data{} }
func (m *GetContentByCategoryResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetContentByCategoryResponse_Data) ProtoMessage()    {}
func (*GetContentByCategoryResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{83, 0}
}

func (m *GetContentByCategoryResponse_Data) GetContents() []*ContentResponse {
	if m != nil {
		return m.Contents
	}
	return nil
}

type GetFiltersForCategoryRequest struct {
	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
}

func (m *GetFiltersForCategoryRequest) Reset()                    { *m = GetFiltersForCategoryRequest{} }
func (m *GetFiltersForCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFiltersForCategoryRequest) ProtoMessage()               {}
func (*GetFiltersForCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *GetFiltersForCategoryRequest) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

type GetFiltersForCategoryResponse struct {
	Data    *ContentCategoryItemArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetFiltersForCategoryResponse) Reset()                    { *m = GetFiltersForCategoryResponse{} }
func (m *GetFiltersForCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetFiltersForCategoryResponse) ProtoMessage()               {}
func (*GetFiltersForCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *GetFiltersForCategoryResponse) GetData() *ContentCategoryItemArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetFiltersForCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetFiltersForCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FiltersAutocompleteRequest struct {
	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *FiltersAutocompleteRequest) Reset()                    { *m = FiltersAutocompleteRequest{} }
func (m *FiltersAutocompleteRequest) String() string            { return proto.CompactTextString(m) }
func (*FiltersAutocompleteRequest) ProtoMessage()               {}
func (*FiltersAutocompleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *FiltersAutocompleteRequest) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *FiltersAutocompleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FiltersAutocompleteResponse struct {
	Data    *FiltersAutocompleteResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                             `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                            `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FiltersAutocompleteResponse) Reset()                    { *m = FiltersAutocompleteResponse{} }
func (m *FiltersAutocompleteResponse) String() string            { return proto.CompactTextString(m) }
func (*FiltersAutocompleteResponse) ProtoMessage()               {}
func (*FiltersAutocompleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *FiltersAutocompleteResponse) GetData() *FiltersAutocompleteResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FiltersAutocompleteResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FiltersAutocompleteResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FiltersAutocompleteResponse_Data struct {
	ContentCategoryItems []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,2,rep,name=contentCategoryItems" json:"contentCategoryItems,omitempty"`
}

func (m *FiltersAutocompleteResponse_Data) Reset()         { *m = FiltersAutocompleteResponse_Data{} }
func (m *FiltersAutocompleteResponse_Data) String() string { return proto.CompactTextString(m) }
func (*FiltersAutocompleteResponse_Data) ProtoMessage()    {}
func (*FiltersAutocompleteResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{87, 0}
}

func (m *FiltersAutocompleteResponse_Data) GetContentCategoryItems() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.ContentCategoryItems
	}
	return nil
}

type FilterContentInParticularCategoryRequest struct {
	CategoryId           string   `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	ContentCategoryItems []string `protobuf:"bytes,2,rep,name=contentCategoryItems" json:"contentCategoryItems,omitempty"`
}

func (m *FilterContentInParticularCategoryRequest) Reset() {
	*m = FilterContentInParticularCategoryRequest{}
}
func (m *FilterContentInParticularCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*FilterContentInParticularCategoryRequest) ProtoMessage()    {}
func (*FilterContentInParticularCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{88}
}

func (m *FilterContentInParticularCategoryRequest) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *FilterContentInParticularCategoryRequest) GetContentCategoryItems() []string {
	if m != nil {
		return m.ContentCategoryItems
	}
	return nil
}

type FilterContentInParticularCategoryResponse struct {
	Data    *FilterContentInParticularCategoryResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                           `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                          `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterContentInParticularCategoryResponse) Reset() {
	*m = FilterContentInParticularCategoryResponse{}
}
func (m *FilterContentInParticularCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*FilterContentInParticularCategoryResponse) ProtoMessage()    {}
func (*FilterContentInParticularCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{89}
}

func (m *FilterContentInParticularCategoryResponse) GetData() *FilterContentInParticularCategoryResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterContentInParticularCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterContentInParticularCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterContentInParticularCategoryResponse_Data struct {
	Contents []*ContentResponse `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
}

func (m *FilterContentInParticularCategoryResponse_Data) Reset() {
	*m = FilterContentInParticularCategoryResponse_Data{}
}
func (m *FilterContentInParticularCategoryResponse_Data) String() string {
	return proto.CompactTextString(m)
}
func (*FilterContentInParticularCategoryResponse_Data) ProtoMessage() {}
func (*FilterContentInParticularCategoryResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{89, 0}
}

func (m *FilterContentInParticularCategoryResponse_Data) GetContents() []*ContentResponse {
	if m != nil {
		return m.Contents
	}
	return nil
}

type GetContentRecommendationByUserRequest struct {
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId         string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Offset        int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit         int64  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *GetContentRecommendationByUserRequest) Reset()         { *m = GetContentRecommendationByUserRequest{} }
func (m *GetContentRecommendationByUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetContentRecommendationByUserRequest) ProtoMessage()    {}
func (*GetContentRecommendationByUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{90}
}

func (m *GetContentRecommendationByUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetContentRecommendationByUserRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetContentRecommendationByUserRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetContentRecommendationByUserRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetContentRecommendationByUserRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *GetContentRecommendationByUserRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type GetContentRecommendationByUserResponse struct {
	Data    *GetContentRecommendationByUserResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetContentRecommendationByUserResponse) Reset() {
	*m = GetContentRecommendationByUserResponse{}
}
func (m *GetContentRecommendationByUserResponse) String() string { return proto.CompactTextString(m) }
func (*GetContentRecommendationByUserResponse) ProtoMessage()    {}
func (*GetContentRecommendationByUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{91}
}

func (m *GetContentRecommendationByUserResponse) GetData() *GetContentRecommendationByUserResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetContentRecommendationByUserResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetContentRecommendationByUserResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetContentRecommendationByUserResponse_Data struct {
	Recommendations []*Recommendation `protobuf:"bytes,1,rep,name=recommendations" json:"recommendations,omitempty"`
}

func (m *GetContentRecommendationByUserResponse_Data) Reset() {
	*m = GetContentRecommendationByUserResponse_Data{}
}
func (m *GetContentRecommendationByUserResponse_Data) String() string {
	return proto.CompactTextString(m)
}
func (*GetContentRecommendationByUserResponse_Data) ProtoMessage() {}
func (*GetContentRecommendationByUserResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{91, 0}
}

func (m *GetContentRecommendationByUserResponse_Data) GetRecommendations() []*Recommendation {
	if m != nil {
		return m.Recommendations
	}
	return nil
}

type GetContentRecommendationByCategoryRequest struct {
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId         string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Offset        int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit         int64  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	CategoryId    string `protobuf:"bytes,5,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	SortParameter string `protobuf:"bytes,6,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,7,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *GetContentRecommendationByCategoryRequest) Reset() {
	*m = GetContentRecommendationByCategoryRequest{}
}
func (m *GetContentRecommendationByCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetContentRecommendationByCategoryRequest) ProtoMessage()    {}
func (*GetContentRecommendationByCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{92}
}

func (m *GetContentRecommendationByCategoryRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetContentRecommendationByCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetContentRecommendationByCategoryRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetContentRecommendationByCategoryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetContentRecommendationByCategoryRequest) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *GetContentRecommendationByCategoryRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *GetContentRecommendationByCategoryRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type GetContentRecommendationByCategoryResponse struct {
	Data    *GetContentRecommendationByCategoryResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetContentRecommendationByCategoryResponse) Reset() {
	*m = GetContentRecommendationByCategoryResponse{}
}
func (m *GetContentRecommendationByCategoryResponse) String() string {
	return proto.CompactTextString(m)
}
func (*GetContentRecommendationByCategoryResponse) ProtoMessage() {}
func (*GetContentRecommendationByCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{93}
}

func (m *GetContentRecommendationByCategoryResponse) GetData() *GetContentRecommendationByCategoryResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetContentRecommendationByCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetContentRecommendationByCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetContentRecommendationByCategoryResponse_Data struct {
	Recommendations []*Recommendation `protobuf:"bytes,1,rep,name=recommendations" json:"recommendations,omitempty"`
}

func (m *GetContentRecommendationByCategoryResponse_Data) Reset() {
	*m = GetContentRecommendationByCategoryResponse_Data{}
}
func (m *GetContentRecommendationByCategoryResponse_Data) String() string {
	return proto.CompactTextString(m)
}
func (*GetContentRecommendationByCategoryResponse_Data) ProtoMessage() {}
func (*GetContentRecommendationByCategoryResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{93, 0}
}

func (m *GetContentRecommendationByCategoryResponse_Data) GetRecommendations() []*Recommendation {
	if m != nil {
		return m.Recommendations
	}
	return nil
}

type GetRandomItemsRequest struct {
	Count int64 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *GetRandomItemsRequest) Reset()                    { *m = GetRandomItemsRequest{} }
func (m *GetRandomItemsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRandomItemsRequest) ProtoMessage()               {}
func (*GetRandomItemsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *GetRandomItemsRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetRandomItemsResponse struct {
	Data    *ContentArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64           `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetRandomItemsResponse) Reset()                    { *m = GetRandomItemsResponse{} }
func (m *GetRandomItemsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetRandomItemsResponse) ProtoMessage()               {}
func (*GetRandomItemsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *GetRandomItemsResponse) GetData() *ContentArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetRandomItemsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetRandomItemsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAllSharedContentsRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
}

func (m *GetAllSharedContentsRequest) Reset()                    { *m = GetAllSharedContentsRequest{} }
func (m *GetAllSharedContentsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllSharedContentsRequest) ProtoMessage()               {}
func (*GetAllSharedContentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *GetAllSharedContentsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetAllSharedContentsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetAllSharedContentsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetAllSharedContentsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetAllSharedContentsResponse struct {
	Data    *GetAllSharedContentsResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetAllSharedContentsResponse) Reset()                    { *m = GetAllSharedContentsResponse{} }
func (m *GetAllSharedContentsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAllSharedContentsResponse) ProtoMessage()               {}
func (*GetAllSharedContentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *GetAllSharedContentsResponse) GetData() *GetAllSharedContentsResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetAllSharedContentsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAllSharedContentsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAllSharedContentsResponse_Data struct {
	ShareContentUsers []*ShareContentUser `protobuf:"bytes,1,rep,name=shareContentUsers" json:"shareContentUsers,omitempty"`
}

func (m *GetAllSharedContentsResponse_Data) Reset()         { *m = GetAllSharedContentsResponse_Data{} }
func (m *GetAllSharedContentsResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetAllSharedContentsResponse_Data) ProtoMessage()    {}
func (*GetAllSharedContentsResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{97, 0}
}

func (m *GetAllSharedContentsResponse_Data) GetShareContentUsers() []*ShareContentUser {
	if m != nil {
		return m.ShareContentUsers
	}
	return nil
}

type GetContentRecommendationsRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *GetContentRecommendationsRequest) Reset()         { *m = GetContentRecommendationsRequest{} }
func (m *GetContentRecommendationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetContentRecommendationsRequest) ProtoMessage()    {}
func (*GetContentRecommendationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{98}
}

func (m *GetContentRecommendationsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetContentRecommendationsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type GetContentRecommendationsResponse struct {
	Data    *GetContentRecommendationsResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetContentRecommendationsResponse) Reset()         { *m = GetContentRecommendationsResponse{} }
func (m *GetContentRecommendationsResponse) String() string { return proto.CompactTextString(m) }
func (*GetContentRecommendationsResponse) ProtoMessage()    {}
func (*GetContentRecommendationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{99}
}

func (m *GetContentRecommendationsResponse) GetData() *GetContentRecommendationsResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetContentRecommendationsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetContentRecommendationsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetContentRecommendationsResponse_Data struct {
	Recommendations []*ContentRecommendation `protobuf:"bytes,1,rep,name=recommendations" json:"recommendations,omitempty"`
}

func (m *GetContentRecommendationsResponse_Data) Reset() {
	*m = GetContentRecommendationsResponse_Data{}
}
func (m *GetContentRecommendationsResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetContentRecommendationsResponse_Data) ProtoMessage()    {}
func (*GetContentRecommendationsResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{99, 0}
}

func (m *GetContentRecommendationsResponse_Data) GetRecommendations() []*ContentRecommendation {
	if m != nil {
		return m.Recommendations
	}
	return nil
}

type GetContentFiltersByPreferenceRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *GetContentFiltersByPreferenceRequest) Reset()         { *m = GetContentFiltersByPreferenceRequest{} }
func (m *GetContentFiltersByPreferenceRequest) String() string { return proto.CompactTextString(m) }
func (*GetContentFiltersByPreferenceRequest) ProtoMessage()    {}
func (*GetContentFiltersByPreferenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{100}
}

func (m *GetContentFiltersByPreferenceRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetContentFiltersByPreferenceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type GetContentFiltersByPreferenceResponse struct {
	Data    *GetContentFiltersByPreferenceResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetContentFiltersByPreferenceResponse) Reset()         { *m = GetContentFiltersByPreferenceResponse{} }
func (m *GetContentFiltersByPreferenceResponse) String() string { return proto.CompactTextString(m) }
func (*GetContentFiltersByPreferenceResponse) ProtoMessage()    {}
func (*GetContentFiltersByPreferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{101}
}

func (m *GetContentFiltersByPreferenceResponse) GetData() *GetContentFiltersByPreferenceResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetContentFiltersByPreferenceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetContentFiltersByPreferenceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetContentFiltersByPreferenceResponse_Data struct {
	ContentCategoryItems []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,1,rep,name=contentCategoryItems" json:"contentCategoryItems,omitempty"`
}

func (m *GetContentFiltersByPreferenceResponse_Data) Reset() {
	*m = GetContentFiltersByPreferenceResponse_Data{}
}
func (m *GetContentFiltersByPreferenceResponse_Data) String() string {
	return proto.CompactTextString(m)
}
func (*GetContentFiltersByPreferenceResponse_Data) ProtoMessage() {}
func (*GetContentFiltersByPreferenceResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{101, 0}
}

func (m *GetContentFiltersByPreferenceResponse_Data) GetContentCategoryItems() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.ContentCategoryItems
	}
	return nil
}

type FilterContentRecommendationsRequest struct {
	Items  []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
	UserId string                                     `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string                                     `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *FilterContentRecommendationsRequest) Reset()         { *m = FilterContentRecommendationsRequest{} }
func (m *FilterContentRecommendationsRequest) String() string { return proto.CompactTextString(m) }
func (*FilterContentRecommendationsRequest) ProtoMessage()    {}
func (*FilterContentRecommendationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{102}
}

func (m *FilterContentRecommendationsRequest) GetItems() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *FilterContentRecommendationsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *FilterContentRecommendationsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type FilterContentRecommendationsResponse struct {
	Data    *FilterContentRecommendationsResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                      `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterContentRecommendationsResponse) Reset()         { *m = FilterContentRecommendationsResponse{} }
func (m *FilterContentRecommendationsResponse) String() string { return proto.CompactTextString(m) }
func (*FilterContentRecommendationsResponse) ProtoMessage()    {}
func (*FilterContentRecommendationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{103}
}

func (m *FilterContentRecommendationsResponse) GetData() *FilterContentRecommendationsResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterContentRecommendationsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterContentRecommendationsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterContentRecommendationsResponse_Data struct {
	Response []*ContentResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *FilterContentRecommendationsResponse_Data) Reset() {
	*m = FilterContentRecommendationsResponse_Data{}
}
func (m *FilterContentRecommendationsResponse_Data) String() string { return proto.CompactTextString(m) }
func (*FilterContentRecommendationsResponse_Data) ProtoMessage()    {}
func (*FilterContentRecommendationsResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{103, 0}
}

func (m *FilterContentRecommendationsResponse_Data) GetResponse() []*ContentResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// the url or the source of this content
type Source struct {
	Id                  string                                 `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name                string                                 `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description         string                                 `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	IconSlug            string                                 `protobuf:"bytes,4,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Url                 string                                 `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	IconUrl             string                                 `protobuf:"bytes,6,opt,name=icon_url,json=iconUrl" json:"icon_url,omitempty"`
	AttributionRequired bool                                   `protobuf:"varint,7,opt,name=attributionRequired" json:"attributionRequired,omitempty"`
	OrgId               string                                 `protobuf:"bytes,8,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created             int64                                  `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	Updated             int64                                  `protobuf:"varint,10,opt,name=updated" json:"updated,omitempty"`
	Tags                []string                               `protobuf:"bytes,11,rep,name=tags" json:"tags,omitempty"`
	Type                *go_micro_srv_static.ContentSourceType `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
}

func (m *Source) Reset()                    { *m = Source{} }
func (m *Source) String() string            { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()               {}
func (*Source) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *Source) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Source) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Source) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Source) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *Source) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Source) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *Source) GetAttributionRequired() bool {
	if m != nil {
		return m.AttributionRequired
	}
	return false
}

func (m *Source) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Source) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Source) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Source) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Source) GetType() *go_micro_srv_static.ContentSourceType {
	if m != nil {
		return m.Type
	}
	return nil
}

type Content struct {
	Id          string                                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title       string                                     `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Summary     string                                     `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description string                                     `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Image       string                                     `protobuf:"bytes,5,opt,name=image" json:"image,omitempty"`
	Created     int64                                      `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Updated     int64                                      `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	OrgId       string                                     `protobuf:"bytes,8,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	CreatedBy   *go_micro_srv_user.User                    `protobuf:"bytes,9,opt,name=createdBy" json:"createdBy,omitempty"`
	Url         string                                     `protobuf:"bytes,10,opt,name=url" json:"url,omitempty"`
	Author      string                                     `protobuf:"bytes,11,opt,name=author" json:"author,omitempty"`
	Timestamp   int64                                      `protobuf:"varint,12,opt,name=timestamp" json:"timestamp,omitempty"`
	Tags        []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,13,rep,name=tags" json:"tags,omitempty"`
	Type        *go_micro_srv_static.ContentType           `protobuf:"bytes,14,opt,name=type" json:"type,omitempty"`
	Source      *Source                                    `protobuf:"bytes,15,opt,name=source" json:"source,omitempty"`
	Category    *go_micro_srv_static.ContentCategory       `protobuf:"bytes,16,opt,name=category" json:"category,omitempty"`
	Item        *google_protobuf.Any                       `protobuf:"bytes,17,opt,name=item" json:"item,omitempty"`
	Hash        string                                     `protobuf:"bytes,18,opt,name=hash" json:"hash,omitempty"`
	Setting     *go_micro_srv_static.Setting               `protobuf:"bytes,19,opt,name=setting" json:"setting,omitempty"`
	Shares      []*go_micro_srv_user.User                  `protobuf:"bytes,20,rep,name=shares" json:"shares,omitempty"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *Content) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Content) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Content) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Content) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Content) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Content) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Content) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Content) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Content) GetCreatedBy() *go_micro_srv_user.User {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *Content) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Content) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Content) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Content) GetTags() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Content) GetType() *go_micro_srv_static.ContentType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Content) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Content) GetCategory() *go_micro_srv_static.ContentCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Content) GetItem() *google_protobuf.Any {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *Content) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Content) GetSetting() *go_micro_srv_static.Setting {
	if m != nil {
		return m.Setting
	}
	return nil
}

func (m *Content) GetShares() []*go_micro_srv_user.User {
	if m != nil {
		return m.Shares
	}
	return nil
}

type ContentRule struct {
	Id             string                                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId          string                                     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created        int64                                      `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated        int64                                      `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Type           RuleType                                   `protobuf:"varint,5,opt,name=type,enum=go.micro.srv.content.RuleType" json:"type,omitempty"`
	Source         *Source                                    `protobuf:"bytes,7,opt,name=source" json:"source,omitempty"`
	SourceType     *go_micro_srv_static.ContentSourceType     `protobuf:"bytes,9,opt,name=sourceType" json:"sourceType,omitempty"`
	ContentType    *go_micro_srv_static.ContentType           `protobuf:"bytes,11,opt,name=contentType" json:"contentType,omitempty"`
	ParentCategory *go_micro_srv_static.ContentParentCategory `protobuf:"bytes,13,opt,name=parentCategory" json:"parentCategory,omitempty"`
	Category       *go_micro_srv_static.ContentCategory       `protobuf:"bytes,15,opt,name=category" json:"category,omitempty"`
	CategoryItems  []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,17,rep,name=categoryItems" json:"categoryItems,omitempty"`
	Expression     *Expression                                `protobuf:"bytes,18,opt,name=expression" json:"expression,omitempty"`
}

func (m *ContentRule) Reset()                    { *m = ContentRule{} }
func (m *ContentRule) String() string            { return proto.CompactTextString(m) }
func (*ContentRule) ProtoMessage()               {}
func (*ContentRule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{106} }

func (m *ContentRule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContentRule) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ContentRule) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ContentRule) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ContentRule) GetType() RuleType {
	if m != nil {
		return m.Type
	}
	return RuleType_RuleType_NONE
}

func (m *ContentRule) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ContentRule) GetSourceType() *go_micro_srv_static.ContentSourceType {
	if m != nil {
		return m.SourceType
	}
	return nil
}

func (m *ContentRule) GetContentType() *go_micro_srv_static.ContentType {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *ContentRule) GetParentCategory() *go_micro_srv_static.ContentParentCategory {
	if m != nil {
		return m.ParentCategory
	}
	return nil
}

func (m *ContentRule) GetCategory() *go_micro_srv_static.ContentCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *ContentRule) GetCategoryItems() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.CategoryItems
	}
	return nil
}

func (m *ContentRule) GetExpression() *Expression {
	if m != nil {
		return m.Expression
	}
	return nil
}

type Expression struct {
	Operator Operator `protobuf:"varint,1,opt,name=operator,enum=go.micro.srv.content.Operator" json:"operator,omitempty"`
	Min      int64    `protobuf:"varint,2,opt,name=min" json:"min,omitempty"`
	Max      int64    `protobuf:"varint,3,opt,name=max" json:"max,omitempty"`
}

func (m *Expression) Reset()                    { *m = Expression{} }
func (m *Expression) String() string            { return proto.CompactTextString(m) }
func (*Expression) ProtoMessage()               {}
func (*Expression) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{107} }

func (m *Expression) GetOperator() Operator {
	if m != nil {
		return m.Operator
	}
	return Operator_Operator_NONE
}

func (m *Expression) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *Expression) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

type Recipe struct {
	Serves        float32                                    `protobuf:"fixed32,1,opt,name=serves" json:"serves,omitempty"`
	Diets         []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,2,rep,name=diets" json:"diets,omitempty"`
	Allergies     []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,3,rep,name=allergies" json:"allergies,omitempty"`
	Ingredients   []*Ingredient                              `protobuf:"bytes,4,rep,name=ingredients" json:"ingredients,omitempty"`
	TotalCalories float32                                    `protobuf:"fixed32,5,opt,name=totalCalories" json:"totalCalories,omitempty"`
	TotalWeight   float32                                    `protobuf:"fixed32,6,opt,name=totalWeight" json:"totalWeight,omitempty"`
	Nutrition     []*Nutrition                               `protobuf:"bytes,7,rep,name=nutrition" json:"nutrition,omitempty"`
	// the following can be missing and can be null
	CookingTime   int64    `protobuf:"varint,9,opt,name=cookingTime" json:"cookingTime,omitempty"`
	PrepTime      int64    `protobuf:"varint,10,opt,name=prepTime" json:"prepTime,omitempty"`
	CookingMethod string   `protobuf:"bytes,11,opt,name=cookingMethod" json:"cookingMethod,omitempty"`
	Instructions  []string `protobuf:"bytes,12,rep,name=instructions" json:"instructions,omitempty"`
	// set these details on content object
	Url      string   `protobuf:"bytes,13,opt,name=url" json:"url,omitempty"`
	Image    string   `protobuf:"bytes,14,opt,name=image" json:"image,omitempty"`
	Source   string   `protobuf:"bytes,15,opt,name=source" json:"source,omitempty"`
	Title    string   `protobuf:"bytes,16,opt,name=title" json:"title,omitempty"`
	Cautions []string `protobuf:"bytes,17,rep,name=cautions" json:"cautions,omitempty"`
}

func (m *Recipe) Reset()                    { *m = Recipe{} }
func (m *Recipe) String() string            { return proto.CompactTextString(m) }
func (*Recipe) ProtoMessage()               {}
func (*Recipe) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{108} }

func (m *Recipe) GetServes() float32 {
	if m != nil {
		return m.Serves
	}
	return 0
}

func (m *Recipe) GetDiets() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Diets
	}
	return nil
}

func (m *Recipe) GetAllergies() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Allergies
	}
	return nil
}

func (m *Recipe) GetIngredients() []*Ingredient {
	if m != nil {
		return m.Ingredients
	}
	return nil
}

func (m *Recipe) GetTotalCalories() float32 {
	if m != nil {
		return m.TotalCalories
	}
	return 0
}

func (m *Recipe) GetTotalWeight() float32 {
	if m != nil {
		return m.TotalWeight
	}
	return 0
}

func (m *Recipe) GetNutrition() []*Nutrition {
	if m != nil {
		return m.Nutrition
	}
	return nil
}

func (m *Recipe) GetCookingTime() int64 {
	if m != nil {
		return m.CookingTime
	}
	return 0
}

func (m *Recipe) GetPrepTime() int64 {
	if m != nil {
		return m.PrepTime
	}
	return 0
}

func (m *Recipe) GetCookingMethod() string {
	if m != nil {
		return m.CookingMethod
	}
	return ""
}

func (m *Recipe) GetInstructions() []string {
	if m != nil {
		return m.Instructions
	}
	return nil
}

func (m *Recipe) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Recipe) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Recipe) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Recipe) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Recipe) GetCautions() []string {
	if m != nil {
		return m.Cautions
	}
	return nil
}

type Nutrition struct {
	Label          string       `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Abbreviation   string       `protobuf:"bytes,2,opt,name=abbreviation" json:"abbreviation,omitempty"`
	TotalValue     float32      `protobuf:"fixed32,3,opt,name=totalValue" json:"totalValue,omitempty"`
	DailyAllowance float32      `protobuf:"fixed32,4,opt,name=daily_allowance,json=dailyAllowance" json:"daily_allowance,omitempty"`
	Unit           string       `protobuf:"bytes,5,opt,name=unit" json:"unit,omitempty"`
	Rdi            bool         `protobuf:"varint,6,opt,name=rdi" json:"rdi,omitempty"`
	Sub            []*Nutrition `protobuf:"bytes,7,rep,name=sub" json:"sub,omitempty"`
}

func (m *Nutrition) Reset()                    { *m = Nutrition{} }
func (m *Nutrition) String() string            { return proto.CompactTextString(m) }
func (*Nutrition) ProtoMessage()               {}
func (*Nutrition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{109} }

func (m *Nutrition) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Nutrition) GetAbbreviation() string {
	if m != nil {
		return m.Abbreviation
	}
	return ""
}

func (m *Nutrition) GetTotalValue() float32 {
	if m != nil {
		return m.TotalValue
	}
	return 0
}

func (m *Nutrition) GetDailyAllowance() float32 {
	if m != nil {
		return m.DailyAllowance
	}
	return 0
}

func (m *Nutrition) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *Nutrition) GetRdi() bool {
	if m != nil {
		return m.Rdi
	}
	return false
}

func (m *Nutrition) GetSub() []*Nutrition {
	if m != nil {
		return m.Sub
	}
	return nil
}

type Ingredient struct {
	Text     string  `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Quantity float32 `protobuf:"fixed32,2,opt,name=quantity" json:"quantity,omitempty"`
	Measure  string  `protobuf:"bytes,3,opt,name=measure" json:"measure,omitempty"`
	Weight   float32 `protobuf:"fixed32,4,opt,name=weight" json:"weight,omitempty"`
	Food     string  `protobuf:"bytes,5,opt,name=food" json:"food,omitempty"`
}

func (m *Ingredient) Reset()                    { *m = Ingredient{} }
func (m *Ingredient) String() string            { return proto.CompactTextString(m) }
func (*Ingredient) ProtoMessage()               {}
func (*Ingredient) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *Ingredient) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Ingredient) GetQuantity() float32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Ingredient) GetMeasure() string {
	if m != nil {
		return m.Measure
	}
	return ""
}

func (m *Ingredient) GetWeight() float32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Ingredient) GetFood() string {
	if m != nil {
		return m.Food
	}
	return ""
}

type Article struct {
	Image []string `protobuf:"bytes,1,rep,name=image" json:"image,omitempty"`
	Video []string `protobuf:"bytes,2,rep,name=video" json:"video,omitempty"`
	Text  string   `protobuf:"bytes,3,opt,name=text" json:"text,omitempty"`
}

func (m *Article) Reset()                    { *m = Article{} }
func (m *Article) String() string            { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()               {}
func (*Article) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *Article) GetImage() []string {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Article) GetVideo() []string {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *Article) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Exercise struct {
	Methodology   string                               `protobuf:"bytes,1,opt,name=methodology" json:"methodology,omitempty"`
	Level         *Level                               `protobuf:"bytes,2,opt,name=level" json:"level,omitempty"`
	Reps          int64                                `protobuf:"varint,3,opt,name=reps" json:"reps,omitempty"`
	Sets          int64                                `protobuf:"varint,4,opt,name=sets" json:"sets,omitempty"`
	Trackering    *go_micro_srv_static.TrackerMethod   `protobuf:"bytes,5,opt,name=trackering" json:"trackering,omitempty"`
	Image         []string                             `protobuf:"bytes,6,rep,name=image" json:"image,omitempty"`
	Videos        []string                             `protobuf:"bytes,7,rep,name=videos" json:"videos,omitempty"`
	Equipment     []string                             `protobuf:"bytes,8,rep,name=equipment" json:"equipment,omitempty"`
	Todo          []*go_micro_srv_todo.Todo            `protobuf:"bytes,9,rep,name=todo" json:"todo,omitempty"`
	Rest          string                               `protobuf:"bytes,10,opt,name=rest" json:"rest,omitempty"`
	Duration      string                               `protobuf:"bytes,11,opt,name=duration" json:"duration,omitempty"`
	TotalCalories int64                                `protobuf:"varint,12,opt,name=totalCalories" json:"totalCalories,omitempty"`
	Recurrence    []*Recurrence                        `protobuf:"bytes,13,rep,name=recurrence" json:"recurrence,omitempty"`
	Category      *go_micro_srv_static.ContentCategory `protobuf:"bytes,14,opt,name=category" json:"category,omitempty"`
}

func (m *Exercise) Reset()                    { *m = Exercise{} }
func (m *Exercise) String() string            { return proto.CompactTextString(m) }
func (*Exercise) ProtoMessage()               {}
func (*Exercise) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *Exercise) GetMethodology() string {
	if m != nil {
		return m.Methodology
	}
	return ""
}

func (m *Exercise) GetLevel() *Level {
	if m != nil {
		return m.Level
	}
	return nil
}

func (m *Exercise) GetReps() int64 {
	if m != nil {
		return m.Reps
	}
	return 0
}

func (m *Exercise) GetSets() int64 {
	if m != nil {
		return m.Sets
	}
	return 0
}

func (m *Exercise) GetTrackering() *go_micro_srv_static.TrackerMethod {
	if m != nil {
		return m.Trackering
	}
	return nil
}

func (m *Exercise) GetImage() []string {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Exercise) GetVideos() []string {
	if m != nil {
		return m.Videos
	}
	return nil
}

func (m *Exercise) GetEquipment() []string {
	if m != nil {
		return m.Equipment
	}
	return nil
}

func (m *Exercise) GetTodo() []*go_micro_srv_todo.Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

func (m *Exercise) GetRest() string {
	if m != nil {
		return m.Rest
	}
	return ""
}

func (m *Exercise) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Exercise) GetTotalCalories() int64 {
	if m != nil {
		return m.TotalCalories
	}
	return 0
}

func (m *Exercise) GetRecurrence() []*Recurrence {
	if m != nil {
		return m.Recurrence
	}
	return nil
}

func (m *Exercise) GetCategory() *go_micro_srv_static.ContentCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

type Level struct {
	Resistance string `protobuf:"bytes,1,opt,name=resistance" json:"resistance,omitempty"`
	Intensity  string `protobuf:"bytes,2,opt,name=intensity" json:"intensity,omitempty"`
	Experience string `protobuf:"bytes,3,opt,name=experience" json:"experience,omitempty"`
}

func (m *Level) Reset()                    { *m = Level{} }
func (m *Level) String() string            { return proto.CompactTextString(m) }
func (*Level) ProtoMessage()               {}
func (*Level) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *Level) GetResistance() string {
	if m != nil {
		return m.Resistance
	}
	return ""
}

func (m *Level) GetIntensity() string {
	if m != nil {
		return m.Intensity
	}
	return ""
}

func (m *Level) GetExperience() string {
	if m != nil {
		return m.Experience
	}
	return ""
}

type Wellbeing struct {
	Target     *go_micro_srv_static.Target `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	Duration   string                      `protobuf:"bytes,2,opt,name=duration" json:"duration,omitempty"`
	CreatedBy  *go_micro_srv_user.User     `protobuf:"bytes,3,opt,name=createdBy" json:"createdBy,omitempty"`
	Source     string                      `protobuf:"bytes,4,opt,name=source" json:"source,omitempty"`
	Recurrence []*Recurrence               `protobuf:"bytes,5,rep,name=recurrence" json:"recurrence,omitempty"`
	Todo       *go_micro_srv_todo.Todo     `protobuf:"bytes,6,opt,name=todo" json:"todo,omitempty"`
}

func (m *Wellbeing) Reset()                    { *m = Wellbeing{} }
func (m *Wellbeing) String() string            { return proto.CompactTextString(m) }
func (*Wellbeing) ProtoMessage()               {}
func (*Wellbeing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *Wellbeing) GetTarget() *go_micro_srv_static.Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Wellbeing) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Wellbeing) GetCreatedBy() *go_micro_srv_user.User {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *Wellbeing) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Wellbeing) GetRecurrence() []*Recurrence {
	if m != nil {
		return m.Recurrence
	}
	return nil
}

func (m *Wellbeing) GetTodo() *go_micro_srv_todo.Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type Recurrence struct {
	RRule string `protobuf:"bytes,1,opt,name=RRule" json:"RRule,omitempty"`
}

func (m *Recurrence) Reset()                    { *m = Recurrence{} }
func (m *Recurrence) String() string            { return proto.CompactTextString(m) }
func (*Recurrence) ProtoMessage()               {}
func (*Recurrence) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *Recurrence) GetRRule() string {
	if m != nil {
		return m.RRule
	}
	return ""
}

type Place struct {
	ContainedInPlace *Place                       `protobuf:"bytes,1,opt,name=containedInPlace" json:"containedInPlace,omitempty"`
	Type             string                       `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name             string                       `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Geo              *Geo                         `protobuf:"bytes,4,opt,name=geo" json:"geo,omitempty"`
	Address          *go_micro_srv_static.Address `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	Telephone        string                       `protobuf:"bytes,6,opt,name=telephone" json:"telephone,omitempty"`
	Identifier       string                       `protobuf:"bytes,7,opt,name=identifier" json:"identifier,omitempty"`
	Url              string                       `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	Id               string                       `protobuf:"bytes,9,opt,name=id" json:"id,omitempty"`
	Image            string                       `protobuf:"bytes,10,opt,name=image" json:"image,omitempty"`
	OpeningHours     *OpeningHours                `protobuf:"bytes,11,opt,name=opening_hours,json=openingHours" json:"opening_hours,omitempty"`
	Photos           []*Photo                     `protobuf:"bytes,12,rep,name=photos" json:"photos,omitempty"`
	PlaceId          string                       `protobuf:"bytes,13,opt,name=place_id,json=placeId" json:"place_id,omitempty"`
	AltIds           []*AltId                     `protobuf:"bytes,14,rep,name=alt_ids,json=altIds" json:"alt_ids,omitempty"`
	Types            []string                     `protobuf:"bytes,15,rep,name=types" json:"types,omitempty"`
	Reference        string                       `protobuf:"bytes,16,opt,name=reference" json:"reference,omitempty"`
	Vicinity         string                       `protobuf:"bytes,17,opt,name=vicinity" json:"vicinity,omitempty"`
}

func (m *Place) Reset()                    { *m = Place{} }
func (m *Place) String() string            { return proto.CompactTextString(m) }
func (*Place) ProtoMessage()               {}
func (*Place) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *Place) GetContainedInPlace() *Place {
	if m != nil {
		return m.ContainedInPlace
	}
	return nil
}

func (m *Place) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Place) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Place) GetGeo() *Geo {
	if m != nil {
		return m.Geo
	}
	return nil
}

func (m *Place) GetAddress() *go_micro_srv_static.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Place) GetTelephone() string {
	if m != nil {
		return m.Telephone
	}
	return ""
}

func (m *Place) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Place) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Place) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Place) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Place) GetOpeningHours() *OpeningHours {
	if m != nil {
		return m.OpeningHours
	}
	return nil
}

func (m *Place) GetPhotos() []*Photo {
	if m != nil {
		return m.Photos
	}
	return nil
}

func (m *Place) GetPlaceId() string {
	if m != nil {
		return m.PlaceId
	}
	return ""
}

func (m *Place) GetAltIds() []*AltId {
	if m != nil {
		return m.AltIds
	}
	return nil
}

func (m *Place) GetTypes() []string {
	if m != nil {
		return m.Types
	}
	return nil
}

func (m *Place) GetReference() string {
	if m != nil {
		return m.Reference
	}
	return ""
}

func (m *Place) GetVicinity() string {
	if m != nil {
		return m.Vicinity
	}
	return ""
}

type Geo struct {
	Latitude  float64 `protobuf:"fixed64,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude" json:"longitude,omitempty"`
}

func (m *Geo) Reset()                    { *m = Geo{} }
func (m *Geo) String() string            { return proto.CompactTextString(m) }
func (*Geo) ProtoMessage()               {}
func (*Geo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *Geo) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Geo) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type OpeningHours struct {
	OpenNow bool `protobuf:"varint,1,opt,name=open_now,json=openNow" json:"open_now,omitempty"`
}

func (m *OpeningHours) Reset()                    { *m = OpeningHours{} }
func (m *OpeningHours) String() string            { return proto.CompactTextString(m) }
func (*OpeningHours) ProtoMessage()               {}
func (*OpeningHours) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *OpeningHours) GetOpenNow() bool {
	if m != nil {
		return m.OpenNow
	}
	return false
}

type Photo struct {
	Height           uint64   `protobuf:"varint,1,opt,name=height" json:"height,omitempty"`
	HtmlAttributions []string `protobuf:"bytes,2,rep,name=html_attributions,json=htmlAttributions" json:"html_attributions,omitempty"`
	PhotoReference   string   `protobuf:"bytes,3,opt,name=photo_reference,json=photoReference" json:"photo_reference,omitempty"`
	Width            uint64   `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
}

func (m *Photo) Reset()                    { *m = Photo{} }
func (m *Photo) String() string            { return proto.CompactTextString(m) }
func (*Photo) ProtoMessage()               {}
func (*Photo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *Photo) GetHeight() uint64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Photo) GetHtmlAttributions() []string {
	if m != nil {
		return m.HtmlAttributions
	}
	return nil
}

func (m *Photo) GetPhotoReference() string {
	if m != nil {
		return m.PhotoReference
	}
	return ""
}

func (m *Photo) GetWidth() uint64 {
	if m != nil {
		return m.Width
	}
	return 0
}

type AltId struct {
	PlaceId string `protobuf:"bytes,1,opt,name=place_id,json=placeId" json:"place_id,omitempty"`
	Scope   string `protobuf:"bytes,2,opt,name=scope" json:"scope,omitempty"`
}

func (m *AltId) Reset()                    { *m = AltId{} }
func (m *AltId) String() string            { return proto.CompactTextString(m) }
func (*AltId) ProtoMessage()               {}
func (*AltId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *AltId) GetPlaceId() string {
	if m != nil {
		return m.PlaceId
	}
	return ""
}

func (m *AltId) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type Activity struct {
	Id                string          `protobuf:"bytes,40,opt,name=id" json:"id,omitempty"`
	Source            string          `protobuf:"bytes,41,opt,name=source" json:"source,omitempty"`
	Class             *Class          `protobuf:"bytes,1,opt,name=class" json:"class,omitempty"`
	Location          *Place          `protobuf:"bytes,2,opt,name=location" json:"location,omitempty"`
	Organizer         *Organizer      `protobuf:"bytes,3,opt,name=organizer" json:"organizer,omitempty"`
	Park              *Park           `protobuf:"bytes,4,opt,name=park" json:"park,omitempty"`
	SubEvent          []*SubEvent     `protobuf:"bytes,5,rep,name=subEvent" json:"subEvent,omitempty"`
	Restrictions      *Restrictions   `protobuf:"bytes,6,opt,name=restrictions" json:"restrictions,omitempty"`
	StartDate         string          `protobuf:"bytes,10,opt,name=startDate" json:"startDate,omitempty"`
	EndDate           string          `protobuf:"bytes,11,opt,name=endDate" json:"endDate,omitempty"`
	Duration          string          `protobuf:"bytes,12,opt,name=duration" json:"duration,omitempty"`
	Identifier        string          `protobuf:"bytes,13,opt,name=identifier" json:"identifier,omitempty"`
	DescriptionFormat string          `protobuf:"bytes,21,opt,name=descriptionFormat" json:"descriptionFormat,omitempty"`
	MeetingPoint      string          `protobuf:"bytes,18,opt,name=meetingPoint" json:"meetingPoint,omitempty"`
	EventLogo         string          `protobuf:"bytes,27,opt,name=eventLogo" json:"eventLogo,omitempty"`
	Video             string          `protobuf:"bytes,28,opt,name=video" json:"video,omitempty"`
	SessionUrl        string          `protobuf:"bytes,29,opt,name=sessionUrl" json:"sessionUrl,omitempty"`
	Contributor       *Contributor    `protobuf:"bytes,31,opt,name=contributor" json:"contributor,omitempty"`
	Activity          []*ActivityAttr `protobuf:"bytes,36,rep,name=activity" json:"activity,omitempty"`
	Offer             []*Offer        `protobuf:"bytes,37,rep,name=offer" json:"offer,omitempty"`
}

func (m *Activity) Reset()                    { *m = Activity{} }
func (m *Activity) String() string            { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()               {}
func (*Activity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *Activity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Activity) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Activity) GetClass() *Class {
	if m != nil {
		return m.Class
	}
	return nil
}

func (m *Activity) GetLocation() *Place {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Activity) GetOrganizer() *Organizer {
	if m != nil {
		return m.Organizer
	}
	return nil
}

func (m *Activity) GetPark() *Park {
	if m != nil {
		return m.Park
	}
	return nil
}

func (m *Activity) GetSubEvent() []*SubEvent {
	if m != nil {
		return m.SubEvent
	}
	return nil
}

func (m *Activity) GetRestrictions() *Restrictions {
	if m != nil {
		return m.Restrictions
	}
	return nil
}

func (m *Activity) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *Activity) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *Activity) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Activity) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Activity) GetDescriptionFormat() string {
	if m != nil {
		return m.DescriptionFormat
	}
	return ""
}

func (m *Activity) GetMeetingPoint() string {
	if m != nil {
		return m.MeetingPoint
	}
	return ""
}

func (m *Activity) GetEventLogo() string {
	if m != nil {
		return m.EventLogo
	}
	return ""
}

func (m *Activity) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *Activity) GetSessionUrl() string {
	if m != nil {
		return m.SessionUrl
	}
	return ""
}

func (m *Activity) GetContributor() *Contributor {
	if m != nil {
		return m.Contributor
	}
	return nil
}

func (m *Activity) GetActivity() []*ActivityAttr {
	if m != nil {
		return m.Activity
	}
	return nil
}

func (m *Activity) GetOffer() []*Offer {
	if m != nil {
		return m.Offer
	}
	return nil
}

type Restrictions struct {
	GenderRestriction string `protobuf:"bytes,6,opt,name=genderRestriction" json:"genderRestriction,omitempty"`
	Level             string `protobuf:"bytes,7,opt,name=level" json:"level,omitempty"`
	AgeRange          string `protobuf:"bytes,8,opt,name=ageRange" json:"ageRange,omitempty"`
	MaxAttendees      string `protobuf:"bytes,14,opt,name=maxAttendees" json:"maxAttendees,omitempty"`
	Exertion          string `protobuf:"bytes,19,opt,name=exertion" json:"exertion,omitempty"`
}

func (m *Restrictions) Reset()                    { *m = Restrictions{} }
func (m *Restrictions) String() string            { return proto.CompactTextString(m) }
func (*Restrictions) ProtoMessage()               {}
func (*Restrictions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *Restrictions) GetGenderRestriction() string {
	if m != nil {
		return m.GenderRestriction
	}
	return ""
}

func (m *Restrictions) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Restrictions) GetAgeRange() string {
	if m != nil {
		return m.AgeRange
	}
	return ""
}

func (m *Restrictions) GetMaxAttendees() string {
	if m != nil {
		return m.MaxAttendees
	}
	return ""
}

func (m *Restrictions) GetExertion() string {
	if m != nil {
		return m.Exertion
	}
	return ""
}

type Organizer struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Url       string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	Telephone string `protobuf:"bytes,6,opt,name=telephone" json:"telephone,omitempty"`
	Logo      string `protobuf:"bytes,7,opt,name=logo" json:"logo,omitempty"`
}

func (m *Organizer) Reset()                    { *m = Organizer{} }
func (m *Organizer) String() string            { return proto.CompactTextString(m) }
func (*Organizer) ProtoMessage()               {}
func (*Organizer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{123} }

func (m *Organizer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Organizer) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Organizer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organizer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Organizer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Organizer) GetTelephone() string {
	if m != nil {
		return m.Telephone
	}
	return ""
}

func (m *Organizer) GetLogo() string {
	if m != nil {
		return m.Logo
	}
	return ""
}

type Class struct {
	Status *ClassStatus `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Date   int64        `protobuf:"varint,2,opt,name=date" json:"date,omitempty"`
	Type   *ClassType   `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Coach  *Coach       `protobuf:"bytes,4,opt,name=coach" json:"coach,omitempty"`
}

func (m *Class) Reset()                    { *m = Class{} }
func (m *Class) String() string            { return proto.CompactTextString(m) }
func (*Class) ProtoMessage()               {}
func (*Class) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *Class) GetStatus() *ClassStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *Class) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Class) GetType() *ClassType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Class) GetCoach() *Coach {
	if m != nil {
		return m.Coach
	}
	return nil
}

type ClassStatus struct {
}

func (m *ClassStatus) Reset()                    { *m = ClassStatus{} }
func (m *ClassStatus) String() string            { return proto.CompactTextString(m) }
func (*ClassStatus) ProtoMessage()               {}
func (*ClassStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

type ClassType struct {
}

func (m *ClassType) Reset()                    { *m = ClassType{} }
func (m *ClassType) String() string            { return proto.CompactTextString(m) }
func (*ClassType) ProtoMessage()               {}
func (*ClassType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

type Coach struct {
	FirstName   string `protobuf:"bytes,1,opt,name=firstName" json:"firstName,omitempty"`
	LastName    string `protobuf:"bytes,2,opt,name=lastName" json:"lastName,omitempty"`
	Image       string `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	Thumbnail   string `protobuf:"bytes,4,opt,name=thumbnail" json:"thumbnail,omitempty"`
	SquareImage string `protobuf:"bytes,5,opt,name=square_image,json=squareImage" json:"square_image,omitempty"`
}

func (m *Coach) Reset()                    { *m = Coach{} }
func (m *Coach) String() string            { return proto.CompactTextString(m) }
func (*Coach) ProtoMessage()               {}
func (*Coach) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *Coach) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Coach) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Coach) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Coach) GetThumbnail() string {
	if m != nil {
		return m.Thumbnail
	}
	return ""
}

func (m *Coach) GetSquareImage() string {
	if m != nil {
		return m.SquareImage
	}
	return ""
}

type ActivityAttr struct {
	Type      string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Notation  int32  `protobuf:"varint,2,opt,name=notation" json:"notation,omitempty"`
	PrefLabel string `protobuf:"bytes,3,opt,name=prefLabel" json:"prefLabel,omitempty"`
	InScheme  string `protobuf:"bytes,4,opt,name=inScheme" json:"inScheme,omitempty"`
}

func (m *ActivityAttr) Reset()                    { *m = ActivityAttr{} }
func (m *ActivityAttr) String() string            { return proto.CompactTextString(m) }
func (*ActivityAttr) ProtoMessage()               {}
func (*ActivityAttr) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *ActivityAttr) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ActivityAttr) GetNotation() int32 {
	if m != nil {
		return m.Notation
	}
	return 0
}

func (m *ActivityAttr) GetPrefLabel() string {
	if m != nil {
		return m.PrefLabel
	}
	return ""
}

func (m *ActivityAttr) GetInScheme() string {
	if m != nil {
		return m.InScheme
	}
	return ""
}

type Offer struct {
	Url           string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Type          string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	PriceCurrency string `protobuf:"bytes,4,opt,name=priceCurrency" json:"priceCurrency,omitempty"`
	Price         string `protobuf:"bytes,5,opt,name=price" json:"price,omitempty"`
}

func (m *Offer) Reset()                    { *m = Offer{} }
func (m *Offer) String() string            { return proto.CompactTextString(m) }
func (*Offer) ProtoMessage()               {}
func (*Offer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *Offer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Offer) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Offer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Offer) GetPriceCurrency() string {
	if m != nil {
		return m.PriceCurrency
	}
	return ""
}

func (m *Offer) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

type Contributor struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Contributor) Reset()                    { *m = Contributor{} }
func (m *Contributor) String() string            { return proto.CompactTextString(m) }
func (*Contributor) ProtoMessage()               {}
func (*Contributor) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *Contributor) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Contributor) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Park struct {
	Title             string                       `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Id                string                       `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Description       string                       `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	DescriptionFormat string                       `protobuf:"bytes,4,opt,name=descriptionFormat" json:"descriptionFormat,omitempty"`
	ParkLogo          string                       `protobuf:"bytes,5,opt,name=parkLogo" json:"parkLogo,omitempty"`
	Address           *go_micro_srv_static.Address `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
}

func (m *Park) Reset()                    { *m = Park{} }
func (m *Park) String() string            { return proto.CompactTextString(m) }
func (*Park) ProtoMessage()               {}
func (*Park) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *Park) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Park) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Park) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Park) GetDescriptionFormat() string {
	if m != nil {
		return m.DescriptionFormat
	}
	return ""
}

func (m *Park) GetParkLogo() string {
	if m != nil {
		return m.ParkLogo
	}
	return ""
}

func (m *Park) GetAddress() *go_micro_srv_static.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type Borough struct {
	Title                 string                       `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Id                    string                       `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	IntroText             string                       `protobuf:"bytes,3,opt,name=introText" json:"introText,omitempty"`
	IntroTextFormat       string                       `protobuf:"bytes,4,opt,name=introTextFormat" json:"introTextFormat,omitempty"`
	BoroughLogo           string                       `protobuf:"bytes,5,opt,name=boroughLogo" json:"boroughLogo,omitempty"`
	BoroughVideoSlug      string                       `protobuf:"bytes,6,opt,name=boroughVideoSlug" json:"boroughVideoSlug,omitempty"`
	BoroughVideoTitle     string                       `protobuf:"bytes,7,opt,name=boroughVideoTitle" json:"boroughVideoTitle,omitempty"`
	BoroughVideo          string                       `protobuf:"bytes,8,opt,name=boroughVideo" json:"boroughVideo,omitempty"`
	BoroughTwitterAccount string                       `protobuf:"bytes,9,opt,name=boroughTwitterAccount" json:"boroughTwitterAccount,omitempty"`
	Address               *go_micro_srv_static.Address `protobuf:"bytes,10,opt,name=address" json:"address,omitempty"`
}

func (m *Borough) Reset()                    { *m = Borough{} }
func (m *Borough) String() string            { return proto.CompactTextString(m) }
func (*Borough) ProtoMessage()               {}
func (*Borough) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *Borough) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Borough) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Borough) GetIntroText() string {
	if m != nil {
		return m.IntroText
	}
	return ""
}

func (m *Borough) GetIntroTextFormat() string {
	if m != nil {
		return m.IntroTextFormat
	}
	return ""
}

func (m *Borough) GetBoroughLogo() string {
	if m != nil {
		return m.BoroughLogo
	}
	return ""
}

func (m *Borough) GetBoroughVideoSlug() string {
	if m != nil {
		return m.BoroughVideoSlug
	}
	return ""
}

func (m *Borough) GetBoroughVideoTitle() string {
	if m != nil {
		return m.BoroughVideoTitle
	}
	return ""
}

func (m *Borough) GetBoroughVideo() string {
	if m != nil {
		return m.BoroughVideo
	}
	return ""
}

func (m *Borough) GetBoroughTwitterAccount() string {
	if m != nil {
		return m.BoroughTwitterAccount
	}
	return ""
}

func (m *Borough) GetAddress() *go_micro_srv_static.Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type SubEvent struct {
	Type      string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	StartDate string `protobuf:"bytes,2,opt,name=startDate" json:"startDate,omitempty"`
	EndDate   string `protobuf:"bytes,3,opt,name=endDate" json:"endDate,omitempty"`
	Duration  string `protobuf:"bytes,4,opt,name=duration" json:"duration,omitempty"`
}

func (m *SubEvent) Reset()                    { *m = SubEvent{} }
func (m *SubEvent) String() string            { return proto.CompactTextString(m) }
func (*SubEvent) ProtoMessage()               {}
func (*SubEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *SubEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SubEvent) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *SubEvent) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *SubEvent) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

type ShareContentRequest struct {
	Contents []*Content                `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
	Users    []*go_micro_srv_user.User `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	UserId   string                    `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId    string                    `protobuf:"bytes,4,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string                    `protobuf:"bytes,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ShareContentRequest) Reset()                    { *m = ShareContentRequest{} }
func (m *ShareContentRequest) String() string            { return proto.CompactTextString(m) }
func (*ShareContentRequest) ProtoMessage()               {}
func (*ShareContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *ShareContentRequest) GetContents() []*Content {
	if m != nil {
		return m.Contents
	}
	return nil
}

func (m *ShareContentRequest) GetUsers() []*go_micro_srv_user.User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ShareContentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ShareContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ShareContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ShareContentResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ShareContentResponse) Reset()                    { *m = ShareContentResponse{} }
func (m *ShareContentResponse) String() string            { return proto.CompactTextString(m) }
func (*ShareContentResponse) ProtoMessage()               {}
func (*ShareContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *ShareContentResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ShareContentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ShareContentUser struct {
	Id       string                          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Content  *Content                        `protobuf:"bytes,2,opt,name=content" json:"content,omitempty"`
	User     *go_micro_srv_user.User         `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	Status   go_micro_srv_static.ShareStatus `protobuf:"varint,4,opt,name=status,enum=go.micro.srv.static.ShareStatus" json:"status,omitempty"`
	Updated  int64                           `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
	SharedBy *go_micro_srv_user.User         `protobuf:"bytes,6,opt,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
	Created  int64                           `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
}

func (m *ShareContentUser) Reset()                    { *m = ShareContentUser{} }
func (m *ShareContentUser) String() string            { return proto.CompactTextString(m) }
func (*ShareContentUser) ProtoMessage()               {}
func (*ShareContentUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *ShareContentUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ShareContentUser) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ShareContentUser) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ShareContentUser) GetStatus() go_micro_srv_static.ShareStatus {
	if m != nil {
		return m.Status
	}
	return go_micro_srv_static.ShareStatus_ShareStatus_NONE
}

func (m *ShareContentUser) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ShareContentUser) GetSharedBy() *go_micro_srv_user.User {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

func (m *ShareContentUser) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

type CategoryResponse struct {
	CategoryId string `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	IconSlug   string `protobuf:"bytes,3,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
}

func (m *CategoryResponse) Reset()                    { *m = CategoryResponse{} }
func (m *CategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*CategoryResponse) ProtoMessage()               {}
func (*CategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *CategoryResponse) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *CategoryResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CategoryResponse) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

type ContentResponse struct {
	ContentId        string  `protobuf:"bytes,1,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	Image            string  `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Title            string  `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Author           string  `protobuf:"bytes,4,opt,name=author" json:"author,omitempty"`
	Source           *Source `protobuf:"bytes,5,opt,name=source" json:"source,omitempty"`
	CategoryId       string  `protobuf:"bytes,6,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	CategoryIconSlug string  `protobuf:"bytes,7,opt,name=category_icon_slug,json=categoryIconSlug" json:"category_icon_slug,omitempty"`
	CategoryName     string  `protobuf:"bytes,8,opt,name=category_name,json=categoryName" json:"category_name,omitempty"`
}

func (m *ContentResponse) Reset()                    { *m = ContentResponse{} }
func (m *ContentResponse) String() string            { return proto.CompactTextString(m) }
func (*ContentResponse) ProtoMessage()               {}
func (*ContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *ContentResponse) GetContentId() string {
	if m != nil {
		return m.ContentId
	}
	return ""
}

func (m *ContentResponse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ContentResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ContentResponse) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ContentResponse) GetSource() *Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *ContentResponse) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *ContentResponse) GetCategoryIconSlug() string {
	if m != nil {
		return m.CategoryIconSlug
	}
	return ""
}

func (m *ContentResponse) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

type ContentRecommendation struct {
	Id      string                                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId   string                                     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	UserId  string                                     `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Content *Content                                   `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
	Created int64                                      `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Updated int64                                      `protobuf:"varint,6,opt,name=updated" json:"updated,omitempty"`
	Tags    []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,8,rep,name=tags" json:"tags,omitempty"`
}

func (m *ContentRecommendation) Reset()                    { *m = ContentRecommendation{} }
func (m *ContentRecommendation) String() string            { return proto.CompactTextString(m) }
func (*ContentRecommendation) ProtoMessage()               {}
func (*ContentRecommendation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *ContentRecommendation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContentRecommendation) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ContentRecommendation) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ContentRecommendation) GetContent() *Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *ContentRecommendation) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ContentRecommendation) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ContentRecommendation) GetTags() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Recommendation struct {
	ContentId        string                                     `protobuf:"bytes,1,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	ContentImage     string                                     `protobuf:"bytes,2,opt,name=content_image,json=contentImage" json:"content_image,omitempty"`
	ContentTitle     string                                     `protobuf:"bytes,3,opt,name=content_title,json=contentTitle" json:"content_title,omitempty"`
	ContentAuthor    string                                     `protobuf:"bytes,4,opt,name=content_author,json=contentAuthor" json:"content_author,omitempty"`
	ContentSource    *Source                                    `protobuf:"bytes,5,opt,name=content_source,json=contentSource" json:"content_source,omitempty"`
	CategoryId       string                                     `protobuf:"bytes,6,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	CategoryIconSlug string                                     `protobuf:"bytes,7,opt,name=category_icon_slug,json=categoryIconSlug" json:"category_icon_slug,omitempty"`
	CategoryName     string                                     `protobuf:"bytes,8,opt,name=category_name,json=categoryName" json:"category_name,omitempty"`
	UserId           string                                     `protobuf:"bytes,9,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Tags             []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
}

func (m *Recommendation) Reset()                    { *m = Recommendation{} }
func (m *Recommendation) String() string            { return proto.CompactTextString(m) }
func (*Recommendation) ProtoMessage()               {}
func (*Recommendation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *Recommendation) GetContentId() string {
	if m != nil {
		return m.ContentId
	}
	return ""
}

func (m *Recommendation) GetContentImage() string {
	if m != nil {
		return m.ContentImage
	}
	return ""
}

func (m *Recommendation) GetContentTitle() string {
	if m != nil {
		return m.ContentTitle
	}
	return ""
}

func (m *Recommendation) GetContentAuthor() string {
	if m != nil {
		return m.ContentAuthor
	}
	return ""
}

func (m *Recommendation) GetContentSource() *Source {
	if m != nil {
		return m.ContentSource
	}
	return nil
}

func (m *Recommendation) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *Recommendation) GetCategoryIconSlug() string {
	if m != nil {
		return m.CategoryIconSlug
	}
	return ""
}

func (m *Recommendation) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *Recommendation) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Recommendation) GetTags() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Product struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId          string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created        int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated        int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Name           string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Description    string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	SquareImage    string `protobuf:"bytes,7,opt,name=squareImage" json:"squareImage,omitempty"`
	ThumbnailImage string `protobuf:"bytes,8,opt,name=thumbnailImage" json:"thumbnailImage,omitempty"`
	LargeImage     string `protobuf:"bytes,9,opt,name=largeImage" json:"largeImage,omitempty"`
	Url            string `protobuf:"bytes,10,opt,name=url" json:"url,omitempty"`
	Rating         int64  `protobuf:"varint,11,opt,name=rating" json:"rating,omitempty"`
	Audience       string `protobuf:"bytes,12,opt,name=audience" json:"audience,omitempty"`
	Award          string `protobuf:"bytes,13,opt,name=award" json:"award,omitempty"`
	Brand          string `protobuf:"bytes,14,opt,name=brand" json:"brand,omitempty"`
	Category       string `protobuf:"bytes,15,opt,name=category" json:"category,omitempty"`
	Gtin           string `protobuf:"bytes,16,opt,name=gtin" json:"gtin,omitempty"`
	Manufacturer   string `protobuf:"bytes,17,opt,name=manufacturer" json:"manufacturer,omitempty"`
	Material       string `protobuf:"bytes,18,opt,name=material" json:"material,omitempty"`
	Model          string `protobuf:"bytes,19,opt,name=model" json:"model,omitempty"`
	Offers         int64  `protobuf:"varint,20,opt,name=offers" json:"offers,omitempty"`
	ProductionDate int64  `protobuf:"varint,21,opt,name=productionDate" json:"productionDate,omitempty"`
	PurchaseDate   int64  `protobuf:"varint,22,opt,name=purchaseDate" json:"purchaseDate,omitempty"`
	ReleaseDate    int64  `protobuf:"varint,23,opt,name=releaseDate" json:"releaseDate,omitempty"`
	Review         string `protobuf:"bytes,24,opt,name=review" json:"review,omitempty"`
	Weight         int64  `protobuf:"varint,25,opt,name=weight" json:"weight,omitempty"`
	Depth          int64  `protobuf:"varint,26,opt,name=depth" json:"depth,omitempty"`
	Height         int64  `protobuf:"varint,27,opt,name=height" json:"height,omitempty"`
	Width          int64  `protobuf:"varint,28,opt,name=width" json:"width,omitempty"`
	Color          string `protobuf:"bytes,29,opt,name=color" json:"color,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Product) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Product) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetSquareImage() string {
	if m != nil {
		return m.SquareImage
	}
	return ""
}

func (m *Product) GetThumbnailImage() string {
	if m != nil {
		return m.ThumbnailImage
	}
	return ""
}

func (m *Product) GetLargeImage() string {
	if m != nil {
		return m.LargeImage
	}
	return ""
}

func (m *Product) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Product) GetRating() int64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Product) GetAudience() string {
	if m != nil {
		return m.Audience
	}
	return ""
}

func (m *Product) GetAward() string {
	if m != nil {
		return m.Award
	}
	return ""
}

func (m *Product) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Product) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Product) GetGtin() string {
	if m != nil {
		return m.Gtin
	}
	return ""
}

func (m *Product) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *Product) GetMaterial() string {
	if m != nil {
		return m.Material
	}
	return ""
}

func (m *Product) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Product) GetOffers() int64 {
	if m != nil {
		return m.Offers
	}
	return 0
}

func (m *Product) GetProductionDate() int64 {
	if m != nil {
		return m.ProductionDate
	}
	return 0
}

func (m *Product) GetPurchaseDate() int64 {
	if m != nil {
		return m.PurchaseDate
	}
	return 0
}

func (m *Product) GetReleaseDate() int64 {
	if m != nil {
		return m.ReleaseDate
	}
	return 0
}

func (m *Product) GetReview() string {
	if m != nil {
		return m.Review
	}
	return ""
}

func (m *Product) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Product) GetDepth() int64 {
	if m != nil {
		return m.Depth
	}
	return 0
}

func (m *Product) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Product) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Product) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

type Service struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId          string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created        int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated        int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Name           string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Description    string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	SquareImage    string `protobuf:"bytes,7,opt,name=squareImage" json:"squareImage,omitempty"`
	ThumbnailImage string `protobuf:"bytes,8,opt,name=thumbnailImage" json:"thumbnailImage,omitempty"`
	LargeImage     string `protobuf:"bytes,9,opt,name=largeImage" json:"largeImage,omitempty"`
	Url            string `protobuf:"bytes,10,opt,name=url" json:"url,omitempty"`
	Rating         int64  `protobuf:"varint,11,opt,name=rating" json:"rating,omitempty"`
	Audience       string `protobuf:"bytes,12,opt,name=audience" json:"audience,omitempty"`
	Award          string `protobuf:"bytes,13,opt,name=award" json:"award,omitempty"`
	Brand          string `protobuf:"bytes,14,opt,name=brand" json:"brand,omitempty"`
	Category       string `protobuf:"bytes,15,opt,name=category" json:"category,omitempty"`
	Manufacturer   string `protobuf:"bytes,16,opt,name=manufacturer" json:"manufacturer,omitempty"`
	Material       string `protobuf:"bytes,17,opt,name=material" json:"material,omitempty"`
	Model          string `protobuf:"bytes,18,opt,name=model" json:"model,omitempty"`
	Offers         int64  `protobuf:"varint,19,opt,name=offers" json:"offers,omitempty"`
	Review         string `protobuf:"bytes,20,opt,name=review" json:"review,omitempty"`
	AreaServed     string `protobuf:"bytes,21,opt,name=areaServed" json:"areaServed,omitempty"`
	// string audience = 22;
	AvailableChannel string `protobuf:"bytes,23,opt,name=availableChannel" json:"availableChannel,omitempty"`
	ThirdPartyBroker string `protobuf:"bytes,24,opt,name=thirdPartyBroker" json:"thirdPartyBroker,omitempty"`
	HasOfferCatalog  string `protobuf:"bytes,25,opt,name=hasOfferCatalog" json:"hasOfferCatalog,omitempty"`
	HoursAvailable   string `protobuf:"bytes,26,opt,name=hoursAvailable" json:"hoursAvailable,omitempty"`
	ServiceProvider  string `protobuf:"bytes,27,opt,name=serviceProvider" json:"serviceProvider,omitempty"`
	ServiceOutput    string `protobuf:"bytes,28,opt,name=serviceOutput" json:"serviceOutput,omitempty"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{142} }

func (m *Service) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Service) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Service) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Service) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Service) GetSquareImage() string {
	if m != nil {
		return m.SquareImage
	}
	return ""
}

func (m *Service) GetThumbnailImage() string {
	if m != nil {
		return m.ThumbnailImage
	}
	return ""
}

func (m *Service) GetLargeImage() string {
	if m != nil {
		return m.LargeImage
	}
	return ""
}

func (m *Service) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Service) GetRating() int64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Service) GetAudience() string {
	if m != nil {
		return m.Audience
	}
	return ""
}

func (m *Service) GetAward() string {
	if m != nil {
		return m.Award
	}
	return ""
}

func (m *Service) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Service) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Service) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *Service) GetMaterial() string {
	if m != nil {
		return m.Material
	}
	return ""
}

func (m *Service) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Service) GetOffers() int64 {
	if m != nil {
		return m.Offers
	}
	return 0
}

func (m *Service) GetReview() string {
	if m != nil {
		return m.Review
	}
	return ""
}

func (m *Service) GetAreaServed() string {
	if m != nil {
		return m.AreaServed
	}
	return ""
}

func (m *Service) GetAvailableChannel() string {
	if m != nil {
		return m.AvailableChannel
	}
	return ""
}

func (m *Service) GetThirdPartyBroker() string {
	if m != nil {
		return m.ThirdPartyBroker
	}
	return ""
}

func (m *Service) GetHasOfferCatalog() string {
	if m != nil {
		return m.HasOfferCatalog
	}
	return ""
}

func (m *Service) GetHoursAvailable() string {
	if m != nil {
		return m.HoursAvailable
	}
	return ""
}

func (m *Service) GetServiceProvider() string {
	if m != nil {
		return m.ServiceProvider
	}
	return ""
}

func (m *Service) GetServiceOutput() string {
	if m != nil {
		return m.ServiceOutput
	}
	return ""
}

type Event struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId          string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created        int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated        int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Name           string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Description    string `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	SquareImage    string `protobuf:"bytes,7,opt,name=squareImage" json:"squareImage,omitempty"`
	ThumbnailImage string `protobuf:"bytes,8,opt,name=thumbnailImage" json:"thumbnailImage,omitempty"`
	LargeImage     string `protobuf:"bytes,9,opt,name=largeImage" json:"largeImage,omitempty"`
	StartDate      int64  `protobuf:"varint,10,opt,name=startDate" json:"startDate,omitempty"`
	EndDate        int64  `protobuf:"varint,11,opt,name=endDate" json:"endDate,omitempty"`
	Duration       string `protobuf:"bytes,12,opt,name=duration" json:"duration,omitempty"`
	Location       string `protobuf:"bytes,13,opt,name=location" json:"location,omitempty"`
	Organizer      string `protobuf:"bytes,14,opt,name=organizer" json:"organizer,omitempty"`
	SuperEvent     string `protobuf:"bytes,15,opt,name=superEvent" json:"superEvent,omitempty"`
	SubEvent       string `protobuf:"bytes,16,opt,name=subEvent" json:"subEvent,omitempty"`
	Activity       string `protobuf:"bytes,17,opt,name=activity" json:"activity,omitempty"`
	Format         string `protobuf:"bytes,18,opt,name=format" json:"format,omitempty"`
	Schedule       string `protobuf:"bytes,19,opt,name=schedule" json:"schedule,omitempty"`
	Url            string `protobuf:"bytes,20,opt,name=url" json:"url,omitempty"`
	Person         string `protobuf:"bytes,21,opt,name=person" json:"person,omitempty"`
	Rating         int64  `protobuf:"varint,22,opt,name=rating" json:"rating,omitempty"`
	Status         int64  `protobuf:"varint,23,opt,name=status" json:"status,omitempty"`
	Language       string `protobuf:"bytes,24,opt,name=language" json:"language,omitempty"`
	Capacity       int64  `protobuf:"varint,25,opt,name=capacity" json:"capacity,omitempty"`
	Offer          int64  `protobuf:"varint,26,opt,name=offer" json:"offer,omitempty"`
	Review         string `protobuf:"bytes,27,opt,name=review" json:"review,omitempty"`
	AgeRange       int64  `protobuf:"varint,28,opt,name=ageRange" json:"ageRange,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{143} }

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Event) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Event) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetSquareImage() string {
	if m != nil {
		return m.SquareImage
	}
	return ""
}

func (m *Event) GetThumbnailImage() string {
	if m != nil {
		return m.ThumbnailImage
	}
	return ""
}

func (m *Event) GetLargeImage() string {
	if m != nil {
		return m.LargeImage
	}
	return ""
}

func (m *Event) GetStartDate() int64 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *Event) GetEndDate() int64 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

func (m *Event) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Event) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Event) GetOrganizer() string {
	if m != nil {
		return m.Organizer
	}
	return ""
}

func (m *Event) GetSuperEvent() string {
	if m != nil {
		return m.SuperEvent
	}
	return ""
}

func (m *Event) GetSubEvent() string {
	if m != nil {
		return m.SubEvent
	}
	return ""
}

func (m *Event) GetActivity() string {
	if m != nil {
		return m.Activity
	}
	return ""
}

func (m *Event) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Event) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *Event) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Event) GetPerson() string {
	if m != nil {
		return m.Person
	}
	return ""
}

func (m *Event) GetRating() int64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *Event) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Event) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Event) GetCapacity() int64 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Event) GetOffer() int64 {
	if m != nil {
		return m.Offer
	}
	return 0
}

func (m *Event) GetReview() string {
	if m != nil {
		return m.Review
	}
	return ""
}

func (m *Event) GetAgeRange() int64 {
	if m != nil {
		return m.AgeRange
	}
	return 0
}

type Video struct {
	Id                   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId                string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created              int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated              int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Bitrate              int64  `protobuf:"varint,5,opt,name=bitrate" json:"bitrate,omitempty"`
	ContentSize          int64  `protobuf:"varint,6,opt,name=contentSize" json:"contentSize,omitempty"`
	ContentUrl           string `protobuf:"bytes,7,opt,name=contentUrl" json:"contentUrl,omitempty"`
	Duration             string `protobuf:"bytes,8,opt,name=duration" json:"duration,omitempty"`
	EmbedUrl             string `protobuf:"bytes,9,opt,name=embedUrl" json:"embedUrl,omitempty"`
	EncodingFormat       string `protobuf:"bytes,10,opt,name=encodingFormat" json:"encodingFormat,omitempty"`
	Expires              int64  `protobuf:"varint,11,opt,name=expires" json:"expires,omitempty"`
	Height               int64  `protobuf:"varint,12,opt,name=height" json:"height,omitempty"`
	PlayerType           int64  `protobuf:"varint,13,opt,name=playerType" json:"playerType,omitempty"`
	ProductionCompany    int64  `protobuf:"varint,14,opt,name=productionCompany" json:"productionCompany,omitempty"`
	RegionsAllowed       int64  `protobuf:"varint,15,opt,name=regionsAllowed" json:"regionsAllowed,omitempty"`
	RequiresSubscription string `protobuf:"bytes,16,opt,name=requiresSubscription" json:"requiresSubscription,omitempty"`
	UploadDate           int64  `protobuf:"varint,17,opt,name=uploadDate" json:"uploadDate,omitempty"`
	Width                int64  `protobuf:"varint,18,opt,name=width" json:"width,omitempty"`
}

func (m *Video) Reset()                    { *m = Video{} }
func (m *Video) String() string            { return proto.CompactTextString(m) }
func (*Video) ProtoMessage()               {}
func (*Video) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{144} }

func (m *Video) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Video) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Video) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Video) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Video) GetBitrate() int64 {
	if m != nil {
		return m.Bitrate
	}
	return 0
}

func (m *Video) GetContentSize() int64 {
	if m != nil {
		return m.ContentSize
	}
	return 0
}

func (m *Video) GetContentUrl() string {
	if m != nil {
		return m.ContentUrl
	}
	return ""
}

func (m *Video) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *Video) GetEmbedUrl() string {
	if m != nil {
		return m.EmbedUrl
	}
	return ""
}

func (m *Video) GetEncodingFormat() string {
	if m != nil {
		return m.EncodingFormat
	}
	return ""
}

func (m *Video) GetExpires() int64 {
	if m != nil {
		return m.Expires
	}
	return 0
}

func (m *Video) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Video) GetPlayerType() int64 {
	if m != nil {
		return m.PlayerType
	}
	return 0
}

func (m *Video) GetProductionCompany() int64 {
	if m != nil {
		return m.ProductionCompany
	}
	return 0
}

func (m *Video) GetRegionsAllowed() int64 {
	if m != nil {
		return m.RegionsAllowed
	}
	return 0
}

func (m *Video) GetRequiresSubscription() string {
	if m != nil {
		return m.RequiresSubscription
	}
	return ""
}

func (m *Video) GetUploadDate() int64 {
	if m != nil {
		return m.UploadDate
	}
	return 0
}

func (m *Video) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

type Research struct {
	Id             string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId          string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created        int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated        int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	ArticleBody    string `protobuf:"bytes,5,opt,name=articleBody" json:"articleBody,omitempty"`
	ArticleSection string `protobuf:"bytes,6,opt,name=articleSection" json:"articleSection,omitempty"`
	PageEnd        int64  `protobuf:"varint,7,opt,name=pageEnd" json:"pageEnd,omitempty"`
	PageStart      int64  `protobuf:"varint,8,opt,name=pageStart" json:"pageStart,omitempty"`
	WordCount      int64  `protobuf:"varint,9,opt,name=wordCount" json:"wordCount,omitempty"`
	Keywords       string `protobuf:"bytes,10,opt,name=keywords" json:"keywords,omitempty"`
	Category       string `protobuf:"bytes,11,opt,name=category" json:"category,omitempty"`
	Source         string `protobuf:"bytes,12,opt,name=source" json:"source,omitempty"`
	Tags           string `protobuf:"bytes,13,opt,name=tags" json:"tags,omitempty"`
	Safe           string `protobuf:"bytes,14,opt,name=safe" json:"safe,omitempty"`
	Topic          string `protobuf:"bytes,15,opt,name=topic" json:"topic,omitempty"`
	Summary        string `protobuf:"bytes,16,opt,name=summary" json:"summary,omitempty"`
	Objective      string `protobuf:"bytes,17,opt,name=objective" json:"objective,omitempty"`
	CoAuthors      string `protobuf:"bytes,18,opt,name=coAuthors" json:"coAuthors,omitempty"`
	Conclusion     string `protobuf:"bytes,19,opt,name=conclusion" json:"conclusion,omitempty"`
	SummarySmall   string `protobuf:"bytes,20,opt,name=summarySmall" json:"summarySmall,omitempty"`
}

func (m *Research) Reset()                    { *m = Research{} }
func (m *Research) String() string            { return proto.CompactTextString(m) }
func (*Research) ProtoMessage()               {}
func (*Research) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{145} }

func (m *Research) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Research) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Research) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Research) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Research) GetArticleBody() string {
	if m != nil {
		return m.ArticleBody
	}
	return ""
}

func (m *Research) GetArticleSection() string {
	if m != nil {
		return m.ArticleSection
	}
	return ""
}

func (m *Research) GetPageEnd() int64 {
	if m != nil {
		return m.PageEnd
	}
	return 0
}

func (m *Research) GetPageStart() int64 {
	if m != nil {
		return m.PageStart
	}
	return 0
}

func (m *Research) GetWordCount() int64 {
	if m != nil {
		return m.WordCount
	}
	return 0
}

func (m *Research) GetKeywords() string {
	if m != nil {
		return m.Keywords
	}
	return ""
}

func (m *Research) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Research) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Research) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *Research) GetSafe() string {
	if m != nil {
		return m.Safe
	}
	return ""
}

func (m *Research) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Research) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Research) GetObjective() string {
	if m != nil {
		return m.Objective
	}
	return ""
}

func (m *Research) GetCoAuthors() string {
	if m != nil {
		return m.CoAuthors
	}
	return ""
}

func (m *Research) GetConclusion() string {
	if m != nil {
		return m.Conclusion
	}
	return ""
}

func (m *Research) GetSummarySmall() string {
	if m != nil {
		return m.SummarySmall
	}
	return ""
}

type SharedContent struct {
	Id         string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ContentId  string                  `protobuf:"bytes,2,opt,name=content_id,json=contentId" json:"content_id,omitempty"`
	Image      string                  `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
	Title      string                  `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Summary    string                  `protobuf:"bytes,5,opt,name=summary" json:"summary,omitempty"`
	Category   string                  `protobuf:"bytes,6,opt,name=category" json:"category,omitempty"`
	CategoryId string                  `protobuf:"bytes,7,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	SharedBy   *go_micro_srv_user.User `protobuf:"bytes,11,opt,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
	Item       *google_protobuf.Any    `protobuf:"bytes,12,opt,name=item" json:"item,omitempty"`
}

func (m *SharedContent) Reset()                    { *m = SharedContent{} }
func (m *SharedContent) String() string            { return proto.CompactTextString(m) }
func (*SharedContent) ProtoMessage()               {}
func (*SharedContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{146} }

func (m *SharedContent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SharedContent) GetContentId() string {
	if m != nil {
		return m.ContentId
	}
	return ""
}

func (m *SharedContent) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SharedContent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SharedContent) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *SharedContent) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *SharedContent) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *SharedContent) GetSharedBy() *go_micro_srv_user.User {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

func (m *SharedContent) GetItem() *google_protobuf.Any {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetTopTagsRequest struct {
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	N     int64  `protobuf:"varint,2,opt,name=n" json:"n,omitempty"`
}

func (m *GetTopTagsRequest) Reset()                    { *m = GetTopTagsRequest{} }
func (m *GetTopTagsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetTopTagsRequest) ProtoMessage()               {}
func (*GetTopTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{147} }

func (m *GetTopTagsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetTopTagsRequest) GetN() int64 {
	if m != nil {
		return m.N
	}
	return 0
}

type GetTopTagsResponse struct {
	Data    *GetTopTagsResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetTopTagsResponse) Reset()                    { *m = GetTopTagsResponse{} }
func (m *GetTopTagsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetTopTagsResponse) ProtoMessage()               {}
func (*GetTopTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148} }

func (m *GetTopTagsResponse) GetData() *GetTopTagsResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetTopTagsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetTopTagsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetTopTagsResponse_Data struct {
	Tags []string `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (m *GetTopTagsResponse_Data) Reset()                    { *m = GetTopTagsResponse_Data{} }
func (m *GetTopTagsResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*GetTopTagsResponse_Data) ProtoMessage()               {}
func (*GetTopTagsResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{148, 0} }

func (m *GetTopTagsResponse_Data) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type AutocompleteTagsRequest struct {
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *AutocompleteTagsRequest) Reset()                    { *m = AutocompleteTagsRequest{} }
func (m *AutocompleteTagsRequest) String() string            { return proto.CompactTextString(m) }
func (*AutocompleteTagsRequest) ProtoMessage()               {}
func (*AutocompleteTagsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{149} }

func (m *AutocompleteTagsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AutocompleteTagsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AutocompleteTagsResponse struct {
	Data    *AutocompleteTagsResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AutocompleteTagsResponse) Reset()                    { *m = AutocompleteTagsResponse{} }
func (m *AutocompleteTagsResponse) String() string            { return proto.CompactTextString(m) }
func (*AutocompleteTagsResponse) ProtoMessage()               {}
func (*AutocompleteTagsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{150} }

func (m *AutocompleteTagsResponse) GetData() *AutocompleteTagsResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AutocompleteTagsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AutocompleteTagsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AutocompleteTagsResponse_Data struct {
	Tags []string `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
}

func (m *AutocompleteTagsResponse_Data) Reset()         { *m = AutocompleteTagsResponse_Data{} }
func (m *AutocompleteTagsResponse_Data) String() string { return proto.CompactTextString(m) }
func (*AutocompleteTagsResponse_Data) ProtoMessage()    {}
func (*AutocompleteTagsResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{150, 0}
}

func (m *AutocompleteTagsResponse_Data) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type WarmupCacheContentRequest struct {
}

func (m *WarmupCacheContentRequest) Reset()                    { *m = WarmupCacheContentRequest{} }
func (m *WarmupCacheContentRequest) String() string            { return proto.CompactTextString(m) }
func (*WarmupCacheContentRequest) ProtoMessage()               {}
func (*WarmupCacheContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{151} }

type WarmupCacheContentResponse struct {
}

func (m *WarmupCacheContentResponse) Reset()                    { *m = WarmupCacheContentResponse{} }
func (m *WarmupCacheContentResponse) String() string            { return proto.CompactTextString(m) }
func (*WarmupCacheContentResponse) ProtoMessage()               {}
func (*WarmupCacheContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{152} }

type AutocompleteContentCategoryItemRequest struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NameSlug string `protobuf:"bytes,2,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *AutocompleteContentCategoryItemRequest) Reset() {
	*m = AutocompleteContentCategoryItemRequest{}
}
func (m *AutocompleteContentCategoryItemRequest) String() string { return proto.CompactTextString(m) }
func (*AutocompleteContentCategoryItemRequest) ProtoMessage()    {}
func (*AutocompleteContentCategoryItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{153}
}

func (m *AutocompleteContentCategoryItemRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AutocompleteContentCategoryItemRequest) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type AutocompleteContentCategoryItemResponse struct {
	Data    *AutocompleteContentCategoryItemResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AutocompleteContentCategoryItemResponse) Reset() {
	*m = AutocompleteContentCategoryItemResponse{}
}
func (m *AutocompleteContentCategoryItemResponse) String() string { return proto.CompactTextString(m) }
func (*AutocompleteContentCategoryItemResponse) ProtoMessage()    {}
func (*AutocompleteContentCategoryItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{154}
}

func (m *AutocompleteContentCategoryItemResponse) GetData() *AutocompleteContentCategoryItemResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AutocompleteContentCategoryItemResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AutocompleteContentCategoryItemResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AutocompleteContentCategoryItemResponse_Data struct {
	Response []*ContentCategoryItemResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *AutocompleteContentCategoryItemResponse_Data) Reset() {
	*m = AutocompleteContentCategoryItemResponse_Data{}
}
func (m *AutocompleteContentCategoryItemResponse_Data) String() string {
	return proto.CompactTextString(m)
}
func (*AutocompleteContentCategoryItemResponse_Data) ProtoMessage() {}
func (*AutocompleteContentCategoryItemResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{154, 0}
}

func (m *AutocompleteContentCategoryItemResponse_Data) GetResponse() []*ContentCategoryItemResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type AllContentCategoryItemByNameslugRequest struct {
	NameSlug string `protobuf:"bytes,2,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *AllContentCategoryItemByNameslugRequest) Reset() {
	*m = AllContentCategoryItemByNameslugRequest{}
}
func (m *AllContentCategoryItemByNameslugRequest) String() string { return proto.CompactTextString(m) }
func (*AllContentCategoryItemByNameslugRequest) ProtoMessage()    {}
func (*AllContentCategoryItemByNameslugRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{155}
}

func (m *AllContentCategoryItemByNameslugRequest) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type AllContentCategoryItemByNameslugResponse struct {
	Data    *AllContentCategoryItemByNameslugResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllContentCategoryItemByNameslugResponse) Reset() {
	*m = AllContentCategoryItemByNameslugResponse{}
}
func (m *AllContentCategoryItemByNameslugResponse) String() string { return proto.CompactTextString(m) }
func (*AllContentCategoryItemByNameslugResponse) ProtoMessage()    {}
func (*AllContentCategoryItemByNameslugResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{156}
}

func (m *AllContentCategoryItemByNameslugResponse) GetData() *AllContentCategoryItemByNameslugResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllContentCategoryItemByNameslugResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllContentCategoryItemByNameslugResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllContentCategoryItemByNameslugResponse_Data struct {
	Response []*ContentCategoryItemResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *AllContentCategoryItemByNameslugResponse_Data) Reset() {
	*m = AllContentCategoryItemByNameslugResponse_Data{}
}
func (m *AllContentCategoryItemByNameslugResponse_Data) String() string {
	return proto.CompactTextString(m)
}
func (*AllContentCategoryItemByNameslugResponse_Data) ProtoMessage() {}
func (*AllContentCategoryItemByNameslugResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{156, 0}
}

func (m *AllContentCategoryItemByNameslugResponse_Data) GetResponse() []*ContentCategoryItemResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type ContentCategoryItemResponse struct {
	CategoryId       string `protobuf:"bytes,1,opt,name=category_id,json=categoryId" json:"category_id,omitempty"`
	CategoryNameslug string `protobuf:"bytes,2,opt,name=category_nameslug,json=categoryNameslug" json:"category_nameslug,omitempty"`
	CategoryitemId   string `protobuf:"bytes,3,opt,name=categoryitem_id,json=categoryitemId" json:"categoryitem_id,omitempty"`
	CategoryitemName string `protobuf:"bytes,4,opt,name=categoryitem_name,json=categoryitemName" json:"categoryitem_name,omitempty"`
}

func (m *ContentCategoryItemResponse) Reset()                    { *m = ContentCategoryItemResponse{} }
func (m *ContentCategoryItemResponse) String() string            { return proto.CompactTextString(m) }
func (*ContentCategoryItemResponse) ProtoMessage()               {}
func (*ContentCategoryItemResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{157} }

func (m *ContentCategoryItemResponse) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *ContentCategoryItemResponse) GetCategoryNameslug() string {
	if m != nil {
		return m.CategoryNameslug
	}
	return ""
}

func (m *ContentCategoryItemResponse) GetCategoryitemId() string {
	if m != nil {
		return m.CategoryitemId
	}
	return ""
}

func (m *ContentCategoryItemResponse) GetCategoryitemName() string {
	if m != nil {
		return m.CategoryitemName
	}
	return ""
}

func init() {
	proto.RegisterType((*SourceData)(nil), "go.micro.srv.content.SourceData")
	proto.RegisterType((*SourceArrData)(nil), "go.micro.srv.content.SourceArrData")
	proto.RegisterType((*TaxonomyData)(nil), "go.micro.srv.content.TaxonomyData")
	proto.RegisterType((*TaxonomyArrData)(nil), "go.micro.srv.content.TaxonomyArrData")
	proto.RegisterType((*ContentCategoryItemData)(nil), "go.micro.srv.content.ContentCategoryItemData")
	proto.RegisterType((*ContentCategoryItemArrData)(nil), "go.micro.srv.content.ContentCategoryItemArrData")
	proto.RegisterType((*ContentData)(nil), "go.micro.srv.content.ContentData")
	proto.RegisterType((*ContentArrData)(nil), "go.micro.srv.content.ContentArrData")
	proto.RegisterType((*ContentRuleData)(nil), "go.micro.srv.content.ContentRuleData")
	proto.RegisterType((*ContentRuleArrData)(nil), "go.micro.srv.content.ContentRuleArrData")
	proto.RegisterType((*AllSourcesRequest)(nil), "go.micro.srv.content.AllSourcesRequest")
	proto.RegisterType((*AllSourcesResponse)(nil), "go.micro.srv.content.AllSourcesResponse")
	proto.RegisterType((*CreateSourceRequest)(nil), "go.micro.srv.content.CreateSourceRequest")
	proto.RegisterType((*CreateSourceResponse)(nil), "go.micro.srv.content.CreateSourceResponse")
	proto.RegisterType((*UpdateSourceRequest)(nil), "go.micro.srv.content.UpdateSourceRequest")
	proto.RegisterType((*UpdateSourceResponse)(nil), "go.micro.srv.content.UpdateSourceResponse")
	proto.RegisterType((*ReadSourceRequest)(nil), "go.micro.srv.content.ReadSourceRequest")
	proto.RegisterType((*ReadSourceResponse)(nil), "go.micro.srv.content.ReadSourceResponse")
	proto.RegisterType((*DeleteSourceRequest)(nil), "go.micro.srv.content.DeleteSourceRequest")
	proto.RegisterType((*DeleteSourceResponse)(nil), "go.micro.srv.content.DeleteSourceResponse")
	proto.RegisterType((*AllTaxonomysRequest)(nil), "go.micro.srv.content.AllTaxonomysRequest")
	proto.RegisterType((*AllTaxonomysResponse)(nil), "go.micro.srv.content.AllTaxonomysResponse")
	proto.RegisterType((*CreateTaxonomyRequest)(nil), "go.micro.srv.content.CreateTaxonomyRequest")
	proto.RegisterType((*CreateTaxonomyResponse)(nil), "go.micro.srv.content.CreateTaxonomyResponse")
	proto.RegisterType((*UpdateTaxonomyRequest)(nil), "go.micro.srv.content.UpdateTaxonomyRequest")
	proto.RegisterType((*UpdateTaxonomyResponse)(nil), "go.micro.srv.content.UpdateTaxonomyResponse")
	proto.RegisterType((*ReadTaxonomyRequest)(nil), "go.micro.srv.content.ReadTaxonomyRequest")
	proto.RegisterType((*ReadTaxonomyResponse)(nil), "go.micro.srv.content.ReadTaxonomyResponse")
	proto.RegisterType((*DeleteTaxonomyRequest)(nil), "go.micro.srv.content.DeleteTaxonomyRequest")
	proto.RegisterType((*DeleteTaxonomyResponse)(nil), "go.micro.srv.content.DeleteTaxonomyResponse")
	proto.RegisterType((*AllContentCategoryItemsRequest)(nil), "go.micro.srv.content.AllContentCategoryItemsRequest")
	proto.RegisterType((*AllContentCategoryItemsResponse)(nil), "go.micro.srv.content.AllContentCategoryItemsResponse")
	proto.RegisterType((*CreateContentCategoryItemRequest)(nil), "go.micro.srv.content.CreateContentCategoryItemRequest")
	proto.RegisterType((*CreateContentCategoryItemResponse)(nil), "go.micro.srv.content.CreateContentCategoryItemResponse")
	proto.RegisterType((*UpdateContentCategoryItemRequest)(nil), "go.micro.srv.content.UpdateContentCategoryItemRequest")
	proto.RegisterType((*UpdateContentCategoryItemResponse)(nil), "go.micro.srv.content.UpdateContentCategoryItemResponse")
	proto.RegisterType((*ReadContentCategoryItemRequest)(nil), "go.micro.srv.content.ReadContentCategoryItemRequest")
	proto.RegisterType((*ReadContentCategoryItemResponse)(nil), "go.micro.srv.content.ReadContentCategoryItemResponse")
	proto.RegisterType((*DeleteContentCategoryItemRequest)(nil), "go.micro.srv.content.DeleteContentCategoryItemRequest")
	proto.RegisterType((*DeleteContentCategoryItemResponse)(nil), "go.micro.srv.content.DeleteContentCategoryItemResponse")
	proto.RegisterType((*AllContentsRequest)(nil), "go.micro.srv.content.AllContentsRequest")
	proto.RegisterType((*AllContentsResponse)(nil), "go.micro.srv.content.AllContentsResponse")
	proto.RegisterType((*CreateContentRequest)(nil), "go.micro.srv.content.CreateContentRequest")
	proto.RegisterType((*CreateContentResponse)(nil), "go.micro.srv.content.CreateContentResponse")
	proto.RegisterType((*UpdateContentRequest)(nil), "go.micro.srv.content.UpdateContentRequest")
	proto.RegisterType((*UpdateContentResponse)(nil), "go.micro.srv.content.UpdateContentResponse")
	proto.RegisterType((*ReadContentRequest)(nil), "go.micro.srv.content.ReadContentRequest")
	proto.RegisterType((*ReadContentResponse)(nil), "go.micro.srv.content.ReadContentResponse")
	proto.RegisterType((*DeleteContentRequest)(nil), "go.micro.srv.content.DeleteContentRequest")
	proto.RegisterType((*DeleteContentResponse)(nil), "go.micro.srv.content.DeleteContentResponse")
	proto.RegisterType((*AllContentRulesRequest)(nil), "go.micro.srv.content.AllContentRulesRequest")
	proto.RegisterType((*AllContentRulesResponse)(nil), "go.micro.srv.content.AllContentRulesResponse")
	proto.RegisterType((*UpdateContentRuleRequest)(nil), "go.micro.srv.content.UpdateContentRuleRequest")
	proto.RegisterType((*UpdateContentRuleResponse)(nil), "go.micro.srv.content.UpdateContentRuleResponse")
	proto.RegisterType((*CreateContentRuleRequest)(nil), "go.micro.srv.content.CreateContentRuleRequest")
	proto.RegisterType((*CreateContentRuleResponse)(nil), "go.micro.srv.content.CreateContentRuleResponse")
	proto.RegisterType((*ReadContentRuleRequest)(nil), "go.micro.srv.content.ReadContentRuleRequest")
	proto.RegisterType((*ReadContentRuleResponse)(nil), "go.micro.srv.content.ReadContentRuleResponse")
	proto.RegisterType((*DeleteContentRuleRequest)(nil), "go.micro.srv.content.DeleteContentRuleRequest")
	proto.RegisterType((*DeleteContentRuleResponse)(nil), "go.micro.srv.content.DeleteContentRuleResponse")
	proto.RegisterType((*FilterContentRequest)(nil), "go.micro.srv.content.FilterContentRequest")
	proto.RegisterType((*FilterContentResponse)(nil), "go.micro.srv.content.FilterContentResponse")
	proto.RegisterType((*SearchContentRequest)(nil), "go.micro.srv.content.SearchContentRequest")
	proto.RegisterType((*SearchContentResponse)(nil), "go.micro.srv.content.SearchContentResponse")
	proto.RegisterType((*SearchContentResponse_Data)(nil), "go.micro.srv.content.SearchContentResponse.Data")
	proto.RegisterType((*CreateActivityContentRequest)(nil), "go.micro.srv.content.CreateActivityContentRequest")
	proto.RegisterType((*CreateRecipeContentRequest)(nil), "go.micro.srv.content.CreateRecipeContentRequest")
	proto.RegisterType((*CreateExerciseContentRequest)(nil), "go.micro.srv.content.CreateExerciseContentRequest")
	proto.RegisterType((*CreateArticleContentRequest)(nil), "go.micro.srv.content.CreateArticleContentRequest")
	proto.RegisterType((*CreatePlaceContentRequest)(nil), "go.micro.srv.content.CreatePlaceContentRequest")
	proto.RegisterType((*CreateWellbeingContentRequest)(nil), "go.micro.srv.content.CreateWellbeingContentRequest")
	proto.RegisterType((*CreateVideoContentRequest)(nil), "go.micro.srv.content.CreateVideoContentRequest")
	proto.RegisterType((*CreateProductContentRequest)(nil), "go.micro.srv.content.CreateProductContentRequest")
	proto.RegisterType((*CreateServiceContentRequest)(nil), "go.micro.srv.content.CreateServiceContentRequest")
	proto.RegisterType((*CreateEventContentRequest)(nil), "go.micro.srv.content.CreateEventContentRequest")
	proto.RegisterType((*CreateResearchContentRequest)(nil), "go.micro.srv.content.CreateResearchContentRequest")
	proto.RegisterType((*CreateAppContentRequest)(nil), "go.micro.srv.content.CreateAppContentRequest")
	proto.RegisterType((*CreateContentRecommendationRequest)(nil), "go.micro.srv.content.CreateContentRecommendationRequest")
	proto.RegisterType((*CreateContentRecommendationResponse)(nil), "go.micro.srv.content.CreateContentRecommendationResponse")
	proto.RegisterType((*CreateContentRecommendationResponse_Data)(nil), "go.micro.srv.content.CreateContentRecommendationResponse.Data")
	proto.RegisterType((*GetContentCategorysRequest)(nil), "go.micro.srv.content.GetContentCategorysRequest")
	proto.RegisterType((*GetContentCategorysResponse)(nil), "go.micro.srv.content.GetContentCategorysResponse")
	proto.RegisterType((*GetContentCategorysResponse_Data)(nil), "go.micro.srv.content.GetContentCategorysResponse.Data")
	proto.RegisterType((*GetContentDetailRequest)(nil), "go.micro.srv.content.GetContentDetailRequest")
	proto.RegisterType((*GetContentDetailResponse)(nil), "go.micro.srv.content.GetContentDetailResponse")
	proto.RegisterType((*GetContentDetailResponse_Data)(nil), "go.micro.srv.content.GetContentDetailResponse.Data")
	proto.RegisterType((*GetContentByCategoryRequest)(nil), "go.micro.srv.content.GetContentByCategoryRequest")
	proto.RegisterType((*GetContentByCategoryResponse)(nil), "go.micro.srv.content.GetContentByCategoryResponse")
	proto.RegisterType((*GetContentByCategoryResponse_Data)(nil), "go.micro.srv.content.GetContentByCategoryResponse.Data")
	proto.RegisterType((*GetFiltersForCategoryRequest)(nil), "go.micro.srv.content.GetFiltersForCategoryRequest")
	proto.RegisterType((*GetFiltersForCategoryResponse)(nil), "go.micro.srv.content.GetFiltersForCategoryResponse")
	proto.RegisterType((*FiltersAutocompleteRequest)(nil), "go.micro.srv.content.FiltersAutocompleteRequest")
	proto.RegisterType((*FiltersAutocompleteResponse)(nil), "go.micro.srv.content.FiltersAutocompleteResponse")
	proto.RegisterType((*FiltersAutocompleteResponse_Data)(nil), "go.micro.srv.content.FiltersAutocompleteResponse.Data")
	proto.RegisterType((*FilterContentInParticularCategoryRequest)(nil), "go.micro.srv.content.FilterContentInParticularCategoryRequest")
	proto.RegisterType((*FilterContentInParticularCategoryResponse)(nil), "go.micro.srv.content.FilterContentInParticularCategoryResponse")
	proto.RegisterType((*FilterContentInParticularCategoryResponse_Data)(nil), "go.micro.srv.content.FilterContentInParticularCategoryResponse.Data")
	proto.RegisterType((*GetContentRecommendationByUserRequest)(nil), "go.micro.srv.content.GetContentRecommendationByUserRequest")
	proto.RegisterType((*GetContentRecommendationByUserResponse)(nil), "go.micro.srv.content.GetContentRecommendationByUserResponse")
	proto.RegisterType((*GetContentRecommendationByUserResponse_Data)(nil), "go.micro.srv.content.GetContentRecommendationByUserResponse.Data")
	proto.RegisterType((*GetContentRecommendationByCategoryRequest)(nil), "go.micro.srv.content.GetContentRecommendationByCategoryRequest")
	proto.RegisterType((*GetContentRecommendationByCategoryResponse)(nil), "go.micro.srv.content.GetContentRecommendationByCategoryResponse")
	proto.RegisterType((*GetContentRecommendationByCategoryResponse_Data)(nil), "go.micro.srv.content.GetContentRecommendationByCategoryResponse.Data")
	proto.RegisterType((*GetRandomItemsRequest)(nil), "go.micro.srv.content.GetRandomItemsRequest")
	proto.RegisterType((*GetRandomItemsResponse)(nil), "go.micro.srv.content.GetRandomItemsResponse")
	proto.RegisterType((*GetAllSharedContentsRequest)(nil), "go.micro.srv.content.GetAllSharedContentsRequest")
	proto.RegisterType((*GetAllSharedContentsResponse)(nil), "go.micro.srv.content.GetAllSharedContentsResponse")
	proto.RegisterType((*GetAllSharedContentsResponse_Data)(nil), "go.micro.srv.content.GetAllSharedContentsResponse.Data")
	proto.RegisterType((*GetContentRecommendationsRequest)(nil), "go.micro.srv.content.GetContentRecommendationsRequest")
	proto.RegisterType((*GetContentRecommendationsResponse)(nil), "go.micro.srv.content.GetContentRecommendationsResponse")
	proto.RegisterType((*GetContentRecommendationsResponse_Data)(nil), "go.micro.srv.content.GetContentRecommendationsResponse.Data")
	proto.RegisterType((*GetContentFiltersByPreferenceRequest)(nil), "go.micro.srv.content.GetContentFiltersByPreferenceRequest")
	proto.RegisterType((*GetContentFiltersByPreferenceResponse)(nil), "go.micro.srv.content.GetContentFiltersByPreferenceResponse")
	proto.RegisterType((*GetContentFiltersByPreferenceResponse_Data)(nil), "go.micro.srv.content.GetContentFiltersByPreferenceResponse.Data")
	proto.RegisterType((*FilterContentRecommendationsRequest)(nil), "go.micro.srv.content.FilterContentRecommendationsRequest")
	proto.RegisterType((*FilterContentRecommendationsResponse)(nil), "go.micro.srv.content.FilterContentRecommendationsResponse")
	proto.RegisterType((*FilterContentRecommendationsResponse_Data)(nil), "go.micro.srv.content.FilterContentRecommendationsResponse.Data")
	proto.RegisterType((*Source)(nil), "go.micro.srv.content.Source")
	proto.RegisterType((*Content)(nil), "go.micro.srv.content.Content")
	proto.RegisterType((*ContentRule)(nil), "go.micro.srv.content.ContentRule")
	proto.RegisterType((*Expression)(nil), "go.micro.srv.content.Expression")
	proto.RegisterType((*Recipe)(nil), "go.micro.srv.content.Recipe")
	proto.RegisterType((*Nutrition)(nil), "go.micro.srv.content.Nutrition")
	proto.RegisterType((*Ingredient)(nil), "go.micro.srv.content.Ingredient")
	proto.RegisterType((*Article)(nil), "go.micro.srv.content.Article")
	proto.RegisterType((*Exercise)(nil), "go.micro.srv.content.Exercise")
	proto.RegisterType((*Level)(nil), "go.micro.srv.content.Level")
	proto.RegisterType((*Wellbeing)(nil), "go.micro.srv.content.Wellbeing")
	proto.RegisterType((*Recurrence)(nil), "go.micro.srv.content.Recurrence")
	proto.RegisterType((*Place)(nil), "go.micro.srv.content.Place")
	proto.RegisterType((*Geo)(nil), "go.micro.srv.content.Geo")
	proto.RegisterType((*OpeningHours)(nil), "go.micro.srv.content.OpeningHours")
	proto.RegisterType((*Photo)(nil), "go.micro.srv.content.Photo")
	proto.RegisterType((*AltId)(nil), "go.micro.srv.content.AltId")
	proto.RegisterType((*Activity)(nil), "go.micro.srv.content.Activity")
	proto.RegisterType((*Restrictions)(nil), "go.micro.srv.content.Restrictions")
	proto.RegisterType((*Organizer)(nil), "go.micro.srv.content.Organizer")
	proto.RegisterType((*Class)(nil), "go.micro.srv.content.Class")
	proto.RegisterType((*ClassStatus)(nil), "go.micro.srv.content.ClassStatus")
	proto.RegisterType((*ClassType)(nil), "go.micro.srv.content.ClassType")
	proto.RegisterType((*Coach)(nil), "go.micro.srv.content.Coach")
	proto.RegisterType((*ActivityAttr)(nil), "go.micro.srv.content.ActivityAttr")
	proto.RegisterType((*Offer)(nil), "go.micro.srv.content.Offer")
	proto.RegisterType((*Contributor)(nil), "go.micro.srv.content.Contributor")
	proto.RegisterType((*Park)(nil), "go.micro.srv.content.Park")
	proto.RegisterType((*Borough)(nil), "go.micro.srv.content.Borough")
	proto.RegisterType((*SubEvent)(nil), "go.micro.srv.content.SubEvent")
	proto.RegisterType((*ShareContentRequest)(nil), "go.micro.srv.content.ShareContentRequest")
	proto.RegisterType((*ShareContentResponse)(nil), "go.micro.srv.content.ShareContentResponse")
	proto.RegisterType((*ShareContentUser)(nil), "go.micro.srv.content.ShareContentUser")
	proto.RegisterType((*CategoryResponse)(nil), "go.micro.srv.content.CategoryResponse")
	proto.RegisterType((*ContentResponse)(nil), "go.micro.srv.content.ContentResponse")
	proto.RegisterType((*ContentRecommendation)(nil), "go.micro.srv.content.ContentRecommendation")
	proto.RegisterType((*Recommendation)(nil), "go.micro.srv.content.Recommendation")
	proto.RegisterType((*Product)(nil), "go.micro.srv.content.Product")
	proto.RegisterType((*Service)(nil), "go.micro.srv.content.Service")
	proto.RegisterType((*Event)(nil), "go.micro.srv.content.Event")
	proto.RegisterType((*Video)(nil), "go.micro.srv.content.Video")
	proto.RegisterType((*Research)(nil), "go.micro.srv.content.Research")
	proto.RegisterType((*SharedContent)(nil), "go.micro.srv.content.SharedContent")
	proto.RegisterType((*GetTopTagsRequest)(nil), "go.micro.srv.content.GetTopTagsRequest")
	proto.RegisterType((*GetTopTagsResponse)(nil), "go.micro.srv.content.GetTopTagsResponse")
	proto.RegisterType((*GetTopTagsResponse_Data)(nil), "go.micro.srv.content.GetTopTagsResponse.Data")
	proto.RegisterType((*AutocompleteTagsRequest)(nil), "go.micro.srv.content.AutocompleteTagsRequest")
	proto.RegisterType((*AutocompleteTagsResponse)(nil), "go.micro.srv.content.AutocompleteTagsResponse")
	proto.RegisterType((*AutocompleteTagsResponse_Data)(nil), "go.micro.srv.content.AutocompleteTagsResponse.Data")
	proto.RegisterType((*WarmupCacheContentRequest)(nil), "go.micro.srv.content.WarmupCacheContentRequest")
	proto.RegisterType((*WarmupCacheContentResponse)(nil), "go.micro.srv.content.WarmupCacheContentResponse")
	proto.RegisterType((*AutocompleteContentCategoryItemRequest)(nil), "go.micro.srv.content.AutocompleteContentCategoryItemRequest")
	proto.RegisterType((*AutocompleteContentCategoryItemResponse)(nil), "go.micro.srv.content.AutocompleteContentCategoryItemResponse")
	proto.RegisterType((*AutocompleteContentCategoryItemResponse_Data)(nil), "go.micro.srv.content.AutocompleteContentCategoryItemResponse.Data")
	proto.RegisterType((*AllContentCategoryItemByNameslugRequest)(nil), "go.micro.srv.content.AllContentCategoryItemByNameslugRequest")
	proto.RegisterType((*AllContentCategoryItemByNameslugResponse)(nil), "go.micro.srv.content.AllContentCategoryItemByNameslugResponse")
	proto.RegisterType((*AllContentCategoryItemByNameslugResponse_Data)(nil), "go.micro.srv.content.AllContentCategoryItemByNameslugResponse.Data")
	proto.RegisterType((*ContentCategoryItemResponse)(nil), "go.micro.srv.content.ContentCategoryItemResponse")
	proto.RegisterEnum("go.micro.srv.content.RuleType", RuleType_name, RuleType_value)
	proto.RegisterEnum("go.micro.srv.content.Operator", Operator_name, Operator_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ContentService service

type ContentServiceClient interface {
	Subscribe(ctx context.Context, in *go_micro_srv_static1.SubscribeRequest, opts ...client.CallOption) (*go_micro_srv_static1.SubscribeResponse, error)
	AllSources(ctx context.Context, in *AllSourcesRequest, opts ...client.CallOption) (*AllSourcesResponse, error)
	CreateSource(ctx context.Context, in *CreateSourceRequest, opts ...client.CallOption) (*CreateSourceResponse, error)
	UpdateSource(ctx context.Context, in *UpdateSourceRequest, opts ...client.CallOption) (*UpdateSourceResponse, error)
	ReadSource(ctx context.Context, in *ReadSourceRequest, opts ...client.CallOption) (*ReadSourceResponse, error)
	DeleteSource(ctx context.Context, in *DeleteSourceRequest, opts ...client.CallOption) (*DeleteSourceResponse, error)
	AllTaxonomys(ctx context.Context, in *AllTaxonomysRequest, opts ...client.CallOption) (*AllTaxonomysResponse, error)
	CreateTaxonomy(ctx context.Context, in *CreateTaxonomyRequest, opts ...client.CallOption) (*CreateTaxonomyResponse, error)
	UpdateTaxonomy(ctx context.Context, in *UpdateTaxonomyRequest, opts ...client.CallOption) (*UpdateTaxonomyResponse, error)
	ReadTaxonomy(ctx context.Context, in *ReadTaxonomyRequest, opts ...client.CallOption) (*ReadTaxonomyResponse, error)
	DeleteTaxonomy(ctx context.Context, in *DeleteTaxonomyRequest, opts ...client.CallOption) (*DeleteTaxonomyResponse, error)
	ReadTaxonomyByNameslug(ctx context.Context, in *go_micro_srv_static.ReadByNameslugRequest, opts ...client.CallOption) (*ReadTaxonomyResponse, error)
	AllContentCategoryItems(ctx context.Context, in *AllContentCategoryItemsRequest, opts ...client.CallOption) (*AllContentCategoryItemsResponse, error)
	CreateContentCategoryItem(ctx context.Context, in *CreateContentCategoryItemRequest, opts ...client.CallOption) (*CreateContentCategoryItemResponse, error)
	UpdateContentCategoryItem(ctx context.Context, in *UpdateContentCategoryItemRequest, opts ...client.CallOption) (*UpdateContentCategoryItemResponse, error)
	ReadContentCategoryItem(ctx context.Context, in *ReadContentCategoryItemRequest, opts ...client.CallOption) (*ReadContentCategoryItemResponse, error)
	DeleteContentCategoryItem(ctx context.Context, in *DeleteContentCategoryItemRequest, opts ...client.CallOption) (*DeleteContentCategoryItemResponse, error)
	AllContents(ctx context.Context, in *AllContentsRequest, opts ...client.CallOption) (*AllContentsResponse, error)
	CreateContent(ctx context.Context, in *CreateContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	UpdateContent(ctx context.Context, in *UpdateContentRequest, opts ...client.CallOption) (*UpdateContentResponse, error)
	ReadContent(ctx context.Context, in *ReadContentRequest, opts ...client.CallOption) (*ReadContentResponse, error)
	DeleteContent(ctx context.Context, in *DeleteContentRequest, opts ...client.CallOption) (*DeleteContentResponse, error)
	AllContentRules(ctx context.Context, in *AllContentRulesRequest, opts ...client.CallOption) (*AllContentRulesResponse, error)
	CreateContentRule(ctx context.Context, in *CreateContentRuleRequest, opts ...client.CallOption) (*CreateContentRuleResponse, error)
	UpdateContentRule(ctx context.Context, in *UpdateContentRuleRequest, opts ...client.CallOption) (*UpdateContentRuleResponse, error)
	ReadContentRule(ctx context.Context, in *ReadContentRuleRequest, opts ...client.CallOption) (*ReadContentRuleResponse, error)
	DeleteContentRule(ctx context.Context, in *DeleteContentRuleRequest, opts ...client.CallOption) (*DeleteContentRuleResponse, error)
	FilterContent(ctx context.Context, in *FilterContentRequest, opts ...client.CallOption) (*FilterContentResponse, error)
	SearchContent(ctx context.Context, in *SearchContentRequest, opts ...client.CallOption) (*SearchContentResponse, error)
	ShareContent(ctx context.Context, in *ShareContentRequest, opts ...client.CallOption) (*ShareContentResponse, error)
	CreateActivityContent(ctx context.Context, in *CreateActivityContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateRecipeContent(ctx context.Context, in *CreateRecipeContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateExerciseContent(ctx context.Context, in *CreateExerciseContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateArticleContent(ctx context.Context, in *CreateArticleContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreatePlaceContent(ctx context.Context, in *CreatePlaceContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateWellbeingContent(ctx context.Context, in *CreateWellbeingContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateVideoContent(ctx context.Context, in *CreateVideoContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateProductContent(ctx context.Context, in *CreateProductContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateServiceContent(ctx context.Context, in *CreateServiceContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateEventContent(ctx context.Context, in *CreateEventContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateResearchContent(ctx context.Context, in *CreateResearchContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateAppContent(ctx context.Context, in *CreateAppContentRequest, opts ...client.CallOption) (*CreateContentResponse, error)
	CreateContentRecommendation(ctx context.Context, in *CreateContentRecommendationRequest, opts ...client.CallOption) (*CreateContentRecommendationResponse, error)
	GetContentCategorys(ctx context.Context, in *GetContentCategorysRequest, opts ...client.CallOption) (*GetContentCategorysResponse, error)
	GetContentDetail(ctx context.Context, in *GetContentDetailRequest, opts ...client.CallOption) (*GetContentDetailResponse, error)
	GetContentByCategory(ctx context.Context, in *GetContentByCategoryRequest, opts ...client.CallOption) (*GetContentByCategoryResponse, error)
	GetFiltersForCategory(ctx context.Context, in *GetFiltersForCategoryRequest, opts ...client.CallOption) (*GetFiltersForCategoryResponse, error)
	FiltersAutocomplete(ctx context.Context, in *FiltersAutocompleteRequest, opts ...client.CallOption) (*FiltersAutocompleteResponse, error)
	FilterContentInParticularCategory(ctx context.Context, in *FilterContentInParticularCategoryRequest, opts ...client.CallOption) (*FilterContentInParticularCategoryResponse, error)
	GetContentRecommendationByUser(ctx context.Context, in *GetContentRecommendationByUserRequest, opts ...client.CallOption) (*GetContentRecommendationByUserResponse, error)
	GetContentRecommendationByCategory(ctx context.Context, in *GetContentRecommendationByCategoryRequest, opts ...client.CallOption) (*GetContentRecommendationByCategoryResponse, error)
	GetRandomItems(ctx context.Context, in *GetRandomItemsRequest, opts ...client.CallOption) (*GetRandomItemsResponse, error)
	GetAllSharedContents(ctx context.Context, in *GetAllSharedContentsRequest, opts ...client.CallOption) (*GetAllSharedContentsResponse, error)
	GetContentRecommendations(ctx context.Context, in *GetContentRecommendationsRequest, opts ...client.CallOption) (*GetContentRecommendationsResponse, error)
	GetContentFiltersByPreference(ctx context.Context, in *GetContentFiltersByPreferenceRequest, opts ...client.CallOption) (*GetContentFiltersByPreferenceResponse, error)
	FilterContentRecommendations(ctx context.Context, in *FilterContentRecommendationsRequest, opts ...client.CallOption) (*FilterContentRecommendationsResponse, error)
	GetTopTags(ctx context.Context, in *GetTopTagsRequest, opts ...client.CallOption) (*GetTopTagsResponse, error)
	AutocompleteTags(ctx context.Context, in *AutocompleteTagsRequest, opts ...client.CallOption) (*AutocompleteTagsResponse, error)
	WarmupCacheContent(ctx context.Context, in *WarmupCacheContentRequest, opts ...client.CallOption) (*WarmupCacheContentResponse, error)
	AutocompleteContentCategoryItem(ctx context.Context, in *AutocompleteContentCategoryItemRequest, opts ...client.CallOption) (*AutocompleteContentCategoryItemResponse, error)
	AllContentCategoryItemByNameslug(ctx context.Context, in *AllContentCategoryItemByNameslugRequest, opts ...client.CallOption) (*AllContentCategoryItemByNameslugResponse, error)
	GetShareableContents(ctx context.Context, in *go_micro_srv_user.GetShareableContentRequest, opts ...client.CallOption) (*go_micro_srv_user.GetShareableContentResponse, error)
}

type contentServiceClient struct {
	c           client.Client
	serviceName string
}

func NewContentServiceClient(serviceName string, c client.Client) ContentServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.content"
	}
	return &contentServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *contentServiceClient) Subscribe(ctx context.Context, in *go_micro_srv_static1.SubscribeRequest, opts ...client.CallOption) (*go_micro_srv_static1.SubscribeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.Subscribe", in)
	out := new(go_micro_srv_static1.SubscribeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) AllSources(ctx context.Context, in *AllSourcesRequest, opts ...client.CallOption) (*AllSourcesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.AllSources", in)
	out := new(AllSourcesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateSource(ctx context.Context, in *CreateSourceRequest, opts ...client.CallOption) (*CreateSourceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateSource", in)
	out := new(CreateSourceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) UpdateSource(ctx context.Context, in *UpdateSourceRequest, opts ...client.CallOption) (*UpdateSourceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.UpdateSource", in)
	out := new(UpdateSourceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ReadSource(ctx context.Context, in *ReadSourceRequest, opts ...client.CallOption) (*ReadSourceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.ReadSource", in)
	out := new(ReadSourceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) DeleteSource(ctx context.Context, in *DeleteSourceRequest, opts ...client.CallOption) (*DeleteSourceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.DeleteSource", in)
	out := new(DeleteSourceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) AllTaxonomys(ctx context.Context, in *AllTaxonomysRequest, opts ...client.CallOption) (*AllTaxonomysResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.AllTaxonomys", in)
	out := new(AllTaxonomysResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateTaxonomy(ctx context.Context, in *CreateTaxonomyRequest, opts ...client.CallOption) (*CreateTaxonomyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateTaxonomy", in)
	out := new(CreateTaxonomyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) UpdateTaxonomy(ctx context.Context, in *UpdateTaxonomyRequest, opts ...client.CallOption) (*UpdateTaxonomyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.UpdateTaxonomy", in)
	out := new(UpdateTaxonomyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ReadTaxonomy(ctx context.Context, in *ReadTaxonomyRequest, opts ...client.CallOption) (*ReadTaxonomyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.ReadTaxonomy", in)
	out := new(ReadTaxonomyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) DeleteTaxonomy(ctx context.Context, in *DeleteTaxonomyRequest, opts ...client.CallOption) (*DeleteTaxonomyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.DeleteTaxonomy", in)
	out := new(DeleteTaxonomyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ReadTaxonomyByNameslug(ctx context.Context, in *go_micro_srv_static.ReadByNameslugRequest, opts ...client.CallOption) (*ReadTaxonomyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.ReadTaxonomyByNameslug", in)
	out := new(ReadTaxonomyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) AllContentCategoryItems(ctx context.Context, in *AllContentCategoryItemsRequest, opts ...client.CallOption) (*AllContentCategoryItemsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.AllContentCategoryItems", in)
	out := new(AllContentCategoryItemsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateContentCategoryItem(ctx context.Context, in *CreateContentCategoryItemRequest, opts ...client.CallOption) (*CreateContentCategoryItemResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateContentCategoryItem", in)
	out := new(CreateContentCategoryItemResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) UpdateContentCategoryItem(ctx context.Context, in *UpdateContentCategoryItemRequest, opts ...client.CallOption) (*UpdateContentCategoryItemResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.UpdateContentCategoryItem", in)
	out := new(UpdateContentCategoryItemResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ReadContentCategoryItem(ctx context.Context, in *ReadContentCategoryItemRequest, opts ...client.CallOption) (*ReadContentCategoryItemResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.ReadContentCategoryItem", in)
	out := new(ReadContentCategoryItemResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) DeleteContentCategoryItem(ctx context.Context, in *DeleteContentCategoryItemRequest, opts ...client.CallOption) (*DeleteContentCategoryItemResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.DeleteContentCategoryItem", in)
	out := new(DeleteContentCategoryItemResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) AllContents(ctx context.Context, in *AllContentsRequest, opts ...client.CallOption) (*AllContentsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.AllContents", in)
	out := new(AllContentsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateContent(ctx context.Context, in *CreateContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) UpdateContent(ctx context.Context, in *UpdateContentRequest, opts ...client.CallOption) (*UpdateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.UpdateContent", in)
	out := new(UpdateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ReadContent(ctx context.Context, in *ReadContentRequest, opts ...client.CallOption) (*ReadContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.ReadContent", in)
	out := new(ReadContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) DeleteContent(ctx context.Context, in *DeleteContentRequest, opts ...client.CallOption) (*DeleteContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.DeleteContent", in)
	out := new(DeleteContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) AllContentRules(ctx context.Context, in *AllContentRulesRequest, opts ...client.CallOption) (*AllContentRulesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.AllContentRules", in)
	out := new(AllContentRulesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateContentRule(ctx context.Context, in *CreateContentRuleRequest, opts ...client.CallOption) (*CreateContentRuleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateContentRule", in)
	out := new(CreateContentRuleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) UpdateContentRule(ctx context.Context, in *UpdateContentRuleRequest, opts ...client.CallOption) (*UpdateContentRuleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.UpdateContentRule", in)
	out := new(UpdateContentRuleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ReadContentRule(ctx context.Context, in *ReadContentRuleRequest, opts ...client.CallOption) (*ReadContentRuleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.ReadContentRule", in)
	out := new(ReadContentRuleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) DeleteContentRule(ctx context.Context, in *DeleteContentRuleRequest, opts ...client.CallOption) (*DeleteContentRuleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.DeleteContentRule", in)
	out := new(DeleteContentRuleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) FilterContent(ctx context.Context, in *FilterContentRequest, opts ...client.CallOption) (*FilterContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.FilterContent", in)
	out := new(FilterContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) SearchContent(ctx context.Context, in *SearchContentRequest, opts ...client.CallOption) (*SearchContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.SearchContent", in)
	out := new(SearchContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ShareContent(ctx context.Context, in *ShareContentRequest, opts ...client.CallOption) (*ShareContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.ShareContent", in)
	out := new(ShareContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateActivityContent(ctx context.Context, in *CreateActivityContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateActivityContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateRecipeContent(ctx context.Context, in *CreateRecipeContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateRecipeContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateExerciseContent(ctx context.Context, in *CreateExerciseContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateExerciseContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateArticleContent(ctx context.Context, in *CreateArticleContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateArticleContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreatePlaceContent(ctx context.Context, in *CreatePlaceContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreatePlaceContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateWellbeingContent(ctx context.Context, in *CreateWellbeingContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateWellbeingContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateVideoContent(ctx context.Context, in *CreateVideoContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateVideoContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateProductContent(ctx context.Context, in *CreateProductContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateProductContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateServiceContent(ctx context.Context, in *CreateServiceContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateServiceContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateEventContent(ctx context.Context, in *CreateEventContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateEventContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateResearchContent(ctx context.Context, in *CreateResearchContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateResearchContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateAppContent(ctx context.Context, in *CreateAppContentRequest, opts ...client.CallOption) (*CreateContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateAppContent", in)
	out := new(CreateContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) CreateContentRecommendation(ctx context.Context, in *CreateContentRecommendationRequest, opts ...client.CallOption) (*CreateContentRecommendationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.CreateContentRecommendation", in)
	out := new(CreateContentRecommendationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetContentCategorys(ctx context.Context, in *GetContentCategorysRequest, opts ...client.CallOption) (*GetContentCategorysResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetContentCategorys", in)
	out := new(GetContentCategorysResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetContentDetail(ctx context.Context, in *GetContentDetailRequest, opts ...client.CallOption) (*GetContentDetailResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetContentDetail", in)
	out := new(GetContentDetailResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetContentByCategory(ctx context.Context, in *GetContentByCategoryRequest, opts ...client.CallOption) (*GetContentByCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetContentByCategory", in)
	out := new(GetContentByCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetFiltersForCategory(ctx context.Context, in *GetFiltersForCategoryRequest, opts ...client.CallOption) (*GetFiltersForCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetFiltersForCategory", in)
	out := new(GetFiltersForCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) FiltersAutocomplete(ctx context.Context, in *FiltersAutocompleteRequest, opts ...client.CallOption) (*FiltersAutocompleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.FiltersAutocomplete", in)
	out := new(FiltersAutocompleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) FilterContentInParticularCategory(ctx context.Context, in *FilterContentInParticularCategoryRequest, opts ...client.CallOption) (*FilterContentInParticularCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.FilterContentInParticularCategory", in)
	out := new(FilterContentInParticularCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetContentRecommendationByUser(ctx context.Context, in *GetContentRecommendationByUserRequest, opts ...client.CallOption) (*GetContentRecommendationByUserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetContentRecommendationByUser", in)
	out := new(GetContentRecommendationByUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetContentRecommendationByCategory(ctx context.Context, in *GetContentRecommendationByCategoryRequest, opts ...client.CallOption) (*GetContentRecommendationByCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetContentRecommendationByCategory", in)
	out := new(GetContentRecommendationByCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetRandomItems(ctx context.Context, in *GetRandomItemsRequest, opts ...client.CallOption) (*GetRandomItemsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetRandomItems", in)
	out := new(GetRandomItemsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetAllSharedContents(ctx context.Context, in *GetAllSharedContentsRequest, opts ...client.CallOption) (*GetAllSharedContentsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetAllSharedContents", in)
	out := new(GetAllSharedContentsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetContentRecommendations(ctx context.Context, in *GetContentRecommendationsRequest, opts ...client.CallOption) (*GetContentRecommendationsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetContentRecommendations", in)
	out := new(GetContentRecommendationsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetContentFiltersByPreference(ctx context.Context, in *GetContentFiltersByPreferenceRequest, opts ...client.CallOption) (*GetContentFiltersByPreferenceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetContentFiltersByPreference", in)
	out := new(GetContentFiltersByPreferenceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) FilterContentRecommendations(ctx context.Context, in *FilterContentRecommendationsRequest, opts ...client.CallOption) (*FilterContentRecommendationsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.FilterContentRecommendations", in)
	out := new(FilterContentRecommendationsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetTopTags(ctx context.Context, in *GetTopTagsRequest, opts ...client.CallOption) (*GetTopTagsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetTopTags", in)
	out := new(GetTopTagsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) AutocompleteTags(ctx context.Context, in *AutocompleteTagsRequest, opts ...client.CallOption) (*AutocompleteTagsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.AutocompleteTags", in)
	out := new(AutocompleteTagsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) WarmupCacheContent(ctx context.Context, in *WarmupCacheContentRequest, opts ...client.CallOption) (*WarmupCacheContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.WarmupCacheContent", in)
	out := new(WarmupCacheContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) AutocompleteContentCategoryItem(ctx context.Context, in *AutocompleteContentCategoryItemRequest, opts ...client.CallOption) (*AutocompleteContentCategoryItemResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.AutocompleteContentCategoryItem", in)
	out := new(AutocompleteContentCategoryItemResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) AllContentCategoryItemByNameslug(ctx context.Context, in *AllContentCategoryItemByNameslugRequest, opts ...client.CallOption) (*AllContentCategoryItemByNameslugResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.AllContentCategoryItemByNameslug", in)
	out := new(AllContentCategoryItemByNameslugResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) GetShareableContents(ctx context.Context, in *go_micro_srv_user.GetShareableContentRequest, opts ...client.CallOption) (*go_micro_srv_user.GetShareableContentResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ContentService.GetShareableContents", in)
	out := new(go_micro_srv_user.GetShareableContentResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ContentService service

type ContentServiceHandler interface {
	Subscribe(context.Context, *go_micro_srv_static1.SubscribeRequest, *go_micro_srv_static1.SubscribeResponse) error
	AllSources(context.Context, *AllSourcesRequest, *AllSourcesResponse) error
	CreateSource(context.Context, *CreateSourceRequest, *CreateSourceResponse) error
	UpdateSource(context.Context, *UpdateSourceRequest, *UpdateSourceResponse) error
	ReadSource(context.Context, *ReadSourceRequest, *ReadSourceResponse) error
	DeleteSource(context.Context, *DeleteSourceRequest, *DeleteSourceResponse) error
	AllTaxonomys(context.Context, *AllTaxonomysRequest, *AllTaxonomysResponse) error
	CreateTaxonomy(context.Context, *CreateTaxonomyRequest, *CreateTaxonomyResponse) error
	UpdateTaxonomy(context.Context, *UpdateTaxonomyRequest, *UpdateTaxonomyResponse) error
	ReadTaxonomy(context.Context, *ReadTaxonomyRequest, *ReadTaxonomyResponse) error
	DeleteTaxonomy(context.Context, *DeleteTaxonomyRequest, *DeleteTaxonomyResponse) error
	ReadTaxonomyByNameslug(context.Context, *go_micro_srv_static.ReadByNameslugRequest, *ReadTaxonomyResponse) error
	AllContentCategoryItems(context.Context, *AllContentCategoryItemsRequest, *AllContentCategoryItemsResponse) error
	CreateContentCategoryItem(context.Context, *CreateContentCategoryItemRequest, *CreateContentCategoryItemResponse) error
	UpdateContentCategoryItem(context.Context, *UpdateContentCategoryItemRequest, *UpdateContentCategoryItemResponse) error
	ReadContentCategoryItem(context.Context, *ReadContentCategoryItemRequest, *ReadContentCategoryItemResponse) error
	DeleteContentCategoryItem(context.Context, *DeleteContentCategoryItemRequest, *DeleteContentCategoryItemResponse) error
	AllContents(context.Context, *AllContentsRequest, *AllContentsResponse) error
	CreateContent(context.Context, *CreateContentRequest, *CreateContentResponse) error
	UpdateContent(context.Context, *UpdateContentRequest, *UpdateContentResponse) error
	ReadContent(context.Context, *ReadContentRequest, *ReadContentResponse) error
	DeleteContent(context.Context, *DeleteContentRequest, *DeleteContentResponse) error
	AllContentRules(context.Context, *AllContentRulesRequest, *AllContentRulesResponse) error
	CreateContentRule(context.Context, *CreateContentRuleRequest, *CreateContentRuleResponse) error
	UpdateContentRule(context.Context, *UpdateContentRuleRequest, *UpdateContentRuleResponse) error
	ReadContentRule(context.Context, *ReadContentRuleRequest, *ReadContentRuleResponse) error
	DeleteContentRule(context.Context, *DeleteContentRuleRequest, *DeleteContentRuleResponse) error
	FilterContent(context.Context, *FilterContentRequest, *FilterContentResponse) error
	SearchContent(context.Context, *SearchContentRequest, *SearchContentResponse) error
	ShareContent(context.Context, *ShareContentRequest, *ShareContentResponse) error
	CreateActivityContent(context.Context, *CreateActivityContentRequest, *CreateContentResponse) error
	CreateRecipeContent(context.Context, *CreateRecipeContentRequest, *CreateContentResponse) error
	CreateExerciseContent(context.Context, *CreateExerciseContentRequest, *CreateContentResponse) error
	CreateArticleContent(context.Context, *CreateArticleContentRequest, *CreateContentResponse) error
	CreatePlaceContent(context.Context, *CreatePlaceContentRequest, *CreateContentResponse) error
	CreateWellbeingContent(context.Context, *CreateWellbeingContentRequest, *CreateContentResponse) error
	CreateVideoContent(context.Context, *CreateVideoContentRequest, *CreateContentResponse) error
	CreateProductContent(context.Context, *CreateProductContentRequest, *CreateContentResponse) error
	CreateServiceContent(context.Context, *CreateServiceContentRequest, *CreateContentResponse) error
	CreateEventContent(context.Context, *CreateEventContentRequest, *CreateContentResponse) error
	CreateResearchContent(context.Context, *CreateResearchContentRequest, *CreateContentResponse) error
	CreateAppContent(context.Context, *CreateAppContentRequest, *CreateContentResponse) error
	CreateContentRecommendation(context.Context, *CreateContentRecommendationRequest, *CreateContentRecommendationResponse) error
	GetContentCategorys(context.Context, *GetContentCategorysRequest, *GetContentCategorysResponse) error
	GetContentDetail(context.Context, *GetContentDetailRequest, *GetContentDetailResponse) error
	GetContentByCategory(context.Context, *GetContentByCategoryRequest, *GetContentByCategoryResponse) error
	GetFiltersForCategory(context.Context, *GetFiltersForCategoryRequest, *GetFiltersForCategoryResponse) error
	FiltersAutocomplete(context.Context, *FiltersAutocompleteRequest, *FiltersAutocompleteResponse) error
	FilterContentInParticularCategory(context.Context, *FilterContentInParticularCategoryRequest, *FilterContentInParticularCategoryResponse) error
	GetContentRecommendationByUser(context.Context, *GetContentRecommendationByUserRequest, *GetContentRecommendationByUserResponse) error
	GetContentRecommendationByCategory(context.Context, *GetContentRecommendationByCategoryRequest, *GetContentRecommendationByCategoryResponse) error
	GetRandomItems(context.Context, *GetRandomItemsRequest, *GetRandomItemsResponse) error
	GetAllSharedContents(context.Context, *GetAllSharedContentsRequest, *GetAllSharedContentsResponse) error
	GetContentRecommendations(context.Context, *GetContentRecommendationsRequest, *GetContentRecommendationsResponse) error
	GetContentFiltersByPreference(context.Context, *GetContentFiltersByPreferenceRequest, *GetContentFiltersByPreferenceResponse) error
	FilterContentRecommendations(context.Context, *FilterContentRecommendationsRequest, *FilterContentRecommendationsResponse) error
	GetTopTags(context.Context, *GetTopTagsRequest, *GetTopTagsResponse) error
	AutocompleteTags(context.Context, *AutocompleteTagsRequest, *AutocompleteTagsResponse) error
	WarmupCacheContent(context.Context, *WarmupCacheContentRequest, *WarmupCacheContentResponse) error
	AutocompleteContentCategoryItem(context.Context, *AutocompleteContentCategoryItemRequest, *AutocompleteContentCategoryItemResponse) error
	AllContentCategoryItemByNameslug(context.Context, *AllContentCategoryItemByNameslugRequest, *AllContentCategoryItemByNameslugResponse) error
	GetShareableContents(context.Context, *go_micro_srv_user.GetShareableContentRequest, *go_micro_srv_user.GetShareableContentResponse) error
}

func RegisterContentServiceHandler(s server.Server, hdlr ContentServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ContentService{hdlr}, opts...))
}

type ContentService struct {
	ContentServiceHandler
}

func (h *ContentService) Subscribe(ctx context.Context, in *go_micro_srv_static1.SubscribeRequest, out *go_micro_srv_static1.SubscribeResponse) error {
	return h.ContentServiceHandler.Subscribe(ctx, in, out)
}

func (h *ContentService) AllSources(ctx context.Context, in *AllSourcesRequest, out *AllSourcesResponse) error {
	return h.ContentServiceHandler.AllSources(ctx, in, out)
}

func (h *ContentService) CreateSource(ctx context.Context, in *CreateSourceRequest, out *CreateSourceResponse) error {
	return h.ContentServiceHandler.CreateSource(ctx, in, out)
}

func (h *ContentService) UpdateSource(ctx context.Context, in *UpdateSourceRequest, out *UpdateSourceResponse) error {
	return h.ContentServiceHandler.UpdateSource(ctx, in, out)
}

func (h *ContentService) ReadSource(ctx context.Context, in *ReadSourceRequest, out *ReadSourceResponse) error {
	return h.ContentServiceHandler.ReadSource(ctx, in, out)
}

func (h *ContentService) DeleteSource(ctx context.Context, in *DeleteSourceRequest, out *DeleteSourceResponse) error {
	return h.ContentServiceHandler.DeleteSource(ctx, in, out)
}

func (h *ContentService) AllTaxonomys(ctx context.Context, in *AllTaxonomysRequest, out *AllTaxonomysResponse) error {
	return h.ContentServiceHandler.AllTaxonomys(ctx, in, out)
}

func (h *ContentService) CreateTaxonomy(ctx context.Context, in *CreateTaxonomyRequest, out *CreateTaxonomyResponse) error {
	return h.ContentServiceHandler.CreateTaxonomy(ctx, in, out)
}

func (h *ContentService) UpdateTaxonomy(ctx context.Context, in *UpdateTaxonomyRequest, out *UpdateTaxonomyResponse) error {
	return h.ContentServiceHandler.UpdateTaxonomy(ctx, in, out)
}

func (h *ContentService) ReadTaxonomy(ctx context.Context, in *ReadTaxonomyRequest, out *ReadTaxonomyResponse) error {
	return h.ContentServiceHandler.ReadTaxonomy(ctx, in, out)
}

func (h *ContentService) DeleteTaxonomy(ctx context.Context, in *DeleteTaxonomyRequest, out *DeleteTaxonomyResponse) error {
	return h.ContentServiceHandler.DeleteTaxonomy(ctx, in, out)
}

func (h *ContentService) ReadTaxonomyByNameslug(ctx context.Context, in *go_micro_srv_static.ReadByNameslugRequest, out *ReadTaxonomyResponse) error {
	return h.ContentServiceHandler.ReadTaxonomyByNameslug(ctx, in, out)
}

func (h *ContentService) AllContentCategoryItems(ctx context.Context, in *AllContentCategoryItemsRequest, out *AllContentCategoryItemsResponse) error {
	return h.ContentServiceHandler.AllContentCategoryItems(ctx, in, out)
}

func (h *ContentService) CreateContentCategoryItem(ctx context.Context, in *CreateContentCategoryItemRequest, out *CreateContentCategoryItemResponse) error {
	return h.ContentServiceHandler.CreateContentCategoryItem(ctx, in, out)
}

func (h *ContentService) UpdateContentCategoryItem(ctx context.Context, in *UpdateContentCategoryItemRequest, out *UpdateContentCategoryItemResponse) error {
	return h.ContentServiceHandler.UpdateContentCategoryItem(ctx, in, out)
}

func (h *ContentService) ReadContentCategoryItem(ctx context.Context, in *ReadContentCategoryItemRequest, out *ReadContentCategoryItemResponse) error {
	return h.ContentServiceHandler.ReadContentCategoryItem(ctx, in, out)
}

func (h *ContentService) DeleteContentCategoryItem(ctx context.Context, in *DeleteContentCategoryItemRequest, out *DeleteContentCategoryItemResponse) error {
	return h.ContentServiceHandler.DeleteContentCategoryItem(ctx, in, out)
}

func (h *ContentService) AllContents(ctx context.Context, in *AllContentsRequest, out *AllContentsResponse) error {
	return h.ContentServiceHandler.AllContents(ctx, in, out)
}

func (h *ContentService) CreateContent(ctx context.Context, in *CreateContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateContent(ctx, in, out)
}

func (h *ContentService) UpdateContent(ctx context.Context, in *UpdateContentRequest, out *UpdateContentResponse) error {
	return h.ContentServiceHandler.UpdateContent(ctx, in, out)
}

func (h *ContentService) ReadContent(ctx context.Context, in *ReadContentRequest, out *ReadContentResponse) error {
	return h.ContentServiceHandler.ReadContent(ctx, in, out)
}

func (h *ContentService) DeleteContent(ctx context.Context, in *DeleteContentRequest, out *DeleteContentResponse) error {
	return h.ContentServiceHandler.DeleteContent(ctx, in, out)
}

func (h *ContentService) AllContentRules(ctx context.Context, in *AllContentRulesRequest, out *AllContentRulesResponse) error {
	return h.ContentServiceHandler.AllContentRules(ctx, in, out)
}

func (h *ContentService) CreateContentRule(ctx context.Context, in *CreateContentRuleRequest, out *CreateContentRuleResponse) error {
	return h.ContentServiceHandler.CreateContentRule(ctx, in, out)
}

func (h *ContentService) UpdateContentRule(ctx context.Context, in *UpdateContentRuleRequest, out *UpdateContentRuleResponse) error {
	return h.ContentServiceHandler.UpdateContentRule(ctx, in, out)
}

func (h *ContentService) ReadContentRule(ctx context.Context, in *ReadContentRuleRequest, out *ReadContentRuleResponse) error {
	return h.ContentServiceHandler.ReadContentRule(ctx, in, out)
}

func (h *ContentService) DeleteContentRule(ctx context.Context, in *DeleteContentRuleRequest, out *DeleteContentRuleResponse) error {
	return h.ContentServiceHandler.DeleteContentRule(ctx, in, out)
}

func (h *ContentService) FilterContent(ctx context.Context, in *FilterContentRequest, out *FilterContentResponse) error {
	return h.ContentServiceHandler.FilterContent(ctx, in, out)
}

func (h *ContentService) SearchContent(ctx context.Context, in *SearchContentRequest, out *SearchContentResponse) error {
	return h.ContentServiceHandler.SearchContent(ctx, in, out)
}

func (h *ContentService) ShareContent(ctx context.Context, in *ShareContentRequest, out *ShareContentResponse) error {
	return h.ContentServiceHandler.ShareContent(ctx, in, out)
}

func (h *ContentService) CreateActivityContent(ctx context.Context, in *CreateActivityContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateActivityContent(ctx, in, out)
}

func (h *ContentService) CreateRecipeContent(ctx context.Context, in *CreateRecipeContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateRecipeContent(ctx, in, out)
}

func (h *ContentService) CreateExerciseContent(ctx context.Context, in *CreateExerciseContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateExerciseContent(ctx, in, out)
}

func (h *ContentService) CreateArticleContent(ctx context.Context, in *CreateArticleContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateArticleContent(ctx, in, out)
}

func (h *ContentService) CreatePlaceContent(ctx context.Context, in *CreatePlaceContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreatePlaceContent(ctx, in, out)
}

func (h *ContentService) CreateWellbeingContent(ctx context.Context, in *CreateWellbeingContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateWellbeingContent(ctx, in, out)
}

func (h *ContentService) CreateVideoContent(ctx context.Context, in *CreateVideoContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateVideoContent(ctx, in, out)
}

func (h *ContentService) CreateProductContent(ctx context.Context, in *CreateProductContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateProductContent(ctx, in, out)
}

func (h *ContentService) CreateServiceContent(ctx context.Context, in *CreateServiceContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateServiceContent(ctx, in, out)
}

func (h *ContentService) CreateEventContent(ctx context.Context, in *CreateEventContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateEventContent(ctx, in, out)
}

func (h *ContentService) CreateResearchContent(ctx context.Context, in *CreateResearchContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateResearchContent(ctx, in, out)
}

func (h *ContentService) CreateAppContent(ctx context.Context, in *CreateAppContentRequest, out *CreateContentResponse) error {
	return h.ContentServiceHandler.CreateAppContent(ctx, in, out)
}

func (h *ContentService) CreateContentRecommendation(ctx context.Context, in *CreateContentRecommendationRequest, out *CreateContentRecommendationResponse) error {
	return h.ContentServiceHandler.CreateContentRecommendation(ctx, in, out)
}

func (h *ContentService) GetContentCategorys(ctx context.Context, in *GetContentCategorysRequest, out *GetContentCategorysResponse) error {
	return h.ContentServiceHandler.GetContentCategorys(ctx, in, out)
}

func (h *ContentService) GetContentDetail(ctx context.Context, in *GetContentDetailRequest, out *GetContentDetailResponse) error {
	return h.ContentServiceHandler.GetContentDetail(ctx, in, out)
}

func (h *ContentService) GetContentByCategory(ctx context.Context, in *GetContentByCategoryRequest, out *GetContentByCategoryResponse) error {
	return h.ContentServiceHandler.GetContentByCategory(ctx, in, out)
}

func (h *ContentService) GetFiltersForCategory(ctx context.Context, in *GetFiltersForCategoryRequest, out *GetFiltersForCategoryResponse) error {
	return h.ContentServiceHandler.GetFiltersForCategory(ctx, in, out)
}

func (h *ContentService) FiltersAutocomplete(ctx context.Context, in *FiltersAutocompleteRequest, out *FiltersAutocompleteResponse) error {
	return h.ContentServiceHandler.FiltersAutocomplete(ctx, in, out)
}

func (h *ContentService) FilterContentInParticularCategory(ctx context.Context, in *FilterContentInParticularCategoryRequest, out *FilterContentInParticularCategoryResponse) error {
	return h.ContentServiceHandler.FilterContentInParticularCategory(ctx, in, out)
}

func (h *ContentService) GetContentRecommendationByUser(ctx context.Context, in *GetContentRecommendationByUserRequest, out *GetContentRecommendationByUserResponse) error {
	return h.ContentServiceHandler.GetContentRecommendationByUser(ctx, in, out)
}

func (h *ContentService) GetContentRecommendationByCategory(ctx context.Context, in *GetContentRecommendationByCategoryRequest, out *GetContentRecommendationByCategoryResponse) error {
	return h.ContentServiceHandler.GetContentRecommendationByCategory(ctx, in, out)
}

func (h *ContentService) GetRandomItems(ctx context.Context, in *GetRandomItemsRequest, out *GetRandomItemsResponse) error {
	return h.ContentServiceHandler.GetRandomItems(ctx, in, out)
}

func (h *ContentService) GetAllSharedContents(ctx context.Context, in *GetAllSharedContentsRequest, out *GetAllSharedContentsResponse) error {
	return h.ContentServiceHandler.GetAllSharedContents(ctx, in, out)
}

func (h *ContentService) GetContentRecommendations(ctx context.Context, in *GetContentRecommendationsRequest, out *GetContentRecommendationsResponse) error {
	return h.ContentServiceHandler.GetContentRecommendations(ctx, in, out)
}

func (h *ContentService) GetContentFiltersByPreference(ctx context.Context, in *GetContentFiltersByPreferenceRequest, out *GetContentFiltersByPreferenceResponse) error {
	return h.ContentServiceHandler.GetContentFiltersByPreference(ctx, in, out)
}

func (h *ContentService) FilterContentRecommendations(ctx context.Context, in *FilterContentRecommendationsRequest, out *FilterContentRecommendationsResponse) error {
	return h.ContentServiceHandler.FilterContentRecommendations(ctx, in, out)
}

func (h *ContentService) GetTopTags(ctx context.Context, in *GetTopTagsRequest, out *GetTopTagsResponse) error {
	return h.ContentServiceHandler.GetTopTags(ctx, in, out)
}

func (h *ContentService) AutocompleteTags(ctx context.Context, in *AutocompleteTagsRequest, out *AutocompleteTagsResponse) error {
	return h.ContentServiceHandler.AutocompleteTags(ctx, in, out)
}

func (h *ContentService) WarmupCacheContent(ctx context.Context, in *WarmupCacheContentRequest, out *WarmupCacheContentResponse) error {
	return h.ContentServiceHandler.WarmupCacheContent(ctx, in, out)
}

func (h *ContentService) AutocompleteContentCategoryItem(ctx context.Context, in *AutocompleteContentCategoryItemRequest, out *AutocompleteContentCategoryItemResponse) error {
	return h.ContentServiceHandler.AutocompleteContentCategoryItem(ctx, in, out)
}

func (h *ContentService) AllContentCategoryItemByNameslug(ctx context.Context, in *AllContentCategoryItemByNameslugRequest, out *AllContentCategoryItemByNameslugResponse) error {
	return h.ContentServiceHandler.AllContentCategoryItemByNameslug(ctx, in, out)
}

func (h *ContentService) GetShareableContents(ctx context.Context, in *go_micro_srv_user.GetShareableContentRequest, out *go_micro_srv_user.GetShareableContentResponse) error {
	return h.ContentServiceHandler.GetShareableContents(ctx, in, out)
}

func init() { proto.RegisterFile("server/content-srv/proto/content/content.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 7405 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0xe9, 0x8f, 0x1c, 0xc7,
	0x75, 0xf8, 0xf6, 0x5c, 0x3b, 0xf3, 0xf6, 0xe0, 0x6e, 0x71, 0xb9, 0x1c, 0x0e, 0x29, 0x8a, 0x6a,
	0x5d, 0x14, 0x29, 0xad, 0x24, 0xea, 0xa4, 0x44, 0x4b, 0x5a, 0x2e, 0x97, 0xfc, 0xad, 0x4d, 0x53,
	0x74, 0xef, 0x92, 0xf2, 0xf5, 0xc3, 0xa6, 0x77, 0xa6, 0x38, 0xdb, 0x66, 0xcf, 0xf4, 0xb8, 0xba,
	0x67, 0xc9, 0x95, 0xed, 0x28, 0x10, 0x6c, 0xc3, 0x48, 0x9c, 0xdb, 0x46, 0x0c, 0x03, 0x36, 0x62,
	0x04, 0x08, 0x60, 0x20, 0x36, 0x8c, 0xfc, 0x01, 0x49, 0x0c, 0x04, 0x41, 0x3e, 0x04, 0x41, 0x80,
	0x7c, 0xcf, 0x97, 0xd8, 0xc8, 0xa7, 0x7c, 0x48, 0x10, 0x20, 0xfe, 0x92, 0x20, 0xa8, 0xab, 0xbb,
	0xaa, 0xa7, 0xab, 0xe7, 0x58, 0x1e, 0x12, 0x92, 0x2f, 0xbb, 0x53, 0xaf, 0x5f, 0x5d, 0xaf, 0x5e,
	0xbd, 0x7a, 0xf5, 0xea, 0xd5, 0x2b, 0x58, 0x09, 0x31, 0xd9, 0xc3, 0xe4, 0xf9, 0x66, 0xd0, 0x8d,
	0x70, 0x37, 0x7a, 0x2e, 0x24, 0x7b, 0xcf, 0xf7, 0x48, 0x10, 0x05, 0x12, 0x22, 0xff, 0xaf, 0x30,
	0x28, 0x5a, 0x6a, 0x07, 0x2b, 0x1d, 0xaf, 0x49, 0x82, 0x95, 0x90, 0xec, 0xad, 0x88, 0x6f, 0x8d,
	0x63, 0xed, 0x20, 0x68, 0xfb, 0x98, 0xe7, 0xdc, 0xe9, 0xdf, 0x7a, 0xde, 0xed, 0xee, 0xf3, 0x0c,
	0x8d, 0xb3, 0xa2, 0x82, 0x30, 0x72, 0x23, 0xaf, 0xa9, 0x94, 0xcf, 0x01, 0xe2, 0x9f, 0x40, 0x7e,
	0x52, 0x20, 0xf7, 0x43, 0x4c, 0x14, 0x54, 0x9a, 0x64, 0x7f, 0x52, 0x68, 0x51, 0xd0, 0x0a, 0x14,
	0x34, 0x9a, 0x64, 0x7f, 0x86, 0x55, 0xdd, 0xeb, 0xef, 0x84, 0xfd, 0x1d, 0xf1, 0x8f, 0x23, 0xdb,
	0x17, 0x01, 0x36, 0x83, 0x3e, 0x69, 0xe2, 0x4b, 0x6e, 0xe4, 0xa2, 0x97, 0xa1, 0x12, 0xb2, 0x54,
	0xdd, 0x3a, 0x65, 0x9d, 0x9e, 0x39, 0x77, 0x62, 0x25, 0xab, 0xdf, 0x2b, 0x3c, 0x87, 0x23, 0x70,
	0xed, 0x2b, 0x30, 0xc7, 0x21, 0xab, 0x84, 0xb0, 0x62, 0x5e, 0x85, 0x69, 0xfe, 0x29, 0xac, 0x5b,
	0xa7, 0x8a, 0x43, 0xcb, 0x91, 0xc8, 0xf6, 0x06, 0xcc, 0x6e, 0xb9, 0x77, 0x83, 0x6e, 0xd0, 0xd9,
	0x67, 0xe5, 0x9c, 0x87, 0x6a, 0x24, 0xd2, 0xa2, 0x41, 0x8f, 0xe8, 0x05, 0x09, 0x2a, 0xca, 0x4c,
	0x4e, 0x8c, 0x6e, 0x5f, 0x83, 0x43, 0x12, 0x2a, 0x5b, 0xf5, 0x26, 0xd4, 0xe4, 0x67, 0xd9, 0xae,
	0x21, 0xc5, 0x25, 0xf8, 0x76, 0x1f, 0x8e, 0xae, 0xf1, 0x56, 0xaf, 0xb9, 0x11, 0x6e, 0x07, 0x64,
	0x7f, 0x23, 0xc2, 0x1d, 0x56, 0xee, 0xe7, 0xe1, 0x70, 0x73, 0xf0, 0x93, 0x68, 0xf0, 0xe9, 0xcc,
	0x1a, 0x32, 0x8a, 0x72, 0xb2, 0x0a, 0xb1, 0xdf, 0x87, 0x46, 0x06, 0xae, 0xec, 0xd1, 0x17, 0x61,
	0x29, 0x23, 0x93, 0xec, 0xdc, 0xe8, 0x55, 0x67, 0x96, 0x62, 0x5f, 0x86, 0x19, 0x81, 0xcc, 0x2a,
	0x7b, 0x0d, 0xa6, 0x05, 0x5a, 0xf6, 0x58, 0xc8, 0x41, 0x15, 0x79, 0x1c, 0x89, 0x6d, 0x7f, 0x0a,
	0xe6, 0x05, 0x4c, 0xb6, 0xfb, 0x3c, 0x54, 0xc5, 0x47, 0xc3, 0x40, 0xa4, 0xcb, 0x8a, 0xd1, 0xed,
	0x9b, 0x70, 0x48, 0x02, 0xfb, 0x3e, 0x67, 0xda, 0x35, 0x98, 0x69, 0x26, 0x20, 0xd1, 0xb8, 0xc7,
	0xf2, 0x0b, 0xec, 0xfb, 0xd8, 0x51, 0x73, 0xd9, 0x5f, 0x00, 0xa4, 0x7c, 0x93, 0x0d, 0x5d, 0x87,
	0x59, 0x05, 0x49, 0x36, 0x76, 0x84, 0xb2, 0xb5, 0x6c, 0xf6, 0x5f, 0x5a, 0xb0, 0xb8, 0xea, 0xfb,
	0x9c, 0xdd, 0x43, 0x07, 0x7f, 0xb9, 0x8f, 0xc3, 0x08, 0x1d, 0x81, 0x4a, 0x40, 0xda, 0xdb, 0x5e,
	0x8b, 0x35, 0xb9, 0xe6, 0x94, 0x03, 0xd2, 0xde, 0x68, 0xa1, 0xa3, 0x30, 0x1d, 0x61, 0xb7, 0x43,
	0xe1, 0x05, 0x06, 0xaf, 0xd0, 0xe4, 0x46, 0x0b, 0x2d, 0x41, 0xd9, 0xf7, 0x3a, 0x5e, 0x54, 0x2f,
	0x9e, 0xb2, 0x4e, 0x17, 0x1d, 0x9e, 0x40, 0xcb, 0x50, 0x09, 0x6e, 0xdd, 0x0a, 0x71, 0x54, 0x2f,
	0x31, 0xb0, 0x48, 0xa1, 0x27, 0x61, 0x3e, 0x0c, 0x48, 0xb4, 0xdd, 0x73, 0x89, 0xdb, 0xc1, 0x11,
	0x26, 0xf5, 0x32, 0x2b, 0x6d, 0x8e, 0x42, 0xaf, 0x4b, 0x60, 0x8c, 0xd6, 0xf2, 0x08, 0x6e, 0x46,
	0x5e, 0xd0, 0xad, 0x57, 0x12, 0xb4, 0x4b, 0x12, 0x68, 0x7f, 0x05, 0x90, 0xda, 0x81, 0xb0, 0x17,
	0x74, 0x43, 0x8c, 0x5e, 0x83, 0x52, 0xcb, 0x8d, 0x5c, 0x41, 0xf2, 0xc7, 0xf3, 0x26, 0xb9, 0xa0,
	0xa8, 0xc3, 0x32, 0x20, 0x04, 0xa5, 0x66, 0xd0, 0xc2, 0xac, 0x83, 0x45, 0x87, 0xfd, 0x46, 0x75,
	0x98, 0xee, 0xe0, 0x30, 0x74, 0xdb, 0x98, 0x75, 0xb0, 0xe6, 0xc8, 0xa4, 0xfd, 0x15, 0x38, 0xbc,
	0x46, 0xb0, 0x1b, 0x61, 0x21, 0x2f, 0x04, 0xfd, 0x26, 0x12, 0x56, 0x0a, 0xd5, 0x0b, 0x06, 0xaa,
	0x17, 0x55, 0xaa, 0xdb, 0xef, 0xc3, 0x92, 0x5e, 0xb9, 0xe8, 0xfb, 0xcb, 0x5a, 0xdf, 0x4f, 0xe5,
	0xd5, 0x7d, 0x90, 0x8e, 0xdf, 0xe8, 0xb5, 0x1e, 0x5e, 0xc7, 0xf5, 0xca, 0x1f, 0x60, 0xc7, 0x37,
	0x61, 0xd1, 0xc1, 0x6e, 0x4b, 0xef, 0xf6, 0x3c, 0x14, 0xe2, 0xb9, 0x52, 0xf0, 0x5a, 0x63, 0x77,
	0xe8, 0x2e, 0x20, 0xb5, 0xd0, 0x07, 0xd8, 0x9d, 0x1b, 0x70, 0xf8, 0x12, 0xf6, 0x71, 0x7a, 0x1c,
	0x0f, 0xda, 0xa1, 0x4b, 0xb0, 0xa4, 0x17, 0x2b, 0xba, 0x24, 0x1b, 0x67, 0x65, 0x37, 0xae, 0xa0,
	0x37, 0xee, 0xe7, 0x16, 0x1c, 0x5e, 0xf5, 0x7d, 0xb9, 0xe8, 0x7d, 0x2c, 0xc5, 0xd3, 0x07, 0xb0,
	0xa4, 0x77, 0x41, 0x50, 0xe2, 0xbc, 0x36, 0xb8, 0x4f, 0x66, 0x0f, 0x6e, 0x4a, 0x4f, 0x98, 0x68,
	0x84, 0x3f, 0xb4, 0xe0, 0x08, 0x17, 0x13, 0xb1, 0xf2, 0x20, 0xc8, 0x38, 0xb9, 0x0e, 0x33, 0x36,
	0x3f, 0xfc, 0x3a, 0x2c, 0xa7, 0xdb, 0x20, 0xe8, 0xf0, 0xaa, 0x46, 0x07, 0x3b, 0x9f, 0x0e, 0x07,
	0x22, 0x02, 0x17, 0x19, 0x0f, 0x97, 0x08, 0xe9, 0x36, 0x3c, 0x50, 0x22, 0xdc, 0x80, 0xc3, 0x54,
	0xca, 0xa4, 0x29, 0x70, 0xd0, 0xb9, 0xfe, 0x55, 0x58, 0xd2, 0x8b, 0x7d, 0xa0, 0x9d, 0x7a, 0x0f,
	0x8e, 0x70, 0x49, 0x73, 0xaf, 0xbb, 0x75, 0x19, 0x96, 0xd3, 0x05, 0x4f, 0x24, 0xc4, 0xfe, 0xce,
	0x82, 0x93, 0xab, 0xbe, 0x9f, 0xa1, 0xdc, 0x7e, 0x2c, 0xe5, 0xd9, 0x77, 0x2d, 0x78, 0xd4, 0xd8,
	0x1d, 0x41, 0xa0, 0x4b, 0xda, 0xc8, 0xbf, 0x90, 0xab, 0x93, 0x66, 0x6c, 0x1e, 0x26, 0xe2, 0x83,
	0x9f, 0x5a, 0x70, 0x8a, 0x8b, 0x98, 0xac, 0x6d, 0x84, 0x20, 0xf4, 0x7d, 0xdc, 0x0f, 0x8d, 0xcd,
	0x5f, 0xdf, 0xb1, 0xe0, 0xb1, 0x9c, 0x06, 0x0b, 0x52, 0xae, 0x6a, 0xa4, 0x7c, 0x6e, 0x64, 0x52,
	0x1e, 0x88, 0x8e, 0x5c, 0x4a, 0x7d, 0x8c, 0xe8, 0x98, 0xd3, 0xe0, 0x87, 0x45, 0xc7, 0x5f, 0x83,
	0x93, 0x54, 0x2a, 0xe6, 0x10, 0xf1, 0xa0, 0x02, 0xea, 0x0f, 0x2c, 0x78, 0xd4, 0x58, 0xc5, 0xc3,
	0xea, 0xf6, 0x0e, 0x9c, 0xe2, 0x52, 0xf3, 0x3e, 0x76, 0xfc, 0x33, 0xf0, 0x58, 0x4e, 0x1d, 0x13,
	0x09, 0xe9, 0xbf, 0xb2, 0xd8, 0x2e, 0x52, 0x14, 0xf8, 0xb1, 0x14, 0xcc, 0x5f, 0x63, 0xba, 0x72,
	0xd2, 0x03, 0x41, 0x87, 0xd7, 0x35, 0x0e, 0x78, 0x22, 0x97, 0x03, 0x0e, 0x22, 0x7f, 0xbf, 0x67,
	0xc9, 0xdd, 0xa8, 0x34, 0x36, 0x08, 0x1a, 0x4e, 0x6a, 0x9c, 0xa1, 0x54, 0xee, 0x87, 0x98, 0x28,
	0x54, 0xa6, 0xc9, 0x0d, 0x95, 0x5f, 0x8a, 0x86, 0x51, 0x29, 0xa5, 0x14, 0x94, 0x23, 0xa9, 0x96,
	0x09, 0xda, 0xbc, 0xa2, 0xd1, 0x26, 0xdf, 0x76, 0x72, 0x20, 0xc2, 0x68, 0xf2, 0xe9, 0x23, 0x45,
	0x98, 0x54, 0xcb, 0x1e, 0x24, 0x61, 0x3a, 0x7c, 0xd3, 0x9b, 0xa2, 0xca, 0x01, 0x85, 0x83, 0x4a,
	0x9c, 0x92, 0x4a, 0x1c, 0xfb, 0x7d, 0xae, 0xfd, 0x3e, 0x94, 0xae, 0xde, 0x94, 0xdb, 0xe1, 0x7b,
	0xdb, 0x59, 0x7b, 0x5d, 0x2a, 0xbf, 0xe9, 0x5e, 0x8d, 0x27, 0xfd, 0xfe, 0xda, 0x82, 0xe5, 0x44,
	0x76, 0x30, 0xc3, 0xe0, 0xc7, 0x51, 0x02, 0x7e, 0xc3, 0x82, 0xa3, 0x03, 0xdd, 0x10, 0x04, 0xb9,
	0xa0, 0x0d, 0xf3, 0xe9, 0xa1, 0x66, 0xd2, 0x83, 0x88, 0xc2, 0xdf, 0xb5, 0xa0, 0xae, 0xcf, 0xab,
	0xbe, 0x1f, 0x5b, 0x56, 0xee, 0x85, 0x49, 0x78, 0x6c, 0x3e, 0xf9, 0xba, 0x05, 0xc7, 0x32, 0x5a,
	0x34, 0x8e, 0x29, 0x22, 0x65, 0xda, 0x9e, 0x98, 0x30, 0xba, 0x24, 0xfe, 0x28, 0x10, 0x26, 0xa3,
	0x45, 0x0f, 0x9a, 0x30, 0x9f, 0x85, 0x65, 0x55, 0x36, 0x29, 0x54, 0x39, 0xa8, 0x84, 0xf8, 0xd0,
	0x82, 0xa3, 0x03, 0x45, 0x3f, 0xe8, 0xee, 0x7d, 0x1e, 0xea, 0xba, 0x98, 0xba, 0x87, 0x1d, 0xdc,
	0x80, 0x63, 0x19, 0x65, 0x4f, 0x24, 0x06, 0xff, 0xad, 0x08, 0x4b, 0x97, 0x3d, 0x3f, 0xc2, 0x24,
	0x25, 0xa6, 0x93, 0x36, 0xcd, 0x18, 0xda, 0x34, 0x9b, 0x2d, 0x04, 0xe7, 0xb2, 0x85, 0xe0, 0xfc,
	0x10, 0x21, 0x78, 0x68, 0x34, 0x21, 0xb8, 0x90, 0x21, 0x04, 0x69, 0xf7, 0xd4, 0x03, 0xce, 0x5a,
	0x7c, 0x84, 0x89, 0x4e, 0xc1, 0x0c, 0xff, 0xb9, 0xb5, 0xdf, 0xc3, 0x61, 0xbd, 0xc0, 0xbe, 0xaa,
	0x20, 0x64, 0xc7, 0x67, 0x4a, 0x1c, 0xa5, 0xc8, 0x50, 0x34, 0x18, 0x7a, 0x1d, 0x8e, 0x8a, 0xf4,
	0x75, 0x97, 0x24, 0xca, 0xb7, 0x87, 0xc3, 0x7a, 0x89, 0xa1, 0x9b, 0x3e, 0xa3, 0x67, 0x61, 0x51,
	0xdf, 0xef, 0xd1, 0x3c, 0x65, 0x96, 0x67, 0xf0, 0x03, 0x3a, 0x67, 0x38, 0x40, 0xac, 0xb0, 0x0c,
	0x99, 0xdf, 0xe8, 0x70, 0x47, 0xfb, 0x3d, 0x5c, 0x9f, 0x66, 0x38, 0xec, 0x37, 0x7a, 0x04, 0xa0,
	0xc9, 0x26, 0x78, 0x6b, 0x7b, 0x67, 0xbf, 0x5e, 0x65, 0x5f, 0x6a, 0x02, 0x72, 0x71, 0xdf, 0xfe,
	0x00, 0x8e, 0xa4, 0x86, 0xfc, 0x01, 0xeb, 0xcd, 0x7f, 0x63, 0xc1, 0xd2, 0x26, 0x76, 0x49, 0x73,
	0xd7, 0xc8, 0x74, 0xf7, 0x63, 0xe5, 0x5d, 0x82, 0x72, 0xe4, 0x45, 0x3e, 0x16, 0x0b, 0x2e, 0x4f,
	0x30, 0xe6, 0xe9, 0x77, 0x3a, 0x2e, 0xd9, 0x17, 0x2b, 0xac, 0x4c, 0x52, 0xe6, 0x69, 0xe1, 0xb0,
	0x49, 0xbc, 0x1e, 0x63, 0xbd, 0x69, 0xf6, 0x55, 0x05, 0xd9, 0x7f, 0x6f, 0xc1, 0x91, 0x54, 0x47,
	0xc6, 0x31, 0x07, 0x65, 0x66, 0x5d, 0x99, 0x94, 0xac, 0x8d, 0x55, 0x28, 0x1d, 0xf4, 0x3c, 0xf7,
	0xdb, 0x16, 0x9c, 0xe0, 0x6b, 0xc3, 0x6a, 0x33, 0xf2, 0xf6, 0xbc, 0x68, 0x3f, 0x35, 0x42, 0x17,
	0xa0, 0xe6, 0x8a, 0x2f, 0xb2, 0xf0, 0x93, 0xd9, 0x85, 0xcb, 0x02, 0x9c, 0x24, 0xc3, 0x24, 0x4b,
	0x55, 0x83, 0x37, 0xc7, 0xc1, 0x4d, 0xaf, 0x97, 0x56, 0x25, 0x5f, 0x85, 0x69, 0xc2, 0xe0, 0x43,
	0x1c, 0x1b, 0x78, 0x66, 0x47, 0x22, 0x8f, 0xdd, 0x8c, 0x84, 0x2a, 0xeb, 0x77, 0x31, 0x69, 0x7a,
	0x21, 0x1e, 0xa4, 0x0a, 0x16, 0x5f, 0x86, 0x50, 0x45, 0x16, 0xe0, 0x24, 0x19, 0xc6, 0x6e, 0xce,
	0xb7, 0x2c, 0x38, 0x2e, 0x06, 0x89, 0x44, 0x5e, 0xd3, 0x4f, 0xb7, 0xe6, 0x3c, 0x54, 0x5d, 0xfe,
	0x61, 0xc8, 0xf8, 0x8b, 0xec, 0x4e, 0x8c, 0x3e, 0x76, 0x53, 0x7e, 0x23, 0xd6, 0x25, 0xae, 0xfb,
	0x6e, 0x33, 0xdd, 0x90, 0x97, 0xa0, 0xd2, 0xa3, 0x60, 0xd9, 0x8c, 0xe3, 0xd9, 0xcd, 0x60, 0x59,
	0x1d, 0x81, 0x3a, 0x76, 0x13, 0x7e, 0xcf, 0x82, 0x47, 0x78, 0x13, 0xde, 0xc3, 0xbe, 0xbf, 0x83,
	0xbd, 0x6e, 0x3b, 0xd5, 0x8c, 0xb7, 0x01, 0xee, 0xc8, 0x4f, 0xb2, 0x29, 0x8f, 0x66, 0x37, 0x25,
	0x2e, 0xc2, 0x51, 0xb2, 0x1c, 0x80, 0x2a, 0x37, 0xbd, 0x16, 0x0e, 0x06, 0xa9, 0xb2, 0x47, 0xc1,
	0x43, 0xa8, 0xc2, 0xb2, 0x3a, 0x02, 0xf5, 0x00, 0x3c, 0x72, 0x9d, 0x04, 0xad, 0x7e, 0x33, 0x1a,
	0xe4, 0x91, 0x1e, 0xff, 0x30, 0x84, 0x47, 0x44, 0x76, 0x27, 0x46, 0x3f, 0x40, 0x53, 0x36, 0x31,
	0xd9, 0xf3, 0x9a, 0x19, 0xec, 0x1a, 0xf2, 0x0f, 0x43, 0x9a, 0x22, 0xb2, 0x3b, 0x31, 0xfa, 0x01,
	0x06, 0x66, 0x7d, 0x8f, 0xae, 0xa4, 0x03, 0x03, 0x83, 0xf7, 0x14, 0xa9, 0x69, 0x18, 0x18, 0x96,
	0xd5, 0x11, 0xa8, 0x07, 0x90, 0x25, 0x0e, 0x0e, 0xb3, 0xd6, 0xc0, 0x0b, 0x50, 0x23, 0xe2, 0xcb,
	0x10, 0x59, 0x22, 0x0b, 0x70, 0x92, 0x0c, 0x63, 0x37, 0xe7, 0x0e, 0x1c, 0x15, 0xa2, 0xa4, 0xd7,
	0x4b, 0x35, 0xe4, 0x59, 0x28, 0xb9, 0xbd, 0x9e, 0x6c, 0x43, 0x3d, 0xd3, 0xc2, 0xbd, 0xda, 0xeb,
	0x39, 0x0c, 0x6b, 0xec, 0x8a, 0x7f, 0x6c, 0x81, 0x9d, 0xb2, 0x50, 0x35, 0x83, 0x4e, 0x07, 0x77,
	0x5b, 0x2e, 0x5d, 0x5a, 0x65, 0x23, 0x36, 0x61, 0x9e, 0x68, 0x1f, 0xc4, 0x8a, 0x7a, 0x36, 0x7f,
	0x45, 0xd3, 0xcb, 0x4a, 0x15, 0x31, 0x42, 0x5b, 0x75, 0x9b, 0xd1, 0xd7, 0x0b, 0xf0, 0x78, 0x6e,
	0x5b, 0xc5, 0xa2, 0xef, 0x68, 0x8b, 0xfe, 0x5b, 0x86, 0x26, 0x0e, 0x2f, 0x68, 0x72, 0x15, 0xe0,
	0x0b, 0x42, 0x05, 0xb8, 0x1f, 0x64, 0xb3, 0x4f, 0x40, 0xe3, 0x0a, 0x8e, 0x52, 0x06, 0x68, 0x69,
	0x35, 0xb1, 0x7f, 0x69, 0xc1, 0xf1, 0xcc, 0xcf, 0x82, 0x38, 0x9f, 0xd4, 0x88, 0xf3, 0x6a, 0x76,
	0x43, 0x72, 0x0a, 0x98, 0x9c, 0x28, 0x57, 0x05, 0x51, 0x2e, 0x41, 0xad, 0x29, 0x4b, 0x15, 0x5c,
	0xfd, 0x94, 0x81, 0x1e, 0x02, 0x4d, 0xd6, 0xed, 0x24, 0x19, 0xed, 0xd7, 0xe1, 0x68, 0xd2, 0xca,
	0x4b, 0x38, 0x72, 0x3d, 0x5f, 0x32, 0x2b, 0xd5, 0xbb, 0x39, 0x3c, 0x51, 0x61, 0x6b, 0x02, 0xb2,
	0xd1, 0xb2, 0x7f, 0xb3, 0x00, 0xf5, 0xc1, 0xac, 0x82, 0x3c, 0x57, 0x34, 0xf2, 0xbc, 0x34, 0x8c,
	0x3c, 0x7a, 0xee, 0xc9, 0x69, 0x73, 0x47, 0xd0, 0x46, 0x31, 0xcc, 0x16, 0xc6, 0x32, 0xcc, 0x2e,
	0x43, 0x85, 0xb8, 0x91, 0xd7, 0x6d, 0x0b, 0x1d, 0x5c, 0xa4, 0xd0, 0x49, 0x80, 0x9d, 0x20, 0xb8,
	0xdd, 0x71, 0xc9, 0x6d, 0xcc, 0xe7, 0x53, 0xd5, 0x51, 0x20, 0xb6, 0xaf, 0x72, 0xcb, 0xc5, 0xfd,
	0x84, 0xe2, 0x9c, 0x94, 0x8f, 0xc2, 0x8c, 0x24, 0x79, 0x42, 0x4b, 0x90, 0xa0, 0x8d, 0x96, 0xa2,
	0xe4, 0x17, 0xd2, 0x4a, 0xfe, 0xe0, 0x96, 0xc0, 0xfe, 0x85, 0x05, 0x27, 0xb2, 0xab, 0x13, 0xe4,
	0xff, 0x94, 0x46, 0xfe, 0xd7, 0x86, 0x91, 0x7f, 0xb0, 0x84, 0xc9, 0x87, 0x60, 0x43, 0x0c, 0xc1,
	0xea, 0x80, 0xda, 0x3e, 0xc4, 0x3c, 0x21, 0x99, 0x33, 0x51, 0xdf, 0xdf, 0x66, 0xbd, 0xe4, 0x9b,
	0xbb, 0xf0, 0x72, 0x40, 0xc6, 0xa5, 0xaa, 0xfd, 0x87, 0x16, 0x3c, 0x62, 0x28, 0xe1, 0x21, 0x9e,
	0x73, 0x7f, 0x06, 0x1a, 0xa2, 0x45, 0xab, 0xfd, 0x28, 0x68, 0x06, 0x9d, 0x9e, 0x8f, 0x23, 0x3c,
	0x32, 0xab, 0x20, 0x28, 0x75, 0xdd, 0x8e, 0x34, 0x7d, 0xb0, 0xdf, 0xf6, 0x7f, 0x59, 0x70, 0x3c,
	0xb3, 0xcc, 0x71, 0xa4, 0x55, 0x4e, 0x01, 0x93, 0xb3, 0x43, 0x4b, 0xb0, 0x83, 0xc9, 0x9b, 0xb8,
	0x70, 0x4f, 0xbc, 0x89, 0x3f, 0x80, 0xd3, 0x9a, 0x0d, 0x60, 0xa3, 0x7b, 0x9d, 0x6d, 0x02, 0xfa,
	0xbe, 0x3b, 0x36, 0xd7, 0x18, 0xed, 0x16, 0x05, 0xb3, 0xdd, 0xc2, 0xfe, 0x6f, 0x0b, 0x9e, 0x19,
	0xa1, 0x05, 0x62, 0x38, 0x3e, 0xab, 0x0d, 0xc7, 0xa5, 0xbc, 0xe1, 0x18, 0xa1, 0xb8, 0x8f, 0xc4,
	0x5c, 0xfd, 0x47, 0x0b, 0x9e, 0x4c, 0x04, 0x8a, 0xbe, 0xf4, 0x5e, 0xdc, 0xbf, 0x11, 0x62, 0x22,
	0xe9, 0xaf, 0x1c, 0xef, 0x58, 0x86, 0xb3, 0x2f, 0x4d, 0x8f, 0x49, 0x44, 0x63, 0x31, 0x5b, 0x34,
	0x96, 0x54, 0x6b, 0xc9, 0x3d, 0x3e, 0x8f, 0x28, 0xc0, 0x53, 0xc3, 0x7a, 0x25, 0xc6, 0xf4, 0x86,
	0x36, 0xa6, 0xab, 0xc3, 0x44, 0x6e, 0x5e, 0x59, 0x93, 0x0f, 0xe8, 0x4d, 0x31, 0xa0, 0xd7, 0xe0,
	0x90, 0xae, 0xed, 0xc8, 0x71, 0x7d, 0xc2, 0x68, 0x52, 0x50, 0x55, 0xa5, 0x74, 0x66, 0xfb, 0x57,
	0x16, 0x3c, 0x63, 0x6e, 0x7b, 0x7a, 0x86, 0xdd, 0xdf, 0x11, 0x4e, 0xcd, 0xdf, 0xf2, 0xc0, 0xfc,
	0x1d, 0x64, 0x81, 0xca, 0x68, 0x2c, 0x30, 0x9d, 0xc5, 0x02, 0xbf, 0x5d, 0x80, 0x33, 0xa3, 0x74,
	0x5d, 0xb0, 0xc1, 0xe7, 0x34, 0x36, 0x58, 0x1f, 0x97, 0x0d, 0xee, 0xdd, 0xdc, 0xbe, 0x5f, 0xac,
	0xf0, 0x1c, 0x1c, 0xb9, 0x82, 0x23, 0xc7, 0xed, 0xb6, 0x82, 0x8e, 0xe6, 0x02, 0xb7, 0x04, 0xe5,
	0x66, 0xd0, 0x17, 0x47, 0xe1, 0x45, 0x87, 0x27, 0xe8, 0x1e, 0x75, 0x39, 0x8d, 0xff, 0x80, 0xed,
	0xb3, 0x5f, 0x61, 0xba, 0xd9, 0xaa, 0xef, 0x6f, 0xee, 0xba, 0x04, 0xb7, 0xd2, 0x1e, 0x22, 0xf7,
	0x95, 0x5b, 0xed, 0xff, 0xe4, 0xaa, 0x5a, 0x46, 0xed, 0x63, 0xaa, 0x6a, 0xc6, 0x12, 0x26, 0x67,
	0x91, 0x2f, 0x0a, 0x16, 0xd9, 0x82, 0xc5, 0x90, 0x16, 0x2d, 0x4a, 0xa6, 0xa2, 0x68, 0xc8, 0x8e,
	0x62, 0x33, 0x85, 0xee, 0x0c, 0x16, 0x60, 0x3b, 0x70, 0xca, 0xc4, 0xe7, 0x93, 0xd2, 0xde, 0xfe,
	0xb0, 0x00, 0x8f, 0xe5, 0x14, 0x2a, 0x48, 0x7a, 0x5d, 0x23, 0xe9, 0x85, 0xf1, 0xe6, 0xe0, 0x3d,
	0xa0, 0xeb, 0xff, 0x17, 0x74, 0xbd, 0x61, 0x9a, 0x7a, 0x63, 0xed, 0x5b, 0x07, 0x66, 0xe0, 0x4d,
	0x78, 0x22, 0x69, 0xbc, 0x50, 0xda, 0x2e, 0xee, 0x5f, 0x27, 0xf8, 0x16, 0x26, 0xb8, 0x9b, 0xdc,
	0x00, 0x18, 0x97, 0xb8, 0xbf, 0x5f, 0x50, 0x97, 0xf0, 0xcc, 0x82, 0x05, 0x81, 0xb7, 0x34, 0x02,
	0xbf, 0x33, 0x8c, 0xc0, 0x39, 0x45, 0xdd, 0x3f, 0xc5, 0xf2, 0xde, 0x5c, 0x53, 0xfb, 0xae, 0x05,
	0x8f, 0xa7, 0x4e, 0x97, 0x32, 0x19, 0xf9, 0x2d, 0x28, 0x7b, 0x13, 0x55, 0xcb, 0xb3, 0x8d, 0xeb,
	0x10, 0x64, 0xff, 0x87, 0x05, 0x4f, 0xe4, 0xb7, 0x4b, 0x0c, 0xd5, 0xa6, 0x36, 0x54, 0x6f, 0x8f,
	0xa0, 0x6a, 0xde, 0xf3, 0xe9, 0xa0, 0x68, 0x99, 0x44, 0x14, 0x36, 0xa6, 0x96, 0x29, 0xb3, 0xd9,
	0xbf, 0x2c, 0x40, 0x85, 0xdf, 0x47, 0x19, 0x38, 0x75, 0xce, 0xd8, 0x16, 0xa5, 0x8f, 0xbc, 0x8a,
	0x03, 0x47, 0x5e, 0xe8, 0x38, 0xd4, 0xbc, 0x66, 0xd0, 0xdd, 0x0e, 0xfd, 0x7e, 0x5b, 0x98, 0xc9,
	0xaa, 0x14, 0xb0, 0xe9, 0xf7, 0xdb, 0x68, 0x01, 0x8a, 0x7d, 0xe2, 0x0b, 0x0d, 0x83, 0xfe, 0x44,
	0xc7, 0x80, 0x7d, 0xdd, 0xa6, 0x60, 0x71, 0xbc, 0x46, 0xd3, 0x37, 0x88, 0x8f, 0x5e, 0x80, 0xc3,
	0x6e, 0x14, 0x11, 0x6f, 0xa7, 0x2f, 0x0d, 0x7e, 0x1e, 0xc1, 0x2d, 0xa6, 0x53, 0x54, 0x9d, 0xac,
	0x4f, 0xca, 0xd0, 0x56, 0xd5, 0xf5, 0xa5, 0x0e, 0xd3, 0xe2, 0x70, 0xb3, 0x5e, 0x63, 0xf4, 0x95,
	0x49, 0xfa, 0xa5, 0xcf, 0x5c, 0x40, 0x5a, 0x75, 0xe0, 0x5f, 0x44, 0x92, 0x1d, 0x9b, 0xba, 0xed,
	0xb0, 0x3e, 0x23, 0x8e, 0x4d, 0xdd, 0x76, 0x88, 0xde, 0x10, 0x47, 0xa9, 0xb3, 0x6c, 0xe4, 0x9f,
	0xca, 0xe3, 0xc8, 0xcd, 0xf8, 0x04, 0x99, 0x1f, 0xb9, 0xda, 0xff, 0x54, 0x86, 0x69, 0xf1, 0x6d,
	0x80, 0xd0, 0xf1, 0xb9, 0x63, 0xc1, 0x70, 0xee, 0x58, 0xcc, 0x3d, 0x77, 0x2c, 0x0d, 0x0e, 0xc2,
	0x12, 0x94, 0xbd, 0x0e, 0x65, 0x1c, 0x71, 0x92, 0xc9, 0x12, 0x2a, 0x1d, 0x2a, 0x46, 0x3a, 0x4c,
	0xeb, 0x74, 0x30, 0x90, 0xf4, 0x15, 0x48, 0xce, 0x8b, 0x19, 0x51, 0x67, 0xce, 0x1d, 0xd5, 0xe9,
	0xc1, 0x2e, 0x42, 0xb3, 0x95, 0x2c, 0xc1, 0x94, 0xe3, 0x0f, 0xc9, 0xf8, 0x2f, 0x43, 0xc5, 0xed,
	0x47, 0xbb, 0x01, 0x11, 0x6e, 0x04, 0x22, 0x85, 0x4e, 0x40, 0x2d, 0xf2, 0x3a, 0x38, 0x8c, 0xdc,
	0x4e, 0x8f, 0x11, 0xbc, 0xe8, 0x24, 0x00, 0x74, 0x41, 0x8c, 0xce, 0xdc, 0x98, 0xb2, 0x81, 0x8f,
	0xe3, 0xcb, 0x62, 0x1c, 0xe7, 0xb3, 0xee, 0x90, 0xe9, 0xb9, 0x93, 0x11, 0x54, 0xae, 0xf1, 0x1d,
	0x1a, 0xe3, 0x1a, 0xdf, 0x3b, 0x50, 0x95, 0x8a, 0x34, 0xf3, 0x4d, 0x18, 0x50, 0xcb, 0xb2, 0x5b,
	0xeb, 0xc4, 0xb9, 0xd0, 0x69, 0x28, 0x51, 0x89, 0x56, 0x5f, 0x64, 0xb9, 0x97, 0x56, 0xf8, 0x25,
	0xf6, 0x15, 0x79, 0x89, 0x7d, 0x65, 0xb5, 0xbb, 0xef, 0x30, 0x0c, 0xca, 0xb3, 0xbb, 0x6e, 0xb8,
	0x5b, 0x47, 0x7c, 0xc2, 0xd2, 0xdf, 0xec, 0x6e, 0x37, 0x8e, 0x98, 0xfd, 0xed, 0x70, 0x56, 0xb3,
	0x45, 0xf5, 0x9b, 0x1c, 0xc7, 0x91, 0xc8, 0xe8, 0x79, 0xa8, 0x30, 0x05, 0x24, 0xac, 0x2f, 0x31,
	0x1a, 0x1b, 0x47, 0x57, 0xa0, 0xd9, 0xdf, 0x2c, 0xc7, 0xf7, 0x8f, 0x99, 0xd7, 0xd1, 0x88, 0x3e,
	0x2c, 0x0a, 0x4f, 0x16, 0x8d, 0x3c, 0x59, 0xd2, 0x79, 0xf2, 0x9c, 0x18, 0x3f, 0xca, 0xdc, 0xf3,
	0xc6, 0xc3, 0x8f, 0xbe, 0x8f, 0x33, 0x47, 0x6f, 0x7a, 0x8c, 0xd1, 0xbb, 0x0c, 0x90, 0xf8, 0x82,
	0x08, 0x3e, 0x1f, 0x75, 0xde, 0x2b, 0x39, 0xd1, 0xc5, 0xd8, 0x8f, 0x8b, 0x15, 0x34, 0x33, 0x22,
	0xe3, 0xa9, 0x99, 0x90, 0x03, 0xf3, 0x3d, 0xd5, 0x7d, 0x64, 0x9f, 0x79, 0xd2, 0xcc, 0x9c, 0x3b,
	0x93, 0x57, 0x8c, 0xe6, 0x70, 0xb2, 0xef, 0xa4, 0x4a, 0xd0, 0xb8, 0xf3, 0xd0, 0x44, 0xdc, 0x79,
	0x0d, 0xe6, 0x9a, 0x9a, 0x96, 0xb0, 0x38, 0xe6, 0x94, 0xd4, 0xb3, 0xa3, 0x77, 0x00, 0xf0, 0xdd,
	0x1e, 0xc1, 0x61, 0x48, 0x45, 0x1b, 0xca, 0xbb, 0xe5, 0xb9, 0x1e, 0xe3, 0x39, 0x4a, 0x1e, 0xdb,
	0x07, 0x48, 0xbe, 0xa0, 0x37, 0xa0, 0x1a, 0xf4, 0x30, 0x71, 0xa3, 0x80, 0x30, 0x66, 0x34, 0xf2,
	0xcb, 0xbb, 0x02, 0xcb, 0x89, 0xf1, 0xa9, 0xb4, 0xea, 0x78, 0x5d, 0xb1, 0x26, 0xd3, 0x9f, 0x0c,
	0xe2, 0xde, 0x15, 0x9c, 0x4a, 0x7f, 0xda, 0xff, 0x5a, 0x82, 0x0a, 0x77, 0x1f, 0xa0, 0xa2, 0x8c,
	0x85, 0x72, 0x08, 0x59, 0x45, 0x05, 0x47, 0xa4, 0xa8, 0x26, 0xd3, 0xf2, 0x70, 0x34, 0xbe, 0x65,
	0x8e, 0x67, 0x43, 0x97, 0xa1, 0xe6, 0xfa, 0x3e, 0x26, 0x6d, 0x4f, 0xb8, 0x1f, 0x8d, 0x53, 0x46,
	0x92, 0x95, 0x32, 0xa1, 0xd7, 0x6d, 0x13, 0xdc, 0xf2, 0x98, 0x59, 0xaa, 0xc4, 0x4a, 0x32, 0xd0,
	0x76, 0x23, 0x46, 0x74, 0xd4, 0x4c, 0xe8, 0x09, 0x98, 0x8b, 0x82, 0xc8, 0xf5, 0xd7, 0x5c, 0x5f,
	0xfa, 0x2a, 0xd1, 0xae, 0xea, 0x40, 0xba, 0x40, 0x31, 0xc0, 0x7b, 0xd8, 0x6b, 0xef, 0x46, 0x6c,
	0xb1, 0x29, 0x38, 0x2a, 0x08, 0x7d, 0x02, 0x6a, 0xdd, 0x7e, 0x44, 0x3c, 0x61, 0x25, 0xc8, 0x39,
	0x71, 0xbf, 0x26, 0xd1, 0x9c, 0x24, 0x07, 0xad, 0xa0, 0x19, 0x04, 0xb7, 0xbd, 0x6e, 0x7b, 0xcb,
	0xeb, 0x60, 0xb1, 0xaa, 0xab, 0x20, 0xd4, 0x80, 0x6a, 0x8f, 0xe0, 0x1e, 0xfb, 0xcc, 0x97, 0xf6,
	0x38, 0x4d, 0x3b, 0x21, 0x50, 0x3f, 0x8d, 0xa3, 0xdd, 0x40, 0x7a, 0xb0, 0xe9, 0x40, 0x64, 0xc3,
	0xac, 0xd7, 0x0d, 0x23, 0xd2, 0x6f, 0xf2, 0x8d, 0xc6, 0x2c, 0x77, 0xfc, 0x52, 0x61, 0x72, 0x3d,
	0x9b, 0x4b, 0xd6, 0xb3, 0x78, 0xe5, 0x9d, 0x57, 0x57, 0xde, 0x65, 0x6d, 0xed, 0xa8, 0xc5, 0xf2,
	0x25, 0x5e, 0xf9, 0x17, 0xd4, 0x95, 0xbf, 0x41, 0x67, 0x65, 0x9f, 0xd7, 0xba, 0xc8, 0x6a, 0x8d,
	0xd3, 0xf6, 0xbf, 0x58, 0x50, 0x8b, 0x49, 0xc2, 0x76, 0xc8, 0xee, 0x0e, 0xf6, 0xa5, 0x3b, 0x14,
	0x4b, 0xd0, 0x96, 0xbb, 0x3b, 0x3b, 0x04, 0xef, 0x79, 0xfc, 0x68, 0x8f, 0x0b, 0x5c, 0x0d, 0x86,
	0x4e, 0x02, 0xb0, 0xf1, 0xb8, 0xe9, 0xfa, 0x7d, 0xae, 0x5f, 0x16, 0x1c, 0x05, 0x82, 0x9e, 0x86,
	0x43, 0x2d, 0xd7, 0xf3, 0xf7, 0xb7, 0x5d, 0xdf, 0x0f, 0xee, 0xb8, 0xdd, 0x26, 0x66, 0x52, 0xb8,
	0xe0, 0xcc, 0x33, 0xf0, 0xaa, 0x84, 0xd2, 0x45, 0xa7, 0xdf, 0xf5, 0x22, 0xa1, 0x69, 0xb0, 0xdf,
	0x94, 0x2c, 0xa4, 0xe5, 0xb1, 0x71, 0xaf, 0x3a, 0xf4, 0x27, 0x7a, 0x11, 0x8a, 0x61, 0x7f, 0x67,
	0xd4, 0x91, 0xa6, 0xb8, 0xf6, 0x87, 0x16, 0x40, 0xc2, 0x86, 0x4c, 0x21, 0xc3, 0x77, 0x23, 0xd1,
	0x53, 0xf6, 0x9b, 0x12, 0xea, 0xcb, 0x7d, 0xb7, 0x1b, 0x79, 0xd1, 0x3e, 0xeb, 0x64, 0xc1, 0x89,
	0xd3, 0x5c, 0x7b, 0x76, 0xc3, 0x3e, 0x51, 0xb4, 0x67, 0x96, 0xa4, 0x83, 0x71, 0x87, 0x33, 0x26,
	0xef, 0x91, 0x48, 0xd1, 0x1a, 0x6e, 0x05, 0x81, 0xb4, 0x7f, 0xb1, 0xdf, 0xf6, 0x06, 0x4c, 0x0b,
	0x27, 0x98, 0x64, 0x64, 0xb9, 0x0b, 0xa1, 0x18, 0xd9, 0x25, 0x28, 0x33, 0x0f, 0x0c, 0x61, 0xcb,
	0xe6, 0x89, 0xb8, 0xb1, 0xc5, 0xa4, 0xb1, 0xf6, 0x0f, 0x4b, 0x50, 0x95, 0xde, 0x3d, 0x94, 0x81,
	0x3b, 0x8c, 0xcd, 0x02, 0x3f, 0x68, 0xef, 0x8b, 0x4e, 0xa9, 0x20, 0xf4, 0x22, 0x94, 0x7d, 0xbc,
	0x87, 0x7d, 0x71, 0xdc, 0x66, 0xf0, 0x35, 0xb8, 0x4a, 0x51, 0x1c, 0x8e, 0x49, 0x6b, 0x25, 0xb8,
	0x17, 0x0a, 0xf1, 0xc4, 0x7e, 0x53, 0x58, 0x88, 0xd9, 0x6c, 0x67, 0x30, 0xfa, 0x1b, 0x5d, 0x04,
	0x88, 0x88, 0xdb, 0xbc, 0x8d, 0x09, 0x55, 0x0b, 0xca, 0x59, 0x57, 0x51, 0xe5, 0x05, 0x5f, 0x8e,
	0xc6, 0x67, 0x84, 0xa3, 0xe4, 0x4a, 0xa8, 0x51, 0x51, 0xa9, 0xb1, 0x1c, 0xbb, 0xae, 0x70, 0x77,
	0x43, 0xe9, 0x9d, 0x72, 0x02, 0x6a, 0x54, 0x47, 0xef, 0x75, 0x70, 0x37, 0x92, 0xfe, 0x86, 0x31,
	0x00, 0x9d, 0x85, 0x52, 0x14, 0xb4, 0x82, 0x7a, 0x2d, 0x4b, 0xd3, 0x60, 0x91, 0x72, 0xb6, 0x82,
	0x56, 0xe0, 0x30, 0x24, 0xde, 0xc9, 0x30, 0x12, 0x3a, 0x24, 0xfb, 0x4d, 0xf9, 0xa0, 0xd5, 0x27,
	0x9c, 0xd9, 0xf9, 0x5c, 0x8e, 0xd3, 0x83, 0x12, 0x8b, 0x2b, 0x93, 0x29, 0x89, 0xf5, 0x0e, 0x00,
	0xc1, 0xcd, 0x3e, 0x61, 0x5b, 0x69, 0xa1, 0x56, 0x9e, 0x32, 0x9a, 0xf3, 0x04, 0x9e, 0xa3, 0xe4,
	0xd1, 0x96, 0xd2, 0xf9, 0x49, 0x96, 0x52, 0x1b, 0x43, 0x99, 0x0d, 0x27, 0x9d, 0x9b, 0x04, 0x87,
	0x5e, 0x18, 0xb1, 0x69, 0x27, 0x8e, 0x53, 0x12, 0x08, 0xa5, 0xa6, 0x47, 0x0b, 0x09, 0x25, 0xdf,
	0xd7, 0x9c, 0x04, 0x40, 0x73, 0xe3, 0xbb, 0x3d, 0x4c, 0x3c, 0xd6, 0x15, 0xce, 0x81, 0x0a, 0xc4,
	0xfe, 0x7e, 0x01, 0x6a, 0xb1, 0x1b, 0x13, 0x7a, 0x09, 0x2a, 0x91, 0x4b, 0xda, 0x58, 0xde, 0xb7,
	0x39, 0x6e, 0xb8, 0xe8, 0x4d, 0x51, 0x1c, 0x81, 0xaa, 0xd1, 0xbb, 0x90, 0xa2, 0xb7, 0xb6, 0x33,
	0x28, 0x8e, 0xbc, 0x33, 0x48, 0x24, 0x64, 0x49, 0x93, 0x90, 0xfa, 0xc0, 0x94, 0x27, 0x18, 0x18,
	0xc9, 0x5d, 0x95, 0xac, 0xb6, 0xa4, 0xb8, 0xcb, 0xb6, 0x01, 0x92, 0x62, 0x28, 0x93, 0x3b, 0xb1,
	0xe3, 0x7d, 0xcd, 0xe1, 0x09, 0xfb, 0xdf, 0x4b, 0x50, 0x66, 0x2e, 0x69, 0xe8, 0x0a, 0x2c, 0xd0,
	0xca, 0x5d, 0xaf, 0x8b, 0x5b, 0x1b, 0x5d, 0x06, 0xcb, 0x26, 0xa3, 0xee, 0xc9, 0x36, 0x90, 0x29,
	0x76, 0xd2, 0x15, 0x5b, 0x6d, 0xa6, 0xb1, 0xca, 0xed, 0x77, 0x51, 0xd9, 0x7e, 0x9f, 0x85, 0x62,
	0x1b, 0x07, 0x8c, 0x44, 0x33, 0xe7, 0x8e, 0x99, 0xac, 0x44, 0x81, 0x43, 0xb1, 0xa8, 0xea, 0xef,
	0xb6, 0x5a, 0x54, 0x11, 0x12, 0x73, 0x3c, 0x5b, 0xf5, 0x5f, 0xe5, 0x38, 0x8e, 0x44, 0x66, 0x5b,
	0x2f, 0xec, 0xe3, 0xde, 0x6e, 0xd0, 0xc5, 0x62, 0x4f, 0x9e, 0x00, 0x28, 0x7b, 0x79, 0x2d, 0xdc,
	0x8d, 0xbc, 0x5b, 0x1e, 0x26, 0xc2, 0xc0, 0xaf, 0x40, 0xe4, 0x92, 0x58, 0x4d, 0x96, 0x44, 0xbe,
	0x13, 0xa8, 0xa9, 0xdb, 0x5d, 0x2e, 0x3a, 0x40, 0x5d, 0x22, 0xaf, 0xc0, 0x5c, 0xd0, 0xc3, 0x5d,
	0xaf, 0xdb, 0xde, 0xde, 0x0d, 0xfa, 0x24, 0x14, 0x4a, 0xb2, 0x6d, 0xd4, 0xd6, 0x28, 0xea, 0xff,
	0xa3, 0x98, 0xce, 0x6c, 0xa0, 0xa4, 0x98, 0x53, 0xe1, 0x6e, 0x10, 0x05, 0x7c, 0xc5, 0x36, 0x0f,
	0x05, 0xc5, 0x71, 0x04, 0x2a, 0x3a, 0x06, 0x55, 0xe6, 0x5e, 0x48, 0xf7, 0x27, 0x7c, 0x35, 0x9f,
	0x66, 0xe9, 0x8d, 0x16, 0x7a, 0x19, 0xa6, 0x5d, 0x3f, 0xda, 0xf6, 0x5a, 0x61, 0x7d, 0x3e, 0xaf,
	0xc0, 0x55, 0x3f, 0xda, 0x68, 0x39, 0x15, 0x97, 0xfe, 0x0b, 0xd9, 0xca, 0xce, 0xfc, 0xc5, 0x0f,
	0x71, 0xf9, 0xc8, 0x12, 0x94, 0xb4, 0xb1, 0xc1, 0x4e, 0xac, 0xf9, 0x09, 0x80, 0x4e, 0xab, 0x3d,
	0xaf, 0xe9, 0x75, 0xe9, 0xb4, 0x5e, 0xe4, 0xd3, 0x4a, 0xa6, 0xed, 0xb7, 0xa1, 0x78, 0x05, 0x07,
	0x14, 0xc5, 0x77, 0x23, 0x2f, 0xea, 0x0b, 0x07, 0x7e, 0xcb, 0x89, 0xd3, 0xb4, 0x70, 0x3f, 0xe8,
	0xb6, 0xf9, 0xc7, 0x02, 0xfb, 0x98, 0x00, 0xec, 0x67, 0x60, 0x56, 0x25, 0x1a, 0xed, 0x31, 0x25,
	0xdb, 0x76, 0x37, 0xb8, 0xc3, 0x4a, 0xaa, 0x3a, 0xd3, 0x34, 0x7d, 0x2d, 0xb8, 0x63, 0xff, 0x96,
	0x05, 0x65, 0x46, 0x1e, 0x3a, 0x2b, 0x77, 0xf9, 0x52, 0x49, 0x51, 0x4a, 0x8e, 0x48, 0xa1, 0xb3,
	0xb0, 0xb8, 0x1b, 0x75, 0xfc, 0x6d, 0xc5, 0x08, 0x23, 0x4f, 0x73, 0x17, 0xe8, 0x87, 0x55, 0x05,
	0x4e, 0x55, 0x09, 0x46, 0xe5, 0xed, 0xa4, 0xeb, 0x9c, 0xa7, 0xe7, 0x19, 0xd8, 0x89, 0xfb, 0xbf,
	0x04, 0xe5, 0x3b, 0x5e, 0x2b, 0xda, 0x65, 0xfc, 0x5d, 0x72, 0x78, 0xc2, 0x7e, 0x1d, 0xca, 0x8c,
	0xb4, 0xda, 0x18, 0x59, 0xfa, 0x18, 0x2d, 0x41, 0x39, 0x6c, 0x06, 0xf1, 0x04, 0xe2, 0x09, 0xfb,
	0x9f, 0x2b, 0x50, 0x95, 0x5e, 0xc6, 0x82, 0x0b, 0x4f, 0xc7, 0x5c, 0x98, 0x08, 0x9c, 0x67, 0x34,
	0x81, 0xf3, 0x22, 0x94, 0x9b, 0xbe, 0x1b, 0x86, 0xf9, 0x13, 0x79, 0x8d, 0xa2, 0x38, 0x1c, 0x13,
	0xbd, 0x06, 0x55, 0x3f, 0x68, 0x26, 0xe2, 0x70, 0xc8, 0xf4, 0x8f, 0x91, 0xa9, 0x16, 0x1c, 0x90,
	0xb6, 0xdb, 0xf5, 0xde, 0xc7, 0x44, 0xc8, 0x4a, 0x83, 0x6e, 0xf4, 0xae, 0x44, 0x73, 0x92, 0x1c,
	0x68, 0x05, 0x4a, 0x3d, 0x97, 0xdc, 0x16, 0xe2, 0xa0, 0x61, 0xa8, 0xd3, 0x25, 0xb7, 0x1d, 0x86,
	0x47, 0xf7, 0x42, 0x61, 0x7f, 0x87, 0xb9, 0x27, 0x0a, 0x49, 0x6a, 0xd8, 0x0b, 0x6d, 0x0a, 0x2c,
	0x27, 0xc6, 0x47, 0x97, 0x61, 0x96, 0x2e, 0xb5, 0xc4, 0x13, 0xda, 0x70, 0x25, 0x6f, 0x76, 0x3a,
	0x0a, 0xa6, 0xa3, 0xe5, 0xa3, 0x4c, 0x1a, 0x46, 0x2e, 0x89, 0x2e, 0xb9, 0x91, 0x14, 0x00, 0x09,
	0x80, 0x2a, 0x6d, 0xb8, 0xdb, 0x62, 0xdf, 0xf8, 0x3a, 0x2e, 0x93, 0xda, 0x92, 0x33, 0x9b, 0x5a,
	0x72, 0x74, 0x91, 0x34, 0x37, 0x20, 0x92, 0x9e, 0x85, 0x45, 0xc5, 0x38, 0x76, 0x39, 0x20, 0x1d,
	0x37, 0xaa, 0x1f, 0x61, 0x68, 0x83, 0x1f, 0xa8, 0xf6, 0xdc, 0xc1, 0x38, 0xf2, 0xba, 0xed, 0xeb,
	0x81, 0xd7, 0x8d, 0x84, 0x35, 0x45, 0x83, 0x31, 0x7d, 0x86, 0x92, 0xe5, 0x6a, 0xd0, 0x0e, 0xea,
	0xc7, 0x79, 0x2f, 0x62, 0x40, 0xa2, 0x13, 0x9e, 0xe0, 0xdc, 0xc8, 0x75, 0xc2, 0x93, 0x00, 0x21,
	0xdf, 0x94, 0xde, 0x20, 0x7e, 0xfd, 0x11, 0xde, 0xca, 0x04, 0x22, 0xef, 0x7a, 0xb1, 0x79, 0x13,
	0x90, 0xfa, 0xa3, 0xc3, 0xee, 0x7a, 0x09, 0x44, 0x47, 0xcd, 0x85, 0xde, 0x82, 0xaa, 0xf4, 0xa6,
	0xaf, 0x3f, 0xc1, 0x86, 0xd8, 0xce, 0xf7, 0xbe, 0xa7, 0x33, 0xd5, 0x89, 0xf3, 0x50, 0xee, 0x0f,
	0x6e, 0xdd, 0xc2, 0xa4, 0xfe, 0x64, 0x9e, 0xa8, 0x7b, 0x97, 0xa2, 0x38, 0x1c, 0xd3, 0xfe, 0xa9,
	0x05, 0xb3, 0xea, 0x80, 0x53, 0x72, 0xb7, 0x71, 0xb7, 0xc5, 0x4e, 0xdf, 0x25, 0x54, 0xac, 0x23,
	0x83, 0x1f, 0xd8, 0x16, 0x86, 0xe9, 0xb9, 0xd3, 0x62, 0x0b, 0xc3, 0x54, 0xa0, 0x06, 0x54, 0xdd,
	0x36, 0x76, 0xdc, 0x6e, 0x1b, 0x8b, 0xa5, 0x24, 0x4e, 0xb3, 0x01, 0x72, 0xef, 0xae, 0x46, 0x11,
	0x2d, 0x0b, 0x87, 0x62, 0xa7, 0xa5, 0xc1, 0x68, 0x7e, 0x7c, 0x17, 0x13, 0x56, 0xf5, 0x61, 0x9e,
	0x5f, 0xa6, 0xed, 0x1f, 0x58, 0x50, 0x8b, 0xe7, 0x53, 0x96, 0xd5, 0x7b, 0xa4, 0xa5, 0x58, 0xac,
	0x73, 0x25, 0x6d, 0xeb, 0x87, 0x3b, 0xae, 0x27, 0xcd, 0xdb, 0x3c, 0x31, 0x64, 0x35, 0x45, 0x50,
	0xf2, 0x29, 0x0f, 0xf1, 0xce, 0xb3, 0xdf, 0xf6, 0x5f, 0x58, 0x50, 0x66, 0xf2, 0x05, 0x9d, 0x87,
	0x0a, 0x5d, 0xa4, 0xfb, 0xe1, 0x90, 0x9b, 0x7f, 0x14, 0x79, 0x93, 0x21, 0x3a, 0x22, 0x03, 0x2d,
	0xb8, 0x45, 0xa7, 0x91, 0x38, 0x50, 0xa0, 0xbf, 0xd1, 0x4b, 0xa2, 0x6b, 0xb9, 0x92, 0x86, 0x15,
	0xa6, 0x18, 0xce, 0xa8, 0x3c, 0x0c, 0xdc, 0xe6, 0xae, 0x90, 0x32, 0x26, 0x79, 0x48, 0x51, 0x1c,
	0x8e, 0x69, 0xcf, 0xc1, 0x8c, 0xd2, 0x24, 0x7b, 0x06, 0x6a, 0x71, 0xa1, 0xf6, 0xf7, 0x68, 0xe7,
	0x28, 0x16, 0x25, 0xcc, 0x2d, 0x8f, 0x84, 0xd1, 0x35, 0x4a, 0x59, 0xe1, 0x0b, 0x19, 0x03, 0xf8,
	0x42, 0x27, 0x3e, 0x0a, 0x15, 0x53, 0xa6, 0x13, 0x05, 0xa2, 0xa8, 0x2a, 0x10, 0x94, 0xd0, 0xbb,
	0xfd, 0xce, 0x4e, 0x97, 0x0e, 0x41, 0x49, 0x10, 0x5a, 0x02, 0xd0, 0x63, 0x30, 0x1b, 0x7e, 0xb9,
	0xef, 0x12, 0xbc, 0xad, 0x1a, 0xc6, 0x67, 0x38, 0x6c, 0x83, 0x82, 0xec, 0xbb, 0x30, 0xab, 0xce,
	0x8a, 0x98, 0x13, 0x2c, 0x85, 0x13, 0x1a, 0x50, 0xed, 0x06, 0x51, 0x22, 0xea, 0xcb, 0x4e, 0x9c,
	0xa6, 0x0d, 0xe8, 0x11, 0x7c, 0xeb, 0x2a, 0xdb, 0x90, 0xf3, 0xa6, 0x25, 0x00, 0x9a, 0xd3, 0xeb,
	0x6e, 0x36, 0x77, 0x71, 0x07, 0xc7, 0xc7, 0x22, 0x22, 0x6d, 0x7f, 0x0d, 0xca, 0x6c, 0x4a, 0x49,
	0xa6, 0xb2, 0x12, 0xa6, 0x1a, 0x95, 0x1d, 0x9f, 0x80, 0xb9, 0x1e, 0xf1, 0x9a, 0x78, 0x8d, 0xeb,
	0xae, 0xfb, 0xa2, 0x0e, 0x1d, 0x48, 0x29, 0xc7, 0x00, 0x92, 0x45, 0x59, 0xc2, 0x7e, 0x85, 0x5b,
	0x6e, 0xa5, 0x0c, 0xc9, 0xea, 0x77, 0x96, 0x8b, 0xdc, 0x3f, 0x58, 0x50, 0xa2, 0xab, 0x4b, 0x62,
	0xc5, 0xb0, 0x54, 0x2b, 0x06, 0x9f, 0x58, 0x85, 0x78, 0x62, 0x0d, 0x3f, 0x3a, 0xca, 0x94, 0xd3,
	0x25, 0x93, 0x9c, 0x6e, 0x40, 0x95, 0xae, 0x6a, 0x4c, 0x04, 0xf3, 0xee, 0xc4, 0x69, 0x55, 0xf5,
	0xad, 0x8c, 0xa1, 0xfa, 0xda, 0xdf, 0x28, 0xc2, 0xf4, 0xc5, 0x80, 0x04, 0xfd, 0xf6, 0xee, 0x88,
	0xbd, 0xe2, 0x7b, 0x31, 0x12, 0x6c, 0x25, 0xdb, 0xfd, 0x04, 0x80, 0x4e, 0xc3, 0xa1, 0x38, 0xa1,
	0xf5, 0x27, 0x0d, 0xa6, 0xd4, 0xd9, 0xe1, 0x15, 0x2b, 0x1d, 0x52, 0x41, 0xe8, 0x0c, 0x2c, 0x88,
	0x24, 0xbb, 0xf9, 0xb1, 0xe9, 0xf7, 0xdb, 0x42, 0x9e, 0x0c, 0xc0, 0x29, 0x25, 0x55, 0xd8, 0x16,
	0xeb, 0x07, 0x97, 0x31, 0x83, 0x1f, 0xa8, 0x40, 0x55, 0x81, 0x42, 0xe0, 0x6a, 0x30, 0xf4, 0x32,
	0x1c, 0x11, 0xe9, 0xad, 0x3b, 0x5e, 0x14, 0x61, 0xb2, 0xda, 0xe4, 0xbe, 0x29, 0x5c, 0xaf, 0xcf,
	0xfe, 0xa8, 0x8e, 0x03, 0x8c, 0x33, 0x0e, 0x04, 0xaa, 0x52, 0x07, 0xc9, 0x64, 0x47, 0x4d, 0x8b,
	0x28, 0xe4, 0x68, 0x11, 0x45, 0xb3, 0x16, 0x51, 0xd2, 0xb5, 0x08, 0xfb, 0x6f, 0x2d, 0x38, 0xac,
	0x7a, 0x61, 0x28, 0xd7, 0x4f, 0x26, 0xbc, 0x2d, 0x87, 0x9e, 0x83, 0x72, 0x9f, 0xb9, 0x7e, 0x14,
	0xf2, 0xcf, 0x50, 0x38, 0x96, 0x7a, 0x64, 0x5d, 0x34, 0x1c, 0x59, 0x97, 0x0c, 0xf7, 0x11, 0xca,
	0xe9, 0x48, 0x83, 0x7a, 0x4f, 0x26, 0xba, 0xfa, 0xfb, 0x67, 0x05, 0x58, 0x48, 0xbb, 0xa5, 0x0c,
	0x2c, 0x97, 0x13, 0xfb, 0x85, 0x9f, 0x85, 0x12, 0xed, 0xdd, 0x30, 0x13, 0x01, 0x43, 0x42, 0xaf,
	0xc7, 0x0b, 0x61, 0x89, 0xd9, 0xf0, 0xb3, 0x8f, 0x4e, 0x58, 0x63, 0x53, 0xeb, 0xa0, 0x72, 0x8a,
	0x54, 0xd6, 0x4f, 0x91, 0x5e, 0x86, 0x1a, 0x3b, 0xba, 0x62, 0x77, 0x60, 0x2b, 0xf9, 0xad, 0xa8,
	0x72, 0xcc, 0x8b, 0xfb, 0xea, 0x79, 0xd5, 0xb4, 0x76, 0x5e, 0x65, 0xb7, 0x60, 0x61, 0xc0, 0x77,
	0x6d, 0x12, 0xd7, 0x63, 0xfd, 0x04, 0xbd, 0xa8, 0x9f, 0xa0, 0xdb, 0x3f, 0x2c, 0x24, 0x11, 0x75,
	0x65, 0x2d, 0xf9, 0xd7, 0x0a, 0x92, 0xe5, 0xb2, 0xa0, 0x2e, 0x97, 0xb1, 0x78, 0x2b, 0xaa, 0xe2,
	0x2d, 0x39, 0x8e, 0x2d, 0x69, 0xc7, 0xb1, 0xc9, 0xf1, 0x59, 0x79, 0x8c, 0xe3, 0xb3, 0x54, 0xf7,
	0x2b, 0x03, 0xdd, 0x7f, 0x16, 0x50, 0x82, 0x10, 0xf7, 0x99, 0x0b, 0xaa, 0x85, 0x18, 0x4f, 0x7a,
	0x0f, 0x3c, 0x9e, 0x9c, 0x35, 0x6d, 0x33, 0xaa, 0x09, 0x41, 0x25, 0x81, 0x54, 0x39, 0xb0, 0x3f,
	0x2c, 0xc0, 0x91, 0x4c, 0xbf, 0x8b, 0x31, 0x6e, 0xd5, 0x67, 0xcf, 0x42, 0x85, 0xd5, 0x4b, 0x63,
	0xb1, 0xba, 0xc2, 0x33, 0x65, 0xe3, 0x19, 0x67, 0x45, 0xe7, 0x4e, 0x79, 0xc2, 0x5d, 0x9d, 0xe4,
	0x84, 0xdb, 0xfe, 0x59, 0x11, 0xe6, 0x53, 0xbd, 0x1f, 0xc2, 0x24, 0x94, 0xb6, 0xf2, 0xb3, 0xc2,
	0x2c, 0xf2, 0x9e, 0x3b, 0xd3, 0x90, 0x54, 0x24, 0x95, 0x77, 0xe2, 0xcb, 0xf0, 0x8c, 0x85, 0x9e,
	0x84, 0x79, 0x89, 0xa4, 0xb1, 0x92, 0xcc, 0xba, 0xca, 0x39, 0x6a, 0x2d, 0x41, 0x1b, 0x83, 0xb3,
	0x64, 0x21, 0x9b, 0x0f, 0x8d, 0xc1, 0x54, 0xfe, 0xa8, 0x69, 0xfc, 0x21, 0x87, 0x0c, 0x26, 0x1a,
	0xb2, 0x6f, 0x57, 0x60, 0x5a, 0xdc, 0xa5, 0xbc, 0x9f, 0x67, 0xe7, 0x52, 0xe0, 0x94, 0xcd, 0x4e,
	0x3d, 0x95, 0x41, 0xcd, 0xec, 0x14, 0xa8, 0x9a, 0xb2, 0xbc, 0xe9, 0xae, 0x80, 0xd0, 0x53, 0x30,
	0x1f, 0x2b, 0xdb, 0x1c, 0x89, 0xd3, 0x2e, 0x05, 0xa5, 0xbb, 0x60, 0xdf, 0x25, 0x6d, 0x51, 0x10,
	0x27, 0xa0, 0x02, 0xc9, 0xf6, 0x10, 0x11, 0x17, 0x88, 0x66, 0xb4, 0x0b, 0x44, 0x74, 0x8b, 0xd8,
	0x6f, 0x71, 0x2b, 0xb7, 0xb0, 0x08, 0xc8, 0x34, 0x15, 0x6e, 0xee, 0x1d, 0x97, 0x48, 0x5b, 0x1e,
	0x4f, 0x50, 0xe8, 0x0e, 0x71, 0xbb, 0x2d, 0x79, 0x36, 0xc7, 0x12, 0xfc, 0xb4, 0x4d, 0x39, 0x03,
	0xaf, 0x29, 0xa7, 0xdb, 0x08, 0x4a, 0xed, 0xc8, 0x93, 0x51, 0x25, 0xd8, 0x6f, 0xbe, 0xfd, 0xec,
	0xf6, 0x6f, 0xb9, 0xcd, 0xa8, 0x4f, 0x30, 0x11, 0x96, 0x3a, 0x0d, 0x46, 0xcb, 0xec, 0xb8, 0x11,
	0x26, 0x9e, 0xeb, 0x0b, 0xfb, 0x41, 0x9c, 0xa6, 0xad, 0xe8, 0x04, 0x2d, 0xec, 0x8b, 0x7d, 0x29,
	0x4f, 0x08, 0x1f, 0x58, 0xaa, 0x2b, 0x2c, 0xc5, 0x3e, 0xb0, 0x54, 0x27, 0x78, 0x0a, 0xe6, 0xc5,
	0xc5, 0x5a, 0x2f, 0xe8, 0x32, 0x95, 0xe6, 0x08, 0xfb, 0x9e, 0x82, 0xd2, 0x56, 0xf5, 0xfa, 0xa4,
	0xb9, 0xeb, 0x86, 0x98, 0x61, 0x2d, 0x33, 0x2c, 0x0d, 0x46, 0x47, 0x91, 0x60, 0x1f, 0x4b, 0x94,
	0xa3, 0xfc, 0xd4, 0x54, 0x01, 0x31, 0x5a, 0xe3, 0x3d, 0x0f, 0xdf, 0xa9, 0xd7, 0x39, 0x6b, 0xf3,
	0x94, 0x72, 0x64, 0x76, 0x8c, 0xb7, 0x4e, 0x1c, 0x99, 0x2d, 0x41, 0xb9, 0x85, 0x7b, 0xd1, 0x6e,
	0xbd, 0xc1, 0x3d, 0x74, 0x59, 0x42, 0xb1, 0x1a, 0x1e, 0xe7, 0xd8, 0xbb, 0x31, 0x36, 0xb7, 0xef,
	0x9d, 0xe0, 0xd8, 0x2c, 0xc1, 0xbd, 0x9c, 0xfd, 0x80, 0x08, 0x93, 0x08, 0x4f, 0xd8, 0x7f, 0x5e,
	0x81, 0x69, 0x71, 0x9f, 0xf7, 0xff, 0xa6, 0xc3, 0x47, 0x65, 0x3a, 0xa4, 0x59, 0x7f, 0x61, 0x08,
	0xeb, 0x2f, 0x9a, 0x58, 0x1f, 0x65, 0xb3, 0xfe, 0x61, 0x8d, 0xf5, 0x13, 0x66, 0x5c, 0xd2, 0x98,
	0xf1, 0x24, 0x80, 0x4b, 0xb0, 0x4b, 0xb9, 0x03, 0xb7, 0x84, 0x1d, 0x4f, 0x81, 0xd0, 0x8d, 0x92,
	0xbb, 0xe7, 0x7a, 0xbe, 0xbb, 0xe3, 0xe3, 0xb5, 0x5d, 0xb7, 0xdb, 0xc5, 0x3e, 0xe3, 0xf5, 0x9a,
	0x33, 0x00, 0xa7, 0xb8, 0xd1, 0xae, 0x47, 0x5a, 0xd7, 0x5d, 0x12, 0xed, 0x5f, 0x24, 0xc1, 0x6d,
	0x4c, 0x04, 0xeb, 0x0f, 0xc0, 0xe9, 0x66, 0x6e, 0xd7, 0x0d, 0xd9, 0x46, 0x7d, 0xcd, 0x8d, 0x5c,
	0x3f, 0x68, 0xb3, 0xd9, 0x50, 0x73, 0xd2, 0x60, 0x3a, 0xfa, 0xec, 0x0c, 0x63, 0x55, 0x56, 0xc7,
	0xe6, 0x47, 0xcd, 0x49, 0x41, 0x69, 0x89, 0xe2, 0xaa, 0xfa, 0x75, 0x12, 0xec, 0x79, 0x2d, 0x4c,
	0x84, 0x31, 0x31, 0x0d, 0xa6, 0xdb, 0x7b, 0x01, 0x7a, 0xb7, 0x1f, 0xf5, 0xfa, 0x91, 0x30, 0x2d,
	0xea, 0x40, 0xfb, 0x57, 0x65, 0x28, 0xf3, 0x4d, 0xd3, 0xff, 0xe2, 0x29, 0x33, 0x60, 0x61, 0x2e,
	0xe6, 0x58, 0x98, 0x8b, 0xa3, 0x59, 0x98, 0x1b, 0x8a, 0x85, 0x7f, 0x4e, 0x58, 0xa3, 0xa4, 0x11,
	0xff, 0x84, 0x6a, 0xc4, 0xe7, 0x53, 0x49, 0xb1, 0xd1, 0x9f, 0x04, 0x08, 0xfb, 0x3d, 0x4c, 0xb8,
	0xd5, 0xfd, 0x90, 0xb0, 0xfa, 0xc6, 0x10, 0x5a, 0x72, 0x6c, 0x93, 0xe7, 0xd3, 0x29, 0xb1, 0xb9,
	0x37, 0x14, 0x63, 0xae, 0x98, 0x4a, 0xb1, 0xa1, 0x76, 0x19, 0x2a, 0xb7, 0xb8, 0x41, 0x81, 0xcf,
	0x25, 0x91, 0x62, 0xe5, 0x35, 0x77, 0x71, 0xab, 0xef, 0x63, 0x69, 0xf8, 0x94, 0x69, 0x29, 0x4c,
	0x96, 0x34, 0x61, 0xd2, 0xc3, 0x24, 0x0c, 0xba, 0x62, 0x1a, 0x89, 0x94, 0x22, 0x64, 0x96, 0x35,
	0x21, 0xb3, 0x1c, 0xef, 0xc3, 0xf8, 0xe2, 0x21, 0x77, 0x59, 0xcc, 0x5a, 0xd7, 0x6d, 0xf7, 0xe9,
	0x88, 0xd4, 0xa5, 0xb5, 0x8e, 0xa7, 0xb9, 0x40, 0xe9, 0xb9, 0x4d, 0xda, 0x0b, 0xbe, 0x7a, 0xc4,
	0x69, 0x2a, 0x10, 0xb8, 0xb9, 0x59, 0xac, 0x1f, 0x2c, 0xa1, 0x4c, 0xfc, 0xe3, 0xda, 0xc4, 0x57,
	0x8d, 0xc2, 0x7c, 0x09, 0x89, 0xd3, 0xf6, 0xcf, 0x4a, 0x50, 0xe6, 0x96, 0x8a, 0xfb, 0xc8, 0xfa,
	0x75, 0x98, 0xde, 0xf1, 0x22, 0x42, 0x99, 0x47, 0x28, 0xf2, 0x22, 0xc9, 0x1d, 0x92, 0xb8, 0x66,
	0xea, 0xbd, 0x8f, 0x85, 0x32, 0xaf, 0x82, 0x28, 0x23, 0x88, 0xe4, 0x0d, 0x22, 0x8d, 0xdd, 0x0a,
	0x44, 0x63, 0xbf, 0xea, 0x20, 0xfb, 0xe1, 0xce, 0x0e, 0x6e, 0xd1, 0x9c, 0x35, 0x61, 0xcd, 0x16,
	0x69, 0x3a, 0x6d, 0x70, 0xb7, 0x19, 0xb4, 0xbc, 0x6e, 0x5b, 0x58, 0x98, 0xf8, 0x62, 0x91, 0x82,
	0x32, 0xc6, 0xbf, 0xdb, 0xf3, 0x08, 0x0e, 0x63, 0xc6, 0xe7, 0x49, 0x65, 0xb9, 0x9e, 0xd5, 0x96,
	0xeb, 0x93, 0x00, 0x3d, 0xdf, 0xdd, 0xc7, 0x84, 0xf9, 0x2c, 0xf2, 0xb0, 0x5d, 0x0a, 0x04, 0x3d,
	0x0b, 0x8b, 0x89, 0x12, 0xb2, 0x16, 0x74, 0x7a, 0x6e, 0x77, 0x5f, 0x84, 0xf1, 0x1a, 0xfc, 0x40,
	0xdb, 0x49, 0x70, 0xdb, 0x0b, 0xba, 0x21, 0xf3, 0x1d, 0xc2, 0x2d, 0x36, 0x19, 0x8a, 0x4e, 0x0a,
	0x8a, 0xce, 0xc1, 0x12, 0xe1, 0xfe, 0xdc, 0xe1, 0x66, 0x7f, 0x27, 0x91, 0x29, 0x7c, 0x72, 0x64,
	0x7e, 0xa3, 0x2d, 0xed, 0xf7, 0xfc, 0xc0, 0xe5, 0xf3, 0x7a, 0x91, 0xb7, 0x34, 0x81, 0x24, 0x8a,
	0x07, 0x52, 0x14, 0x0f, 0xfb, 0x27, 0x25, 0xa8, 0xca, 0x10, 0x19, 0xf7, 0x93, 0x6b, 0x4e, 0xc1,
	0x8c, 0x88, 0x9f, 0x73, 0x31, 0x68, 0xed, 0x4b, 0xd3, 0x9e, 0x02, 0xa2, 0xb4, 0x11, 0xc9, 0x4d,
	0xed, 0xee, 0x64, 0x0a, 0x4a, 0xeb, 0xe8, 0xb9, 0x6d, 0xbc, 0xde, 0x8d, 0x8d, 0x0f, 0x22, 0xc9,
	0x6c, 0xcf, 0x6e, 0x1b, 0x6f, 0x52, 0x39, 0xc7, 0xd8, 0xa7, 0xe8, 0x24, 0x00, 0xfa, 0xf5, 0x4e,
	0x40, 0x5a, 0x6b, 0xb1, 0xc1, 0xae, 0xe8, 0x24, 0x00, 0xca, 0x5d, 0xb7, 0xf1, 0x3e, 0x4d, 0x87,
	0x82, 0x77, 0xe2, 0xb4, 0xa6, 0x0d, 0xcc, 0xa4, 0xb4, 0x81, 0xe4, 0x04, 0x75, 0x56, 0x3b, 0x41,
	0x45, 0xb1, 0x73, 0xb6, 0x15, 0xbb, 0xce, 0x23, 0x28, 0x85, 0xee, 0x2d, 0xe9, 0x15, 0xc7, 0x7e,
	0x33, 0x0b, 0x44, 0xd0, 0xf3, 0x9a, 0x42, 0x2a, 0xf2, 0x84, 0xea, 0xf6, 0xbe, 0xa0, 0xbb, 0xbd,
	0x53, 0x41, 0xbb, 0xf3, 0x25, 0x4a, 0x8a, 0x3d, 0x2c, 0xe4, 0x61, 0x02, 0xa0, 0x5f, 0x9b, 0x01,
	0xdf, 0x5b, 0x86, 0x42, 0x26, 0x26, 0x00, 0x31, 0xfb, 0x9a, 0x7e, 0x3f, 0x4c, 0x4e, 0x84, 0x14,
	0x08, 0xd5, 0x6c, 0x44, 0x35, 0x9b, 0x1d, 0xd7, 0x97, 0x32, 0x52, 0x83, 0xd9, 0x3f, 0x2a, 0xc0,
	0x9c, 0x76, 0x61, 0x6c, 0x80, 0x69, 0xf4, 0x3d, 0x76, 0xc1, 0x68, 0x88, 0x29, 0x66, 0x1a, 0x62,
	0x4a, 0x06, 0xef, 0xff, 0xb2, 0x4e, 0x06, 0x75, 0x48, 0x2a, 0xa9, 0x21, 0x49, 0xed, 0x87, 0xa7,
	0x07, 0xf6, 0xc3, 0x9a, 0xd1, 0x6b, 0x66, 0x54, 0xa3, 0x97, 0x74, 0x41, 0x9f, 0x1d, 0xe6, 0x82,
	0x6e, 0xbf, 0x0e, 0x8b, 0x57, 0x70, 0xb4, 0x15, 0xf4, 0xb6, 0xdc, 0xf6, 0xb0, 0x78, 0xa9, 0xb3,
	0x60, 0x49, 0xe7, 0x5a, 0xab, 0x6b, 0xff, 0xc8, 0x02, 0xa4, 0x66, 0x1d, 0x27, 0x58, 0xf7, 0x60,
	0xbe, 0xc9, 0xef, 0xd6, 0x34, 0xc4, 0xdd, 0x1a, 0xc9, 0xc5, 0x56, 0x72, 0x01, 0xc4, 0xbe, 0x04,
	0x47, 0xd5, 0xbb, 0xfc, 0x23, 0xf4, 0x31, 0xeb, 0xdc, 0xe4, 0x27, 0x16, 0xd4, 0x07, 0x8b, 0x19,
	0x27, 0xcc, 0x87, 0x29, 0xf7, 0xfd, 0xe9, 0xf5, 0x71, 0x38, 0xf6, 0x9e, 0x4b, 0x3a, 0xfd, 0xde,
	0x9a, 0xdb, 0xdc, 0x4d, 0x59, 0xc7, 0xed, 0x13, 0xd0, 0xc8, 0xfa, 0x28, 0x6e, 0x17, 0x7d, 0x0e,
	0x9e, 0x52, 0xdb, 0x9a, 0x13, 0xff, 0x5c, 0x12, 0xca, 0xd2, 0x0d, 0xa1, 0xf4, 0x3f, 0xb7, 0xd9,
	0x88, 0x43, 0x40, 0x0a, 0x60, 0x86, 0xd0, 0x6f, 0x16, 0xe0, 0xe9, 0xa1, 0x65, 0x0b, 0xa2, 0xde,
	0xd4, 0x88, 0x7a, 0x71, 0x38, 0x51, 0x73, 0x0a, 0x9b, 0x9c, 0xc6, 0x37, 0x04, 0x8d, 0x3f, 0x3d,
	0x70, 0x6b, 0xeb, 0xc5, 0x91, 0xa3, 0x64, 0x64, 0xdc, 0xe0, 0xba, 0x0c, 0x4f, 0x67, 0xbf, 0x3d,
	0x71, 0x91, 0xd9, 0xab, 0x28, 0xf1, 0x24, 0x91, 0x73, 0x09, 0xfa, 0xad, 0x02, 0x9c, 0x1e, 0x5e,
	0x90, 0xa0, 0xe8, 0x7b, 0x1a, 0x45, 0xd7, 0x4c, 0x1e, 0x51, 0xa3, 0x95, 0xf6, 0x91, 0x23, 0xe9,
	0xcf, 0x2d, 0x38, 0x9e, 0xc7, 0x4f, 0x43, 0xcd, 0xfa, 0x67, 0x61, 0x51, 0x33, 0x24, 0x2a, 0x04,
	0x5f, 0x50, 0x8d, 0x89, 0x14, 0x8e, 0x9e, 0x86, 0x43, 0x12, 0x46, 0x65, 0x68, 0x62, 0x78, 0x9e,
	0x57, 0xc1, 0x7a, 0xa9, 0x0c, 0x91, 0x4d, 0x98, 0x92, 0x5e, 0x2a, 0xfd, 0x40, 0x4b, 0x3e, 0xf3,
	0x1a, 0x54, 0xe5, 0x15, 0x18, 0xb4, 0x08, 0x73, 0xf2, 0xf7, 0xf6, 0xb5, 0x77, 0xaf, 0xad, 0x2f,
	0x4c, 0xa1, 0x19, 0x98, 0xde, 0xb8, 0xb6, 0x76, 0xf5, 0xc6, 0xa5, 0xf5, 0x05, 0x8b, 0x26, 0xd6,
	0x3f, 0xcb, 0x13, 0x85, 0x33, 0x9f, 0x84, 0xaa, 0xbc, 0x0b, 0x41, 0x33, 0xca, 0xdf, 0x32, 0xe3,
	0x3c, 0xc0, 0xf5, 0x75, 0x67, 0x6d, 0xfd, 0xda, 0xd6, 0xea, 0x15, 0x9a, 0xb7, 0x06, 0xe5, 0xf5,
	0xcf, 0xdc, 0x58, 0xbd, 0xba, 0x50, 0x40, 0xd3, 0x50, 0xbc, 0xb2, 0xb5, 0xbe, 0x50, 0xa4, 0x3f,
	0xae, 0x6e, 0xad, 0x2f, 0x94, 0xce, 0xfd, 0xe2, 0xcd, 0xf8, 0x31, 0x41, 0x69, 0xcc, 0xf9, 0x22,
	0xd4, 0x84, 0xee, 0xb6, 0x83, 0xd1, 0x93, 0xd9, 0xe7, 0x38, 0xf2, 0xbb, 0xe0, 0xdb, 0xc6, 0x53,
	0xc3, 0xd0, 0xc4, 0xb8, 0x4d, 0x21, 0x17, 0x20, 0x79, 0xf8, 0x0e, 0x3d, 0x6d, 0xe4, 0x4b, 0xfd,
	0x6d, 0xbf, 0xc6, 0xe9, 0xe1, 0x88, 0x71, 0x15, 0x6d, 0x98, 0x55, 0x5f, 0x98, 0x43, 0xcf, 0xe4,
	0x85, 0xf1, 0xd2, 0x5e, 0x10, 0x6b, 0x9c, 0x19, 0x05, 0x55, 0xad, 0x48, 0x7d, 0xd1, 0xcd, 0x54,
	0x51, 0xc6, 0x93, 0x73, 0xa6, 0x8a, 0xb2, 0x1e, 0x88, 0xe3, 0x44, 0x4b, 0x5e, 0x5a, 0x33, 0x11,
	0x6d, 0xe0, 0x81, 0x37, 0x13, 0xd1, 0x06, 0x1f, 0x6d, 0xe3, 0x7d, 0x51, 0xdf, 0x3e, 0x33, 0xf5,
	0x25, 0xe3, 0xd9, 0x35, 0x53, 0x5f, 0xb2, 0x9e, 0x52, 0xe3, 0x15, 0xa9, 0x4f, 0x8b, 0x99, 0x2a,
	0xca, 0x78, 0x41, 0xcd, 0x54, 0x51, 0xd6, 0x4b, 0x65, 0xf6, 0x14, 0xea, 0xc0, 0xbc, 0xfe, 0x7a,
	0x17, 0x3a, 0x9b, 0x37, 0xba, 0xa9, 0x97, 0x98, 0x1a, 0xcf, 0x8e, 0x86, 0xac, 0x56, 0xa7, 0xbf,
	0x93, 0x65, 0xaa, 0x2e, 0xf3, 0x45, 0x2f, 0x53, 0x75, 0xd9, 0x4f, 0x6f, 0x71, 0x32, 0xaa, 0xef,
	0x57, 0x99, 0xc8, 0x98, 0xf1, 0x74, 0x96, 0x89, 0x8c, 0x59, 0xcf, 0x61, 0xf1, 0x7e, 0xe9, 0x2f,
	0x4a, 0x99, 0xfa, 0x95, 0xf9, 0xa0, 0x95, 0xa9, 0x5f, 0xd9, 0x8f, 0x54, 0xd9, 0x53, 0x88, 0xf0,
	0xa0, 0xe2, 0xf2, 0x4b, 0xb2, 0x16, 0xa1, 0xec, 0x6b, 0x74, 0x14, 0x79, 0x60, 0x1d, 0x1d, 0xb3,
	0x8b, 0xdf, 0xd2, 0x42, 0xf0, 0xeb, 0xd1, 0x99, 0x5f, 0x1e, 0x67, 0xe5, 0x8c, 0x39, 0xf5, 0x95,
	0x31, 0x73, 0xc5, 0x4d, 0xf9, 0x9d, 0x74, 0x68, 0x77, 0xed, 0x95, 0xa1, 0x57, 0x47, 0x08, 0x48,
	0x98, 0xa1, 0xbb, 0x35, 0x5e, 0x1b, 0x3b, 0x9f, 0xd6, 0x20, 0xe3, 0x43, 0x45, 0xa6, 0x06, 0x0d,
	0x7b, 0x8a, 0xc9, 0xd4, 0xa0, 0xa1, 0x2f, 0x22, 0x89, 0xc1, 0x32, 0x3c, 0x20, 0x64, 0x1a, 0xac,
	0xfc, 0x27, 0x8d, 0x4c, 0x83, 0x35, 0xe4, 0x95, 0x22, 0x41, 0x1b, 0xe3, 0x9b, 0x3e, 0x26, 0xda,
	0x0c, 0x7b, 0x68, 0xc8, 0x44, 0x9b, 0xa1, 0x8f, 0x07, 0xd9, 0x53, 0xa8, 0x05, 0x33, 0xca, 0x6b,
	0x3a, 0xe8, 0xf4, 0x30, 0x2e, 0x8c, 0xf9, 0xf5, 0x99, 0x11, 0x30, 0xe3, 0x5a, 0xbe, 0x04, 0x73,
	0x1a, 0xe7, 0xa0, 0x33, 0x23, 0xc5, 0xc9, 0xe4, 0x35, 0x9d, 0x1d, 0x09, 0x57, 0xad, 0x4b, 0x63,
	0x0a, 0x74, 0x66, 0x04, 0xce, 0x19, 0x52, 0x57, 0xe6, 0xeb, 0x31, 0x9c, 0x7a, 0xca, 0x98, 0xa3,
	0xd3, 0x43, 0xd9, 0x62, 0x08, 0xf5, 0x32, 0x1e, 0x6e, 0xe1, 0x3d, 0xd2, 0x86, 0x12, 0x9d, 0x19,
	0x61, 0xbc, 0x87, 0xf4, 0x28, 0xf3, 0x39, 0x15, 0x7b, 0x0a, 0xf5, 0xe0, 0x50, 0xea, 0x69, 0x11,
	0xf4, 0xec, 0xb0, 0x91, 0x56, 0x1f, 0x52, 0x69, 0x3c, 0x37, 0x22, 0x76, 0x5c, 0xe3, 0x1e, 0x2c,
	0x0e, 0xbc, 0x4c, 0x81, 0x56, 0x46, 0x19, 0xf3, 0xe4, 0x75, 0x85, 0xc6, 0xf3, 0x23, 0xe3, 0xab,
	0xf5, 0x0e, 0x3c, 0x15, 0x62, 0xaa, 0xd7, 0xf4, 0xca, 0x89, 0xa9, 0x5e, 0xe3, 0x1b, 0x24, 0x9c,
	0xc2, 0xa9, 0x87, 0x2a, 0x4c, 0x14, 0xce, 0x7e, 0x2a, 0xc3, 0x44, 0x61, 0xc3, 0xeb, 0x17, 0xbc,
	0xa7, 0x03, 0x4f, 0x47, 0x98, 0x7a, 0x6a, 0x7a, 0xbf, 0xc2, 0xd4, 0x53, 0xe3, 0x9b, 0x14, 0x9c,
	0x6f, 0xb5, 0x98, 0x29, 0x26, 0xbe, 0xcd, 0x7a, 0x8b, 0xc2, 0xc4, 0xb7, 0x99, 0x8f, 0x18, 0xf0,
	0xba, 0xb4, 0xc8, 0xfa, 0xa6, 0xba, 0xb2, 0x9e, 0x20, 0x30, 0xd5, 0x95, 0x19, 0xaa, 0x9f, 0x2b,
	0x52, 0xaa, 0x0f, 0x9d, 0x49, 0x91, 0xca, 0x70, 0x3c, 0x34, 0x69, 0x19, 0x59, 0x9e, 0x7d, 0xf6,
	0x14, 0x7a, 0x5f, 0x3e, 0xe8, 0x95, 0x0a, 0xcc, 0x8f, 0xce, 0xe5, 0xb1, 0x7b, 0x76, 0x14, 0xff,
	0x71, 0xc5, 0xe8, 0x9e, 0x7c, 0xf1, 0x5b, 0x8b, 0xc2, 0x8f, 0x5e, 0xc8, 0x2b, 0x25, 0x2b, 0x60,
	0xff, 0xb8, 0xf5, 0xc6, 0x7d, 0x4e, 0x85, 0xdd, 0xcf, 0xef, 0x73, 0x76, 0x8c, 0xfe, 0x71, 0xeb,
	0xbe, 0x2b, 0x9f, 0x76, 0xd3, 0x63, 0xec, 0xa3, 0x17, 0x73, 0xc9, 0x9d, 0x15, 0x8f, 0x7f, 0xdc,
	0x9a, 0x23, 0x40, 0x83, 0x21, 0xf5, 0x51, 0xae, 0x54, 0xcb, 0x08, 0xbe, 0x3f, 0x6e, 0xad, 0x5f,
	0x95, 0xaf, 0x15, 0xa7, 0xa3, 0xe8, 0xa3, 0x97, 0xf2, 0x0a, 0x32, 0xc4, 0xdc, 0x9f, 0xb8, 0xcf,
	0x6a, 0xc0, 0xfc, 0xfc, 0x3e, 0x67, 0x84, 0xd6, 0x9f, 0x78, 0x8c, 0xf5, 0x18, 0xf9, 0xf9, 0x63,
	0x9c, 0x19, 0x4f, 0x7f, 0xe2, 0x9a, 0xf5, 0x90, 0xf8, 0xf9, 0x35, 0x67, 0x86, 0xcf, 0x9f, 0x98,
	0xd2, 0x6a, 0x04, 0xfc, 0x7c, 0x4a, 0x67, 0xc4, 0xca, 0x9f, 0x78, 0x26, 0xa7, 0x82, 0xde, 0xe7,
	0xcf, 0xe4, 0xec, 0x08, 0xf9, 0xe3, 0xd6, 0xdd, 0x83, 0x85, 0x74, 0x88, 0x7b, 0xf4, 0x5c, 0xee,
	0x2c, 0x4e, 0x87, 0xc2, 0x1f, 0xb7, 0xc6, 0xef, 0xc4, 0x2f, 0x1e, 0x64, 0x7b, 0xaa, 0xbe, 0x3e,
	0x41, 0x64, 0x78, 0xde, 0x90, 0xf3, 0x13, 0xc7, 0x94, 0x67, 0x53, 0xfc, 0x70, 0x46, 0x7c, 0x75,
	0x93, 0x18, 0x37, 0x87, 0x7a, 0x6f, 0xbc, 0x38, 0x76, 0xf0, 0x76, 0x7b, 0x0a, 0x85, 0xb0, 0x90,
	0x0e, 0x5f, 0x8e, 0x9e, 0x1b, 0x35, 0xcc, 0x39, 0xaf, 0x77, 0x65, 0xbc, 0xa8, 0xe8, 0xf6, 0x14,
	0xfa, 0x00, 0x96, 0xb2, 0x82, 0x76, 0xa3, 0x17, 0xc7, 0x09, 0xf0, 0xcd, 0x2b, 0x3f, 0x37, 0x7e,
	0x4c, 0x70, 0x7b, 0x0a, 0x7d, 0x68, 0xb1, 0xe8, 0x9f, 0x83, 0x01, 0xb5, 0x91, 0xb9, 0x3c, 0x63,
	0xfc, 0xee, 0xc6, 0x4b, 0x63, 0xe5, 0x51, 0x07, 0x3e, 0x23, 0x54, 0xb5, 0x69, 0xe0, 0xcd, 0xa1,
	0xb6, 0x4d, 0x03, 0x9f, 0x13, 0x07, 0xdb, 0x9e, 0x42, 0x7f, 0x6a, 0xc1, 0x63, 0x43, 0x43, 0x33,
	0xa3, 0xb7, 0x26, 0x8e, 0xe9, 0xcc, 0x9b, 0xf6, 0xf6, 0x01, 0x63, 0x42, 0xdb, 0x53, 0xe8, 0x07,
	0x16, 0x9c, 0xcc, 0x8f, 0x37, 0x8c, 0xde, 0x9c, 0x2c, 0x4a, 0x31, 0x6f, 0xe2, 0x85, 0x83, 0x84,
	0x38, 0xb6, 0xa7, 0xd0, 0x8f, 0x2d, 0xb0, 0x87, 0x07, 0xc2, 0x45, 0x6f, 0x4f, 0x1e, 0x42, 0x97,
	0xb7, 0xf3, 0x9d, 0x83, 0xc6, 0xe0, 0xe5, 0x76, 0x3f, 0x3d, 0x88, 0xad, 0xc9, 0xee, 0x97, 0x19,
	0x1a, 0xd7, 0x64, 0xf7, 0xcb, 0x8e, 0x8b, 0x1b, 0xcf, 0xf3, 0x81, 0x88, 0xaf, 0x39, 0xf3, 0xdc,
	0x14, 0xdd, 0x36, 0x67, 0x9e, 0x1b, 0x03, 0xca, 0x0a, 0x63, 0x8e, 0x31, 0x40, 0x2a, 0x7a, 0x75,
	0xec, 0x88, 0xaa, 0xb9, 0xc6, 0x9c, 0xa1, 0x91, 0x58, 0xed, 0x29, 0xf4, 0x7d, 0x1e, 0xc9, 0xdf,
	0x1c, 0x50, 0x14, 0xbd, 0x31, 0x51, 0x14, 0x52, 0xde, 0xb0, 0x37, 0x0f, 0x10, 0xc1, 0xd4, 0x9e,
	0x42, 0x7f, 0x64, 0xc1, 0x89, 0xbc, 0x10, 0x9a, 0xe8, 0xfc, 0x24, 0x61, 0x37, 0x79, 0xd3, 0xde,
	0x98, 0x3c, 0x62, 0x27, 0x3f, 0x2b, 0x49, 0xbc, 0x0d, 0x4c, 0x67, 0x25, 0x03, 0x2e, 0x10, 0xa6,
	0xb3, 0x92, 0x41, 0xc7, 0x05, 0xbe, 0x10, 0xa6, 0x0f, 0xf8, 0x4d, 0x0b, 0xa1, 0xc1, 0x1b, 0xc1,
	0xb4, 0x10, 0x9a, 0xfc, 0x06, 0xec, 0x29, 0xb4, 0x0f, 0x68, 0xf0, 0x1c, 0xdf, 0xa4, 0xf6, 0x19,
	0xdd, 0x01, 0x1a, 0x2f, 0x8c, 0x9e, 0x21, 0xae, 0xfa, 0x8f, 0x2d, 0x78, 0x74, 0xc8, 0xe1, 0x3b,
	0xba, 0x30, 0xe1, 0x99, 0x3d, 0x6f, 0xd5, 0x27, 0x0e, 0x74, 0xe2, 0x6f, 0x4f, 0xa1, 0x3f, 0xb1,
	0xe0, 0xd4, 0xb0, 0xd3, 0x6c, 0xf4, 0x89, 0x49, 0x4f, 0xc1, 0x79, 0x23, 0xdf, 0x3a, 0xd8, 0x21,
	0xba, 0x3d, 0x85, 0xee, 0x30, 0x21, 0xc7, 0x44, 0x10, 0xf3, 0x71, 0x8e, 0xaf, 0x21, 0x66, 0x78,
	0xf8, 0x64, 0x20, 0x1a, 0x98, 0xc7, 0x8c, 0x2e, 0x2b, 0xde, 0xa9, 0x30, 0x4f, 0xa0, 0x97, 0xfe,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x9b, 0xea, 0x71, 0x5c, 0xa7, 0x91, 0x00, 0x00,
}
