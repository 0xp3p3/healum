// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/user-srv/proto/user/user.proto

/*
Package go_micro_srv_user is a generated protocol buffer package.

It is generated from these files:
	server/user-srv/proto/user/user.proto

It has these top-level messages:
	UserData
	UserArrData
	UserTokenData
	AllRequest
	AllResponse
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	UpdateRequest
	UpdateResponse
	FilterRequest
	FilterResponse
	DeleteRequest
	DeleteResponse
	UpdateTokenRequest
	UpdateTokenResponse
	ReadByAccountRequest
	ReadByAccountResponse
	ReadTokensRequest
	ReadTokensResponse
	SaveUserPreferenceRequest
	SaveUserPreferenceResponse
	ReadUserPreferenceRequest
	ReadUserPreferenceResponse
	ListUserFeedbackRequest
	ListUserFeedbackResponse
	FilterUserRequest
	FilterUserResponse
	SearchUserRequest
	SearchUserResponse
	AutocompleteUserRequest
	AutocompleteUserResponse
	AddMultipleMeasurementsRequest
	AddMultipleMeasurementsResponse
	GetAllMeasurementsHistoryRequest
	GetAllMeasurementsHistoryResponse
	GetMeasurementsHistoryRequest
	GetMeasurementsHistoryResponse
	GetAllTrackedMarkersRequest
	GetAllTrackedMarkersResponse
	ReadAccountTokenRequest
	ReadAccountTokenResponse
	GetSharedResourcesRequest
	GetSharedResourcesResponse
	GetShareableResourcesRequest
	GetShareableResourcesResponse
	SharedResourcesResponse
	GoalResponse
	AllGoalResponseRequest
	AllGoalResponseResponse
	ChallengeResponse
	AllChallengeResponseRequest
	AllChallengeResponseResponse
	HabitResponse
	AllHabitResponseRequest
	AllHabitResponseResponse
	ShareResourcesRequest
	ShareMultipleResourcesRequest
	ShareResourcesResponse
	ShareResource
	ShareableSurvey
	GetShareableSurveyRequest
	GetShareableSurveyResponse
	ShareableContent
	GetShareableContentRequest
	GetShareableContentResponse
	User
	Token
	ContactDetail
	Preferences
	Measurement
	PreferencesMessage
	UserFeedback
	SearchResponse
	UserMeasurementEdge
*/
package go_micro_srv_user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"
import google_protobuf1 "github.com/golang/protobuf/ptypes/struct"
import go_micro_srv_static "server/static-srv/proto/static"
import go_micro_srv_account "server/account-srv/proto/account"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ContactDetailType int32

const (
	ContactDetailType_ContactDetailType_NONE ContactDetailType = 0
	ContactDetailType_EMAIL                  ContactDetailType = 1
	ContactDetailType_PHONE                  ContactDetailType = 2
)

var ContactDetailType_name = map[int32]string{
	0: "ContactDetailType_NONE",
	1: "EMAIL",
	2: "PHONE",
}
var ContactDetailType_value = map[string]int32{
	"ContactDetailType_NONE": 0,
	"EMAIL":                  1,
	"PHONE":                  2,
}

func (x ContactDetailType) String() string {
	return proto.EnumName(ContactDetailType_name, int32(x))
}
func (ContactDetailType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type UserData struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *UserData) Reset()                    { *m = UserData{} }
func (m *UserData) String() string            { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()               {}
func (*UserData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserData) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserArrData struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
}

func (m *UserArrData) Reset()                    { *m = UserArrData{} }
func (m *UserArrData) String() string            { return proto.CompactTextString(m) }
func (*UserArrData) ProtoMessage()               {}
func (*UserArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserArrData) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type UserTokenData struct {
	User    *User                         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Account *go_micro_srv_account.Account `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
}

func (m *UserTokenData) Reset()                    { *m = UserTokenData{} }
func (m *UserTokenData) String() string            { return proto.CompactTextString(m) }
func (*UserTokenData) ProtoMessage()               {}
func (*UserTokenData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UserTokenData) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserTokenData) GetAccount() *go_micro_srv_account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type AllRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Offset        int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit         int64  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllRequest) Reset()                    { *m = AllRequest{} }
func (m *AllRequest) String() string            { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()               {}
func (*AllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AllRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllResponse struct {
	Data    *UserArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllResponse) Reset()                    { *m = AllResponse{} }
func (m *AllResponse) String() string            { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()               {}
func (*AllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AllResponse) GetData() *UserArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateRequest struct {
	User    *User                         `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Account *go_micro_srv_account.Account `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	OrgId   string                        `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId  string                        `protobuf:"bytes,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateRequest) GetAccount() *go_micro_srv_account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateResponse struct {
	Data    *UserTokenData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateResponse) GetData() *UserTokenData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ReadRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ReadRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadResponse struct {
	Data    *UserData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReadResponse) GetData() *UserData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateRequest struct {
	User   *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *UpdateRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateResponse struct {
	Data    *UserData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UpdateResponse) GetData() *UserData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterRequest struct {
	OrgId         string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Offset        int64    `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit         int64    `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	SortParameter string   `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string   `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
	Users         []string `protobuf:"bytes,7,rep,name=users" json:"users,omitempty"`
}

func (m *FilterRequest) Reset()                    { *m = FilterRequest{} }
func (m *FilterRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterRequest) ProtoMessage()               {}
func (*FilterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *FilterRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

func (m *FilterRequest) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type FilterResponse struct {
	Data    *UserArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterResponse) Reset()                    { *m = FilterResponse{} }
func (m *FilterResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterResponse) ProtoMessage()               {}
func (*FilterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *FilterResponse) GetData() *UserArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *DeleteRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DeleteRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *DeleteResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateTokenRequest struct {
	UserId string            `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Tokens map[string]*Token `protobuf:"bytes,2,rep,name=tokens" json:"tokens,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *UpdateTokenRequest) Reset()                    { *m = UpdateTokenRequest{} }
func (m *UpdateTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTokenRequest) ProtoMessage()               {}
func (*UpdateTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *UpdateTokenRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UpdateTokenRequest) GetTokens() map[string]*Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type UpdateTokenResponse struct {
}

func (m *UpdateTokenResponse) Reset()                    { *m = UpdateTokenResponse{} }
func (m *UpdateTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateTokenResponse) ProtoMessage()               {}
func (*UpdateTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type ReadByAccountRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReadByAccountRequest) Reset()                    { *m = ReadByAccountRequest{} }
func (m *ReadByAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadByAccountRequest) ProtoMessage()               {}
func (*ReadByAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ReadByAccountRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type ReadByAccountResponse struct {
	Data    *UserData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadByAccountResponse) Reset()                    { *m = ReadByAccountResponse{} }
func (m *ReadByAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadByAccountResponse) ProtoMessage()               {}
func (*ReadByAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ReadByAccountResponse) GetData() *UserData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadByAccountResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadByAccountResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadTokensRequest struct {
	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds" json:"user_ids,omitempty"`
}

func (m *ReadTokensRequest) Reset()                    { *m = ReadTokensRequest{} }
func (m *ReadTokensRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadTokensRequest) ProtoMessage()               {}
func (*ReadTokensRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ReadTokensRequest) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type ReadTokensResponse struct {
	Tokens []*Token `protobuf:"bytes,1,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *ReadTokensResponse) Reset()                    { *m = ReadTokensResponse{} }
func (m *ReadTokensResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadTokensResponse) ProtoMessage()               {}
func (*ReadTokensResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ReadTokensResponse) GetTokens() []*Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type SaveUserPreferenceRequest struct {
	Preference *Preferences `protobuf:"bytes,1,opt,name=preference" json:"preference,omitempty"`
	UserId     string       `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId      string       `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId     string       `protobuf:"bytes,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *SaveUserPreferenceRequest) Reset()                    { *m = SaveUserPreferenceRequest{} }
func (m *SaveUserPreferenceRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveUserPreferenceRequest) ProtoMessage()               {}
func (*SaveUserPreferenceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *SaveUserPreferenceRequest) GetPreference() *Preferences {
	if m != nil {
		return m.Preference
	}
	return nil
}

func (m *SaveUserPreferenceRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SaveUserPreferenceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SaveUserPreferenceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type SaveUserPreferenceResponse struct {
	Data    *SaveUserPreferenceResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SaveUserPreferenceResponse) Reset()                    { *m = SaveUserPreferenceResponse{} }
func (m *SaveUserPreferenceResponse) String() string            { return proto.CompactTextString(m) }
func (*SaveUserPreferenceResponse) ProtoMessage()               {}
func (*SaveUserPreferenceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *SaveUserPreferenceResponse) GetData() *SaveUserPreferenceResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SaveUserPreferenceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SaveUserPreferenceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SaveUserPreferenceResponse_Data struct {
	Preference *Preferences `protobuf:"bytes,1,opt,name=preference" json:"preference,omitempty"`
}

func (m *SaveUserPreferenceResponse_Data) Reset()         { *m = SaveUserPreferenceResponse_Data{} }
func (m *SaveUserPreferenceResponse_Data) String() string { return proto.CompactTextString(m) }
func (*SaveUserPreferenceResponse_Data) ProtoMessage()    {}
func (*SaveUserPreferenceResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22, 0}
}

func (m *SaveUserPreferenceResponse_Data) GetPreference() *Preferences {
	if m != nil {
		return m.Preference
	}
	return nil
}

type ReadUserPreferenceRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadUserPreferenceRequest) Reset()                    { *m = ReadUserPreferenceRequest{} }
func (m *ReadUserPreferenceRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadUserPreferenceRequest) ProtoMessage()               {}
func (*ReadUserPreferenceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ReadUserPreferenceRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ReadUserPreferenceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadUserPreferenceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadUserPreferenceResponse struct {
	Data    *ReadUserPreferenceResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadUserPreferenceResponse) Reset()                    { *m = ReadUserPreferenceResponse{} }
func (m *ReadUserPreferenceResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadUserPreferenceResponse) ProtoMessage()               {}
func (*ReadUserPreferenceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ReadUserPreferenceResponse) GetData() *ReadUserPreferenceResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadUserPreferenceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadUserPreferenceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadUserPreferenceResponse_Data struct {
	Preference *Preferences `protobuf:"bytes,1,opt,name=preference" json:"preference,omitempty"`
}

func (m *ReadUserPreferenceResponse_Data) Reset()         { *m = ReadUserPreferenceResponse_Data{} }
func (m *ReadUserPreferenceResponse_Data) String() string { return proto.CompactTextString(m) }
func (*ReadUserPreferenceResponse_Data) ProtoMessage()    {}
func (*ReadUserPreferenceResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{24, 0}
}

func (m *ReadUserPreferenceResponse_Data) GetPreference() *Preferences {
	if m != nil {
		return m.Preference
	}
	return nil
}

type ListUserFeedbackRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ListUserFeedbackRequest) Reset()                    { *m = ListUserFeedbackRequest{} }
func (m *ListUserFeedbackRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUserFeedbackRequest) ProtoMessage()               {}
func (*ListUserFeedbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ListUserFeedbackRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ListUserFeedbackRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ListUserFeedbackRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ListUserFeedbackResponse struct {
	Data    *ListUserFeedbackResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ListUserFeedbackResponse) Reset()                    { *m = ListUserFeedbackResponse{} }
func (m *ListUserFeedbackResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUserFeedbackResponse) ProtoMessage()               {}
func (*ListUserFeedbackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ListUserFeedbackResponse) GetData() *ListUserFeedbackResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ListUserFeedbackResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ListUserFeedbackResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ListUserFeedbackResponse_Data struct {
	Feedbacks []*UserFeedback `protobuf:"bytes,1,rep,name=feedbacks" json:"feedbacks,omitempty"`
}

func (m *ListUserFeedbackResponse_Data) Reset()         { *m = ListUserFeedbackResponse_Data{} }
func (m *ListUserFeedbackResponse_Data) String() string { return proto.CompactTextString(m) }
func (*ListUserFeedbackResponse_Data) ProtoMessage()    {}
func (*ListUserFeedbackResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26, 0}
}

func (m *ListUserFeedbackResponse_Data) GetFeedbacks() []*UserFeedback {
	if m != nil {
		return m.Feedbacks
	}
	return nil
}

type FilterUserRequest struct {
	Tags          []string                           `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	Preference    *Preferences                       `protobuf:"bytes,2,opt,name=preference" json:"preference,omitempty"`
	Status        go_micro_srv_account.AccountStatus `protobuf:"varint,3,opt,name=status,enum=go.micro.srv.account.AccountStatus" json:"status,omitempty"`
	OrgId         string                             `protobuf:"bytes,4,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string                             `protobuf:"bytes,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Offset        int64                              `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
	Limit         int64                              `protobuf:"varint,7,opt,name=limit" json:"limit,omitempty"`
	SortParameter string                             `protobuf:"bytes,8,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string                             `protobuf:"bytes,9,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *FilterUserRequest) Reset()                    { *m = FilterUserRequest{} }
func (m *FilterUserRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterUserRequest) ProtoMessage()               {}
func (*FilterUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *FilterUserRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *FilterUserRequest) GetPreference() *Preferences {
	if m != nil {
		return m.Preference
	}
	return nil
}

func (m *FilterUserRequest) GetStatus() go_micro_srv_account.AccountStatus {
	if m != nil {
		return m.Status
	}
	return go_micro_srv_account.AccountStatus_AccountStatus_NONE
}

func (m *FilterUserRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterUserRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterUserRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterUserRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterUserRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterUserRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type FilterUserResponse struct {
	Data    *FilterUserResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterUserResponse) Reset()                    { *m = FilterUserResponse{} }
func (m *FilterUserResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterUserResponse) ProtoMessage()               {}
func (*FilterUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *FilterUserResponse) GetData() *FilterUserResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterUserResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterUserResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterUserResponse_Data struct {
	Response []*SearchResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *FilterUserResponse_Data) Reset()                    { *m = FilterUserResponse_Data{} }
func (m *FilterUserResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*FilterUserResponse_Data) ProtoMessage()               {}
func (*FilterUserResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28, 0} }

func (m *FilterUserResponse_Data) GetResponse() []*SearchResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type SearchUserRequest struct {
	OrgId          string                         `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId         string                         `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Offset         int64                          `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit          int64                          `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Name           string                         `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Gender         go_micro_srv_static.Gender     `protobuf:"varint,6,opt,name=gender,enum=go.micro.srv.static.Gender" json:"gender,omitempty"`
	Dob            int64                          `protobuf:"varint,7,opt,name=dob" json:"dob,omitempty"`
	Addresses      []*go_micro_srv_static.Address `protobuf:"bytes,8,rep,name=addresses" json:"addresses,omitempty"`
	ContactDetails []*ContactDetail               `protobuf:"bytes,9,rep,name=contact_details,json=contactDetails" json:"contact_details,omitempty"`
}

func (m *SearchUserRequest) Reset()                    { *m = SearchUserRequest{} }
func (m *SearchUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchUserRequest) ProtoMessage()               {}
func (*SearchUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *SearchUserRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SearchUserRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *SearchUserRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchUserRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchUserRequest) GetGender() go_micro_srv_static.Gender {
	if m != nil {
		return m.Gender
	}
	return go_micro_srv_static.Gender_Gender_NONE
}

func (m *SearchUserRequest) GetDob() int64 {
	if m != nil {
		return m.Dob
	}
	return 0
}

func (m *SearchUserRequest) GetAddresses() []*go_micro_srv_static.Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *SearchUserRequest) GetContactDetails() []*ContactDetail {
	if m != nil {
		return m.ContactDetails
	}
	return nil
}

type SearchUserResponse struct {
	Data    *SearchUserResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SearchUserResponse) Reset()                    { *m = SearchUserResponse{} }
func (m *SearchUserResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchUserResponse) ProtoMessage()               {}
func (*SearchUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *SearchUserResponse) GetData() *SearchUserResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SearchUserResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SearchUserResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SearchUserResponse_Data struct {
	Response []*SearchResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *SearchUserResponse_Data) Reset()                    { *m = SearchUserResponse_Data{} }
func (m *SearchUserResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*SearchUserResponse_Data) ProtoMessage()               {}
func (*SearchUserResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30, 0} }

func (m *SearchUserResponse_Data) GetResponse() []*SearchResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type AutocompleteUserRequest struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrgId         string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Limit         int64  `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	SortParameter string `protobuf:"bytes,6,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,7,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AutocompleteUserRequest) Reset()                    { *m = AutocompleteUserRequest{} }
func (m *AutocompleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*AutocompleteUserRequest) ProtoMessage()               {}
func (*AutocompleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *AutocompleteUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AutocompleteUserRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AutocompleteUserRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AutocompleteUserRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AutocompleteUserRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AutocompleteUserRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AutocompleteUserRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AutocompleteUserResponse struct {
	Data    *AutocompleteUserResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AutocompleteUserResponse) Reset()                    { *m = AutocompleteUserResponse{} }
func (m *AutocompleteUserResponse) String() string            { return proto.CompactTextString(m) }
func (*AutocompleteUserResponse) ProtoMessage()               {}
func (*AutocompleteUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *AutocompleteUserResponse) GetData() *AutocompleteUserResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AutocompleteUserResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AutocompleteUserResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AutocompleteUserResponse_Data struct {
	Response []*SearchResponse `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *AutocompleteUserResponse_Data) Reset()         { *m = AutocompleteUserResponse_Data{} }
func (m *AutocompleteUserResponse_Data) String() string { return proto.CompactTextString(m) }
func (*AutocompleteUserResponse_Data) ProtoMessage()    {}
func (*AutocompleteUserResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32, 0}
}

func (m *AutocompleteUserResponse_Data) GetResponse() []*SearchResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

type AddMultipleMeasurementsRequest struct {
	Measurements []*Measurement `protobuf:"bytes,1,rep,name=measurements" json:"measurements,omitempty"`
	UserId       string         `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId        string         `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId       string         `protobuf:"bytes,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *AddMultipleMeasurementsRequest) Reset()                    { *m = AddMultipleMeasurementsRequest{} }
func (m *AddMultipleMeasurementsRequest) String() string            { return proto.CompactTextString(m) }
func (*AddMultipleMeasurementsRequest) ProtoMessage()               {}
func (*AddMultipleMeasurementsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *AddMultipleMeasurementsRequest) GetMeasurements() []*Measurement {
	if m != nil {
		return m.Measurements
	}
	return nil
}

func (m *AddMultipleMeasurementsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddMultipleMeasurementsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AddMultipleMeasurementsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type AddMultipleMeasurementsResponse struct {
	Data    *AddMultipleMeasurementsResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                 `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AddMultipleMeasurementsResponse) Reset()         { *m = AddMultipleMeasurementsResponse{} }
func (m *AddMultipleMeasurementsResponse) String() string { return proto.CompactTextString(m) }
func (*AddMultipleMeasurementsResponse) ProtoMessage()    {}
func (*AddMultipleMeasurementsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34}
}

func (m *AddMultipleMeasurementsResponse) GetData() *AddMultipleMeasurementsResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AddMultipleMeasurementsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddMultipleMeasurementsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AddMultipleMeasurementsResponse_Data struct {
	Response []*UserMeasurementEdge `protobuf:"bytes,1,rep,name=response" json:"response,omitempty"`
}

func (m *AddMultipleMeasurementsResponse_Data) Reset()         { *m = AddMultipleMeasurementsResponse_Data{} }
func (m *AddMultipleMeasurementsResponse_Data) String() string { return proto.CompactTextString(m) }
func (*AddMultipleMeasurementsResponse_Data) ProtoMessage()    {}
func (*AddMultipleMeasurementsResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{34, 0}
}

func (m *AddMultipleMeasurementsResponse_Data) GetResponse() []*UserMeasurementEdge {
	if m != nil {
		return m.Response
	}
	return nil
}

type GetAllMeasurementsHistoryRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	TeamId string `protobuf:"bytes,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *GetAllMeasurementsHistoryRequest) Reset()         { *m = GetAllMeasurementsHistoryRequest{} }
func (m *GetAllMeasurementsHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllMeasurementsHistoryRequest) ProtoMessage()    {}
func (*GetAllMeasurementsHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{35}
}

func (m *GetAllMeasurementsHistoryRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetAllMeasurementsHistoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetAllMeasurementsHistoryRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetAllMeasurementsHistoryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllMeasurementsHistoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type GetAllMeasurementsHistoryResponse struct {
	Data    *GetAllMeasurementsHistoryResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetAllMeasurementsHistoryResponse) Reset()         { *m = GetAllMeasurementsHistoryResponse{} }
func (m *GetAllMeasurementsHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllMeasurementsHistoryResponse) ProtoMessage()    {}
func (*GetAllMeasurementsHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{36}
}

func (m *GetAllMeasurementsHistoryResponse) GetData() *GetAllMeasurementsHistoryResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetAllMeasurementsHistoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAllMeasurementsHistoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAllMeasurementsHistoryResponse_Data struct {
	Measurements []*Measurement `protobuf:"bytes,1,rep,name=measurements" json:"measurements,omitempty"`
}

func (m *GetAllMeasurementsHistoryResponse_Data) Reset() {
	*m = GetAllMeasurementsHistoryResponse_Data{}
}
func (m *GetAllMeasurementsHistoryResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetAllMeasurementsHistoryResponse_Data) ProtoMessage()    {}
func (*GetAllMeasurementsHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{36, 0}
}

func (m *GetAllMeasurementsHistoryResponse_Data) GetMeasurements() []*Measurement {
	if m != nil {
		return m.Measurements
	}
	return nil
}

type GetMeasurementsHistoryRequest struct {
	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Offset   int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit    int64  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	TeamId   string `protobuf:"bytes,5,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	MarkerId string `protobuf:"bytes,6,opt,name=marker_id,json=markerId" json:"marker_id,omitempty"`
}

func (m *GetMeasurementsHistoryRequest) Reset()                    { *m = GetMeasurementsHistoryRequest{} }
func (m *GetMeasurementsHistoryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMeasurementsHistoryRequest) ProtoMessage()               {}
func (*GetMeasurementsHistoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *GetMeasurementsHistoryRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetMeasurementsHistoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetMeasurementsHistoryRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetMeasurementsHistoryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetMeasurementsHistoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *GetMeasurementsHistoryRequest) GetMarkerId() string {
	if m != nil {
		return m.MarkerId
	}
	return ""
}

type GetMeasurementsHistoryResponse struct {
	Data    *GetMeasurementsHistoryResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetMeasurementsHistoryResponse) Reset()                    { *m = GetMeasurementsHistoryResponse{} }
func (m *GetMeasurementsHistoryResponse) String() string            { return proto.CompactTextString(m) }
func (*GetMeasurementsHistoryResponse) ProtoMessage()               {}
func (*GetMeasurementsHistoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *GetMeasurementsHistoryResponse) GetData() *GetMeasurementsHistoryResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetMeasurementsHistoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetMeasurementsHistoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetMeasurementsHistoryResponse_Data struct {
	Measurements []*Measurement `protobuf:"bytes,1,rep,name=measurements" json:"measurements,omitempty"`
}

func (m *GetMeasurementsHistoryResponse_Data) Reset()         { *m = GetMeasurementsHistoryResponse_Data{} }
func (m *GetMeasurementsHistoryResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetMeasurementsHistoryResponse_Data) ProtoMessage()    {}
func (*GetMeasurementsHistoryResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{38, 0}
}

func (m *GetMeasurementsHistoryResponse_Data) GetMeasurements() []*Measurement {
	if m != nil {
		return m.Measurements
	}
	return nil
}

type GetAllTrackedMarkersRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *GetAllTrackedMarkersRequest) Reset()                    { *m = GetAllTrackedMarkersRequest{} }
func (m *GetAllTrackedMarkersRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAllTrackedMarkersRequest) ProtoMessage()               {}
func (*GetAllTrackedMarkersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *GetAllTrackedMarkersRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetAllTrackedMarkersRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetAllTrackedMarkersRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type GetAllTrackedMarkersResponse struct {
	Data    *GetAllTrackedMarkersResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetAllTrackedMarkersResponse) Reset()                    { *m = GetAllTrackedMarkersResponse{} }
func (m *GetAllTrackedMarkersResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAllTrackedMarkersResponse) ProtoMessage()               {}
func (*GetAllTrackedMarkersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *GetAllTrackedMarkersResponse) GetData() *GetAllTrackedMarkersResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetAllTrackedMarkersResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAllTrackedMarkersResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAllTrackedMarkersResponse_Data struct {
	Markers []*go_micro_srv_static.Marker `protobuf:"bytes,1,rep,name=markers" json:"markers,omitempty"`
}

func (m *GetAllTrackedMarkersResponse_Data) Reset()         { *m = GetAllTrackedMarkersResponse_Data{} }
func (m *GetAllTrackedMarkersResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetAllTrackedMarkersResponse_Data) ProtoMessage()    {}
func (*GetAllTrackedMarkersResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{40, 0}
}

func (m *GetAllTrackedMarkersResponse_Data) GetMarkers() []*go_micro_srv_static.Marker {
	if m != nil {
		return m.Markers
	}
	return nil
}

type ReadAccountTokenRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReadAccountTokenRequest) Reset()                    { *m = ReadAccountTokenRequest{} }
func (m *ReadAccountTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAccountTokenRequest) ProtoMessage()               {}
func (*ReadAccountTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *ReadAccountTokenRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type ReadAccountTokenResponse struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *ReadAccountTokenResponse) Reset()                    { *m = ReadAccountTokenResponse{} }
func (m *ReadAccountTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAccountTokenResponse) ProtoMessage()               {}
func (*ReadAccountTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ReadAccountTokenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetSharedResourcesRequest struct {
	UserId   string                            `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId    string                            `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string                            `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Type     []string                          `protobuf:"bytes,4,rep,name=type" json:"type,omitempty"`
	SharedBy []string                          `protobuf:"bytes,5,rep,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
	Status   []go_micro_srv_static.ShareStatus `protobuf:"varint,6,rep,packed,name=status,enum=go.micro.srv.static.ShareStatus" json:"status,omitempty"`
	Offset   int64                             `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
	Limit    int64                             `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
	Query    string                            `protobuf:"bytes,9,opt,name=query" json:"query,omitempty"`
}

func (m *GetSharedResourcesRequest) Reset()                    { *m = GetSharedResourcesRequest{} }
func (m *GetSharedResourcesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSharedResourcesRequest) ProtoMessage()               {}
func (*GetSharedResourcesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *GetSharedResourcesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetSharedResourcesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetSharedResourcesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *GetSharedResourcesRequest) GetType() []string {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *GetSharedResourcesRequest) GetSharedBy() []string {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

func (m *GetSharedResourcesRequest) GetStatus() []go_micro_srv_static.ShareStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetSharedResourcesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetSharedResourcesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetSharedResourcesRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type GetSharedResourcesResponse struct {
	Data    *GetSharedResourcesResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetSharedResourcesResponse) Reset()                    { *m = GetSharedResourcesResponse{} }
func (m *GetSharedResourcesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSharedResourcesResponse) ProtoMessage()               {}
func (*GetSharedResourcesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *GetSharedResourcesResponse) GetData() *GetSharedResourcesResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetSharedResourcesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetSharedResourcesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetSharedResourcesResponse_Data struct {
	SharedResources []*SharedResourcesResponse `protobuf:"bytes,1,rep,name=shared_resources,json=sharedResources" json:"shared_resources,omitempty"`
}

func (m *GetSharedResourcesResponse_Data) Reset()         { *m = GetSharedResourcesResponse_Data{} }
func (m *GetSharedResourcesResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetSharedResourcesResponse_Data) ProtoMessage()    {}
func (*GetSharedResourcesResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{44, 0}
}

func (m *GetSharedResourcesResponse_Data) GetSharedResources() []*SharedResourcesResponse {
	if m != nil {
		return m.SharedResources
	}
	return nil
}

type GetShareableResourcesRequest struct {
	UserId    string   `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId     string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId    string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Type      []string `protobuf:"bytes,4,rep,name=type" json:"type,omitempty"`
	CreatedBy []string `protobuf:"bytes,5,rep,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Offset    int64    `protobuf:"varint,7,opt,name=offset" json:"offset,omitempty"`
	Limit     int64    `protobuf:"varint,8,opt,name=limit" json:"limit,omitempty"`
	Query     string   `protobuf:"bytes,9,opt,name=query" json:"query,omitempty"`
}

func (m *GetShareableResourcesRequest) Reset()                    { *m = GetShareableResourcesRequest{} }
func (m *GetShareableResourcesRequest) String() string            { return proto.CompactTextString(m) }
func (*GetShareableResourcesRequest) ProtoMessage()               {}
func (*GetShareableResourcesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *GetShareableResourcesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetShareableResourcesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetShareableResourcesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *GetShareableResourcesRequest) GetType() []string {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *GetShareableResourcesRequest) GetCreatedBy() []string {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *GetShareableResourcesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetShareableResourcesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetShareableResourcesRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type GetShareableResourcesResponse struct {
	Data    *GetShareableResourcesResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                               `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                              `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetShareableResourcesResponse) Reset()                    { *m = GetShareableResourcesResponse{} }
func (m *GetShareableResourcesResponse) String() string            { return proto.CompactTextString(m) }
func (*GetShareableResourcesResponse) ProtoMessage()               {}
func (*GetShareableResourcesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *GetShareableResourcesResponse) GetData() *GetShareableResourcesResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetShareableResourcesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetShareableResourcesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetShareableResourcesResponse_Data struct {
	Resources []*SharedResourcesResponse `protobuf:"bytes,1,rep,name=resources" json:"resources,omitempty"`
}

func (m *GetShareableResourcesResponse_Data) Reset()         { *m = GetShareableResourcesResponse_Data{} }
func (m *GetShareableResourcesResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetShareableResourcesResponse_Data) ProtoMessage()    {}
func (*GetShareableResourcesResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{46, 0}
}

func (m *GetShareableResourcesResponse_Data) GetResources() []*SharedResourcesResponse {
	if m != nil {
		return m.Resources
	}
	return nil
}

type SharedResourcesResponse struct {
	Id           string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId        string                      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	ResourceId   string                      `protobuf:"bytes,3,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	Image        string                      `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
	Title        string                      `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Summary      string                      `protobuf:"bytes,6,opt,name=summary" json:"summary,omitempty"`
	SharedBy     *User                       `protobuf:"bytes,7,opt,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
	Current      int64                       `protobuf:"varint,8,opt,name=current" json:"current,omitempty"`
	Target       *go_micro_srv_static.Target `protobuf:"bytes,9,opt,name=target" json:"target,omitempty"`
	Duration     string                      `protobuf:"bytes,10,opt,name=duration" json:"duration,omitempty"`
	Count        int64                       `protobuf:"varint,11,opt,name=count" json:"count,omitempty"`
	Type         string                      `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
	ResponseTime int64                       `protobuf:"varint,13,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
}

func (m *SharedResourcesResponse) Reset()                    { *m = SharedResourcesResponse{} }
func (m *SharedResourcesResponse) String() string            { return proto.CompactTextString(m) }
func (*SharedResourcesResponse) ProtoMessage()               {}
func (*SharedResourcesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *SharedResourcesResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SharedResourcesResponse) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SharedResourcesResponse) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *SharedResourcesResponse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *SharedResourcesResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *SharedResourcesResponse) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *SharedResourcesResponse) GetSharedBy() *User {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

func (m *SharedResourcesResponse) GetCurrent() int64 {
	if m != nil {
		return m.Current
	}
	return 0
}

func (m *SharedResourcesResponse) GetTarget() *go_micro_srv_static.Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *SharedResourcesResponse) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *SharedResourcesResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SharedResourcesResponse) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *SharedResourcesResponse) GetResponseTime() int64 {
	if m != nil {
		return m.ResponseTime
	}
	return 0
}

type GoalResponse struct {
	Id       string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId    string                      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Title    string                      `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Image    string                      `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
	Summary  string                      `protobuf:"bytes,5,opt,name=summary" json:"summary,omitempty"`
	Duration string                      `protobuf:"bytes,6,opt,name=duration" json:"duration,omitempty"`
	Target   *go_micro_srv_static.Target `protobuf:"bytes,7,opt,name=target" json:"target,omitempty"`
	SharedBy *User                       `protobuf:"bytes,8,opt,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
}

func (m *GoalResponse) Reset()                    { *m = GoalResponse{} }
func (m *GoalResponse) String() string            { return proto.CompactTextString(m) }
func (*GoalResponse) ProtoMessage()               {}
func (*GoalResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *GoalResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GoalResponse) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GoalResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GoalResponse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *GoalResponse) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *GoalResponse) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *GoalResponse) GetTarget() *go_micro_srv_static.Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *GoalResponse) GetSharedBy() *User {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

type AllGoalResponseRequest struct {
	OrgId         string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	UserId        string   `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CreatedBy     []string `protobuf:"bytes,6,rep,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Query         string   `protobuf:"bytes,7,opt,name=query" json:"query,omitempty"`
	SortDirection string   `protobuf:"bytes,8,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
	SortParameter string   `protobuf:"bytes,9,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
}

func (m *AllGoalResponseRequest) Reset()                    { *m = AllGoalResponseRequest{} }
func (m *AllGoalResponseRequest) String() string            { return proto.CompactTextString(m) }
func (*AllGoalResponseRequest) ProtoMessage()               {}
func (*AllGoalResponseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *AllGoalResponseRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllGoalResponseRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllGoalResponseRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllGoalResponseRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllGoalResponseRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AllGoalResponseRequest) GetCreatedBy() []string {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *AllGoalResponseRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *AllGoalResponseRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

func (m *AllGoalResponseRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

type AllGoalResponseResponse struct {
	Data    *AllGoalResponseResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllGoalResponseResponse) Reset()                    { *m = AllGoalResponseResponse{} }
func (m *AllGoalResponseResponse) String() string            { return proto.CompactTextString(m) }
func (*AllGoalResponseResponse) ProtoMessage()               {}
func (*AllGoalResponseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *AllGoalResponseResponse) GetData() *AllGoalResponseResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllGoalResponseResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllGoalResponseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllGoalResponseResponse_Data struct {
	Goals []*GoalResponse `protobuf:"bytes,1,rep,name=goals" json:"goals,omitempty"`
}

func (m *AllGoalResponseResponse_Data) Reset()         { *m = AllGoalResponseResponse_Data{} }
func (m *AllGoalResponseResponse_Data) String() string { return proto.CompactTextString(m) }
func (*AllGoalResponseResponse_Data) ProtoMessage()    {}
func (*AllGoalResponseResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{50, 0}
}

func (m *AllGoalResponseResponse_Data) GetGoals() []*GoalResponse {
	if m != nil {
		return m.Goals
	}
	return nil
}

type ChallengeResponse struct {
	Id       string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId    string                      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Title    string                      `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Image    string                      `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
	Summary  string                      `protobuf:"bytes,5,opt,name=summary" json:"summary,omitempty"`
	Duration string                      `protobuf:"bytes,6,opt,name=duration" json:"duration,omitempty"`
	Target   *go_micro_srv_static.Target `protobuf:"bytes,7,opt,name=target" json:"target,omitempty"`
	SharedBy *User                       `protobuf:"bytes,8,opt,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
}

func (m *ChallengeResponse) Reset()                    { *m = ChallengeResponse{} }
func (m *ChallengeResponse) String() string            { return proto.CompactTextString(m) }
func (*ChallengeResponse) ProtoMessage()               {}
func (*ChallengeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *ChallengeResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ChallengeResponse) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ChallengeResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ChallengeResponse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ChallengeResponse) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ChallengeResponse) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *ChallengeResponse) GetTarget() *go_micro_srv_static.Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ChallengeResponse) GetSharedBy() *User {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

type AllChallengeResponseRequest struct {
	OrgId         string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	UserId        string   `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CreatedBy     []string `protobuf:"bytes,6,rep,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Query         string   `protobuf:"bytes,7,opt,name=query" json:"query,omitempty"`
	SortDirection string   `protobuf:"bytes,8,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
	SortParameter string   `protobuf:"bytes,9,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
}

func (m *AllChallengeResponseRequest) Reset()                    { *m = AllChallengeResponseRequest{} }
func (m *AllChallengeResponseRequest) String() string            { return proto.CompactTextString(m) }
func (*AllChallengeResponseRequest) ProtoMessage()               {}
func (*AllChallengeResponseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *AllChallengeResponseRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllChallengeResponseRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllChallengeResponseRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllChallengeResponseRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllChallengeResponseRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AllChallengeResponseRequest) GetCreatedBy() []string {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *AllChallengeResponseRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *AllChallengeResponseRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

func (m *AllChallengeResponseRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

type AllChallengeResponseResponse struct {
	Data    *AllChallengeResponseResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllChallengeResponseResponse) Reset()                    { *m = AllChallengeResponseResponse{} }
func (m *AllChallengeResponseResponse) String() string            { return proto.CompactTextString(m) }
func (*AllChallengeResponseResponse) ProtoMessage()               {}
func (*AllChallengeResponseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *AllChallengeResponseResponse) GetData() *AllChallengeResponseResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllChallengeResponseResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllChallengeResponseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllChallengeResponseResponse_Data struct {
	Challenges []*ChallengeResponse `protobuf:"bytes,1,rep,name=challenges" json:"challenges,omitempty"`
}

func (m *AllChallengeResponseResponse_Data) Reset()         { *m = AllChallengeResponseResponse_Data{} }
func (m *AllChallengeResponseResponse_Data) String() string { return proto.CompactTextString(m) }
func (*AllChallengeResponseResponse_Data) ProtoMessage()    {}
func (*AllChallengeResponseResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{53, 0}
}

func (m *AllChallengeResponseResponse_Data) GetChallenges() []*ChallengeResponse {
	if m != nil {
		return m.Challenges
	}
	return nil
}

type HabitResponse struct {
	Id       string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId    string                      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Title    string                      `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Image    string                      `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
	Summary  string                      `protobuf:"bytes,5,opt,name=summary" json:"summary,omitempty"`
	Duration string                      `protobuf:"bytes,6,opt,name=duration" json:"duration,omitempty"`
	Target   *go_micro_srv_static.Target `protobuf:"bytes,7,opt,name=target" json:"target,omitempty"`
	SharedBy *User                       `protobuf:"bytes,8,opt,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
}

func (m *HabitResponse) Reset()                    { *m = HabitResponse{} }
func (m *HabitResponse) String() string            { return proto.CompactTextString(m) }
func (*HabitResponse) ProtoMessage()               {}
func (*HabitResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *HabitResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *HabitResponse) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *HabitResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *HabitResponse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *HabitResponse) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *HabitResponse) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *HabitResponse) GetTarget() *go_micro_srv_static.Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *HabitResponse) GetSharedBy() *User {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

type AllHabitResponseRequest struct {
	OrgId         string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	UserId        string   `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CreatedBy     []string `protobuf:"bytes,6,rep,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Query         string   `protobuf:"bytes,7,opt,name=query" json:"query,omitempty"`
	SortDirection string   `protobuf:"bytes,8,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
	SortParameter string   `protobuf:"bytes,9,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
}

func (m *AllHabitResponseRequest) Reset()                    { *m = AllHabitResponseRequest{} }
func (m *AllHabitResponseRequest) String() string            { return proto.CompactTextString(m) }
func (*AllHabitResponseRequest) ProtoMessage()               {}
func (*AllHabitResponseRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *AllHabitResponseRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllHabitResponseRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllHabitResponseRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllHabitResponseRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllHabitResponseRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AllHabitResponseRequest) GetCreatedBy() []string {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *AllHabitResponseRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *AllHabitResponseRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

func (m *AllHabitResponseRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

type AllHabitResponseResponse struct {
	Data    *AllHabitResponseResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllHabitResponseResponse) Reset()                    { *m = AllHabitResponseResponse{} }
func (m *AllHabitResponseResponse) String() string            { return proto.CompactTextString(m) }
func (*AllHabitResponseResponse) ProtoMessage()               {}
func (*AllHabitResponseResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *AllHabitResponseResponse) GetData() *AllHabitResponseResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllHabitResponseResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllHabitResponseResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllHabitResponseResponse_Data struct {
	Habits []*HabitResponse `protobuf:"bytes,1,rep,name=habits" json:"habits,omitempty"`
}

func (m *AllHabitResponseResponse_Data) Reset()         { *m = AllHabitResponseResponse_Data{} }
func (m *AllHabitResponseResponse_Data) String() string { return proto.CompactTextString(m) }
func (*AllHabitResponseResponse_Data) ProtoMessage()    {}
func (*AllHabitResponseResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{56, 0}
}

func (m *AllHabitResponseResponse_Data) GetHabits() []*HabitResponse {
	if m != nil {
		return m.Habits
	}
	return nil
}

type ShareResourcesRequest struct {
	UserId string                                     `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string                                     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string                                     `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Shares map[string]*ShareResourcesRequest_Resource `protobuf:"bytes,4,rep,name=shares" json:"shares,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ShareResourcesRequest) Reset()                    { *m = ShareResourcesRequest{} }
func (m *ShareResourcesRequest) String() string            { return proto.CompactTextString(m) }
func (*ShareResourcesRequest) ProtoMessage()               {}
func (*ShareResourcesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *ShareResourcesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ShareResourcesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ShareResourcesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *ShareResourcesRequest) GetShares() map[string]*ShareResourcesRequest_Resource {
	if m != nil {
		return m.Shares
	}
	return nil
}

type ShareResourcesRequest_Resource struct {
	Resource []*ShareResource `protobuf:"bytes,1,rep,name=resource" json:"resource,omitempty"`
}

func (m *ShareResourcesRequest_Resource) Reset()         { *m = ShareResourcesRequest_Resource{} }
func (m *ShareResourcesRequest_Resource) String() string { return proto.CompactTextString(m) }
func (*ShareResourcesRequest_Resource) ProtoMessage()    {}
func (*ShareResourcesRequest_Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{57, 1}
}

func (m *ShareResourcesRequest_Resource) GetResource() []*ShareResource {
	if m != nil {
		return m.Resource
	}
	return nil
}

type ShareMultipleResourcesRequest struct {
	OrgId  string                                             `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string                                             `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Users  []string                                           `protobuf:"bytes,3,rep,name=users" json:"users,omitempty"`
	Shares map[string]*ShareMultipleResourcesRequest_Resource `protobuf:"bytes,4,rep,name=shares" json:"shares,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ShareMultipleResourcesRequest) Reset()                    { *m = ShareMultipleResourcesRequest{} }
func (m *ShareMultipleResourcesRequest) String() string            { return proto.CompactTextString(m) }
func (*ShareMultipleResourcesRequest) ProtoMessage()               {}
func (*ShareMultipleResourcesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *ShareMultipleResourcesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ShareMultipleResourcesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *ShareMultipleResourcesRequest) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ShareMultipleResourcesRequest) GetShares() map[string]*ShareMultipleResourcesRequest_Resource {
	if m != nil {
		return m.Shares
	}
	return nil
}

type ShareMultipleResourcesRequest_Resource struct {
	Resource []string `protobuf:"bytes,1,rep,name=resource" json:"resource,omitempty"`
}

func (m *ShareMultipleResourcesRequest_Resource) Reset() {
	*m = ShareMultipleResourcesRequest_Resource{}
}
func (m *ShareMultipleResourcesRequest_Resource) String() string { return proto.CompactTextString(m) }
func (*ShareMultipleResourcesRequest_Resource) ProtoMessage()    {}
func (*ShareMultipleResourcesRequest_Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{58, 1}
}

func (m *ShareMultipleResourcesRequest_Resource) GetResource() []string {
	if m != nil {
		return m.Resource
	}
	return nil
}

type ShareResourcesResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ShareResourcesResponse) Reset()                    { *m = ShareResourcesResponse{} }
func (m *ShareResourcesResponse) String() string            { return proto.CompactTextString(m) }
func (*ShareResourcesResponse) ProtoMessage()               {}
func (*ShareResourcesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *ShareResourcesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ShareResourcesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ShareResource struct {
	ResourceId       string                                   `protobuf:"bytes,1,opt,name=resource_id,json=resourceId" json:"resource_id,omitempty"`
	CurrentValue     int64                                    `protobuf:"varint,2,opt,name=currentValue" json:"currentValue,omitempty"`
	ExpectedProgress go_micro_srv_static.ExpectedProgressType `protobuf:"varint,3,opt,name=expectedProgress,enum=go.micro.srv.static.ExpectedProgressType" json:"expectedProgress,omitempty"`
	Unit             string                                   `protobuf:"bytes,4,opt,name=unit" json:"unit,omitempty"`
}

func (m *ShareResource) Reset()                    { *m = ShareResource{} }
func (m *ShareResource) String() string            { return proto.CompactTextString(m) }
func (*ShareResource) ProtoMessage()               {}
func (*ShareResource) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *ShareResource) GetResourceId() string {
	if m != nil {
		return m.ResourceId
	}
	return ""
}

func (m *ShareResource) GetCurrentValue() int64 {
	if m != nil {
		return m.CurrentValue
	}
	return 0
}

func (m *ShareResource) GetExpectedProgress() go_micro_srv_static.ExpectedProgressType {
	if m != nil {
		return m.ExpectedProgress
	}
	return go_micro_srv_static.ExpectedProgressType_ExpectedProgressType_NONE
}

func (m *ShareResource) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

type ShareableSurvey struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId        string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Title        string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Summary      string `protobuf:"bytes,4,opt,name=summary" json:"summary,omitempty"`
	SharedBy     *User  `protobuf:"bytes,5,opt,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
	Count        int64  `protobuf:"varint,6,opt,name=count" json:"count,omitempty"`
	ResponseTime int64  `protobuf:"varint,7,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
}

func (m *ShareableSurvey) Reset()                    { *m = ShareableSurvey{} }
func (m *ShareableSurvey) String() string            { return proto.CompactTextString(m) }
func (*ShareableSurvey) ProtoMessage()               {}
func (*ShareableSurvey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *ShareableSurvey) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ShareableSurvey) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ShareableSurvey) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ShareableSurvey) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ShareableSurvey) GetSharedBy() *User {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

func (m *ShareableSurvey) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *ShareableSurvey) GetResponseTime() int64 {
	if m != nil {
		return m.ResponseTime
	}
	return 0
}

type GetShareableSurveyRequest struct {
	OrgId     string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId    string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit     int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset    int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	UserId    string   `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CreatedBy []string `protobuf:"bytes,6,rep,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Query     string   `protobuf:"bytes,7,opt,name=query" json:"query,omitempty"`
}

func (m *GetShareableSurveyRequest) Reset()                    { *m = GetShareableSurveyRequest{} }
func (m *GetShareableSurveyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetShareableSurveyRequest) ProtoMessage()               {}
func (*GetShareableSurveyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *GetShareableSurveyRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetShareableSurveyRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *GetShareableSurveyRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetShareableSurveyRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetShareableSurveyRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetShareableSurveyRequest) GetCreatedBy() []string {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *GetShareableSurveyRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type GetShareableSurveyResponse struct {
	Data    *GetShareableSurveyResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetShareableSurveyResponse) Reset()                    { *m = GetShareableSurveyResponse{} }
func (m *GetShareableSurveyResponse) String() string            { return proto.CompactTextString(m) }
func (*GetShareableSurveyResponse) ProtoMessage()               {}
func (*GetShareableSurveyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *GetShareableSurveyResponse) GetData() *GetShareableSurveyResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetShareableSurveyResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetShareableSurveyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetShareableSurveyResponse_Data struct {
	Surveys []*ShareableSurvey `protobuf:"bytes,1,rep,name=surveys" json:"surveys,omitempty"`
}

func (m *GetShareableSurveyResponse_Data) Reset()         { *m = GetShareableSurveyResponse_Data{} }
func (m *GetShareableSurveyResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetShareableSurveyResponse_Data) ProtoMessage()    {}
func (*GetShareableSurveyResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{63, 0}
}

func (m *GetShareableSurveyResponse_Data) GetSurveys() []*ShareableSurvey {
	if m != nil {
		return m.Surveys
	}
	return nil
}

type ShareableContent struct {
	Id       string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId    string               `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Title    string               `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Image    string               `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
	Summary  string               `protobuf:"bytes,5,opt,name=summary" json:"summary,omitempty"`
	SharedBy *User                `protobuf:"bytes,6,opt,name=shared_by,json=sharedBy" json:"shared_by,omitempty"`
	Item     *google_protobuf.Any `protobuf:"bytes,7,opt,name=item" json:"item,omitempty"`
}

func (m *ShareableContent) Reset()                    { *m = ShareableContent{} }
func (m *ShareableContent) String() string            { return proto.CompactTextString(m) }
func (*ShareableContent) ProtoMessage()               {}
func (*ShareableContent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *ShareableContent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ShareableContent) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ShareableContent) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ShareableContent) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ShareableContent) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ShareableContent) GetSharedBy() *User {
	if m != nil {
		return m.SharedBy
	}
	return nil
}

func (m *ShareableContent) GetItem() *google_protobuf.Any {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetShareableContentRequest struct {
	OrgId     string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId    string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit     int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset    int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	UserId    string   `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	CreatedBy []string `protobuf:"bytes,6,rep,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Query     string   `protobuf:"bytes,7,opt,name=query" json:"query,omitempty"`
	Type      []string `protobuf:"bytes,8,rep,name=type" json:"type,omitempty"`
}

func (m *GetShareableContentRequest) Reset()                    { *m = GetShareableContentRequest{} }
func (m *GetShareableContentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetShareableContentRequest) ProtoMessage()               {}
func (*GetShareableContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *GetShareableContentRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetShareableContentRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *GetShareableContentRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetShareableContentRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetShareableContentRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetShareableContentRequest) GetCreatedBy() []string {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *GetShareableContentRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *GetShareableContentRequest) GetType() []string {
	if m != nil {
		return m.Type
	}
	return nil
}

type GetShareableContentResponse struct {
	Data    *GetShareableContentResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                             `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                            `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetShareableContentResponse) Reset()                    { *m = GetShareableContentResponse{} }
func (m *GetShareableContentResponse) String() string            { return proto.CompactTextString(m) }
func (*GetShareableContentResponse) ProtoMessage()               {}
func (*GetShareableContentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *GetShareableContentResponse) GetData() *GetShareableContentResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetShareableContentResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetShareableContentResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetShareableContentResponse_Data struct {
	Contents []*ShareableContent `protobuf:"bytes,1,rep,name=contents" json:"contents,omitempty"`
}

func (m *GetShareableContentResponse_Data) Reset()         { *m = GetShareableContentResponse_Data{} }
func (m *GetShareableContentResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetShareableContentResponse_Data) ProtoMessage()    {}
func (*GetShareableContentResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{66, 0}
}

func (m *GetShareableContentResponse_Data) GetContents() []*ShareableContent {
	if m != nil {
		return m.Contents
	}
	return nil
}

type User struct {
	Id                 string                              `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId              string                              `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created            int64                               `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated            int64                               `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Firstname          string                              `protobuf:"bytes,5,opt,name=firstname" json:"firstname,omitempty"`
	Lastname           string                              `protobuf:"bytes,6,opt,name=lastname" json:"lastname,omitempty"`
	AvatarUrl          string                              `protobuf:"bytes,7,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
	Gender             go_micro_srv_static.Gender          `protobuf:"varint,8,opt,name=gender,enum=go.micro.srv.static.Gender" json:"gender,omitempty"`
	Dob                int64                               `protobuf:"varint,9,opt,name=dob" json:"dob,omitempty"`
	Addresses          []*go_micro_srv_static.Address      `protobuf:"bytes,10,rep,name=addresses" json:"addresses,omitempty"`
	ContactDetails     []*ContactDetail                    `protobuf:"bytes,11,rep,name=contact_details,json=contactDetails" json:"contact_details,omitempty"`
	CurrentBatch       *go_micro_srv_static.Batch          `protobuf:"bytes,12,opt,name=currentBatch" json:"currentBatch,omitempty"`
	PointOfContact     *User                               `protobuf:"bytes,13,opt,name=pointOfContact" json:"pointOfContact,omitempty"`
	Tags               []string                            `protobuf:"bytes,14,rep,name=tags" json:"tags,omitempty"`
	Notifications      []*go_micro_srv_static.Notification `protobuf:"bytes,15,rep,name=notifications" json:"notifications,omitempty"`
	PhysicallyFit      bool                                `protobuf:"varint,16,opt,name=physicallyFit" json:"physicallyFit,omitempty"`
	MentallyFit        bool                                `protobuf:"varint,17,opt,name=mentallyFit" json:"mentallyFit,omitempty"`
	OnboardingComplete bool                                `protobuf:"varint,18,opt,name=onboarding_complete,json=onboardingComplete" json:"onboarding_complete,omitempty"`
	Preference         *Preferences                        `protobuf:"bytes,19,opt,name=preference" json:"preference,omitempty"`
	Tokens             map[string]*Token                   `protobuf:"bytes,20,rep,name=tokens" json:"tokens,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *User) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *User) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *User) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *User) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *User) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *User) GetGender() go_micro_srv_static.Gender {
	if m != nil {
		return m.Gender
	}
	return go_micro_srv_static.Gender_Gender_NONE
}

func (m *User) GetDob() int64 {
	if m != nil {
		return m.Dob
	}
	return 0
}

func (m *User) GetAddresses() []*go_micro_srv_static.Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *User) GetContactDetails() []*ContactDetail {
	if m != nil {
		return m.ContactDetails
	}
	return nil
}

func (m *User) GetCurrentBatch() *go_micro_srv_static.Batch {
	if m != nil {
		return m.CurrentBatch
	}
	return nil
}

func (m *User) GetPointOfContact() *User {
	if m != nil {
		return m.PointOfContact
	}
	return nil
}

func (m *User) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *User) GetNotifications() []*go_micro_srv_static.Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

func (m *User) GetPhysicallyFit() bool {
	if m != nil {
		return m.PhysicallyFit
	}
	return false
}

func (m *User) GetMentallyFit() bool {
	if m != nil {
		return m.MentallyFit
	}
	return false
}

func (m *User) GetOnboardingComplete() bool {
	if m != nil {
		return m.OnboardingComplete
	}
	return false
}

func (m *User) GetPreference() *Preferences {
	if m != nil {
		return m.Preference
	}
	return nil
}

func (m *User) GetTokens() map[string]*Token {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type Token struct {
	DeviceToken      string `protobuf:"bytes,1,opt,name=device_token,json=deviceToken" json:"device_token,omitempty"`
	Platform         int32  `protobuf:"varint,2,opt,name=platform" json:"platform,omitempty"`
	UniqueIdentifier string `protobuf:"bytes,3,opt,name=unique_identifier,json=uniqueIdentifier" json:"unique_identifier,omitempty"`
	AppIdentifier    string `protobuf:"bytes,4,opt,name=app_identifier,json=appIdentifier" json:"app_identifier,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *Token) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *Token) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *Token) GetUniqueIdentifier() string {
	if m != nil {
		return m.UniqueIdentifier
	}
	return ""
}

func (m *Token) GetAppIdentifier() string {
	if m != nil {
		return m.AppIdentifier
	}
	return ""
}

type ContactDetail struct {
	Id      string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type    ContactDetailType `protobuf:"varint,2,opt,name=type,enum=go.micro.srv.user.ContactDetailType" json:"type,omitempty"`
	Value   string            `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	Primary bool              `protobuf:"varint,4,opt,name=primary" json:"primary,omitempty"`
	Dnd     bool              `protobuf:"varint,5,opt,name=dnd" json:"dnd,omitempty"`
}

func (m *ContactDetail) Reset()                    { *m = ContactDetail{} }
func (m *ContactDetail) String() string            { return proto.CompactTextString(m) }
func (*ContactDetail) ProtoMessage()               {}
func (*ContactDetail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *ContactDetail) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContactDetail) GetType() ContactDetailType {
	if m != nil {
		return m.Type
	}
	return ContactDetailType_ContactDetailType_NONE
}

func (m *ContactDetail) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ContactDetail) GetPrimary() bool {
	if m != nil {
		return m.Primary
	}
	return false
}

func (m *ContactDetail) GetDnd() bool {
	if m != nil {
		return m.Dnd
	}
	return false
}

// should be stored in user-srv
type Preferences struct {
	Id                  string                                     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId               string                                     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	UserId              string                                     `protobuf:"bytes,11,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Created             int64                                      `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated             int64                                      `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	CurrentMeasurements []*Measurement                             `protobuf:"bytes,5,rep,name=currentMeasurements" json:"currentMeasurements,omitempty"`
	Conditions          []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,6,rep,name=conditions" json:"conditions,omitempty"`
	Allergies           []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,7,rep,name=allergies" json:"allergies,omitempty"`
	Food                []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,8,rep,name=food" json:"food,omitempty"`
	Cuisines            []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,9,rep,name=cuisines" json:"cuisines,omitempty"`
	Ethinicties         []*go_micro_srv_static.ContentCategoryItem `protobuf:"bytes,10,rep,name=ethinicties" json:"ethinicties,omitempty"`
}

func (m *Preferences) Reset()                    { *m = Preferences{} }
func (m *Preferences) String() string            { return proto.CompactTextString(m) }
func (*Preferences) ProtoMessage()               {}
func (*Preferences) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *Preferences) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Preferences) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Preferences) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Preferences) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Preferences) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Preferences) GetCurrentMeasurements() []*Measurement {
	if m != nil {
		return m.CurrentMeasurements
	}
	return nil
}

func (m *Preferences) GetConditions() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Preferences) GetAllergies() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Allergies
	}
	return nil
}

func (m *Preferences) GetFood() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Food
	}
	return nil
}

func (m *Preferences) GetCuisines() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Cuisines
	}
	return nil
}

func (m *Preferences) GetEthinicties() []*go_micro_srv_static.ContentCategoryItem {
	if m != nil {
		return m.Ethinicties
	}
	return nil
}

// should be stored in user-srv
type Measurement struct {
	Id         string                             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId     string                             `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId      string                             `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created    int64                              `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Updated    int64                              `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
	Marker     *go_micro_srv_static.Marker        `protobuf:"bytes,6,opt,name=marker" json:"marker,omitempty"`
	Method     *go_micro_srv_static.TrackerMethod `protobuf:"bytes,7,opt,name=method" json:"method,omitempty"`
	MeasuredBy *User                              `protobuf:"bytes,8,opt,name=measuredBy" json:"measuredBy,omitempty"`
	Value      *google_protobuf1.Value            `protobuf:"bytes,9,opt,name=value" json:"value,omitempty"`
	Unit       string                             `protobuf:"bytes,10,opt,name=unit" json:"unit,omitempty"`
}

func (m *Measurement) Reset()                    { *m = Measurement{} }
func (m *Measurement) String() string            { return proto.CompactTextString(m) }
func (*Measurement) ProtoMessage()               {}
func (*Measurement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *Measurement) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Measurement) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Measurement) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Measurement) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Measurement) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Measurement) GetMarker() *go_micro_srv_static.Marker {
	if m != nil {
		return m.Marker
	}
	return nil
}

func (m *Measurement) GetMethod() *go_micro_srv_static.TrackerMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

func (m *Measurement) GetMeasuredBy() *User {
	if m != nil {
		return m.MeasuredBy
	}
	return nil
}

func (m *Measurement) GetValue() *google_protobuf1.Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Measurement) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

type PreferencesMessage struct {
	UserId     string       `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId      string       `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Preference *Preferences `protobuf:"bytes,3,opt,name=preference" json:"preference,omitempty"`
}

func (m *PreferencesMessage) Reset()                    { *m = PreferencesMessage{} }
func (m *PreferencesMessage) String() string            { return proto.CompactTextString(m) }
func (*PreferencesMessage) ProtoMessage()               {}
func (*PreferencesMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *PreferencesMessage) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *PreferencesMessage) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *PreferencesMessage) GetPreference() *Preferences {
	if m != nil {
		return m.Preference
	}
	return nil
}

type UserFeedback struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId    string `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Feedback string `protobuf:"bytes,4,opt,name=feedback" json:"feedback,omitempty"`
	Rating   int64  `protobuf:"varint,5,opt,name=rating" json:"rating,omitempty"`
	Created  int64  `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Updated  int64  `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
}

func (m *UserFeedback) Reset()                    { *m = UserFeedback{} }
func (m *UserFeedback) String() string            { return proto.CompactTextString(m) }
func (*UserFeedback) ProtoMessage()               {}
func (*UserFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *UserFeedback) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserFeedback) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserFeedback) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UserFeedback) GetFeedback() string {
	if m != nil {
		return m.Feedback
	}
	return ""
}

func (m *UserFeedback) GetRating() int64 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *UserFeedback) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *UserFeedback) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type SearchResponse struct {
	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId     string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Firstname string `protobuf:"bytes,3,opt,name=firstname" json:"firstname,omitempty"`
	Lastname  string `protobuf:"bytes,4,opt,name=lastname" json:"lastname,omitempty"`
	AvatarUrl string `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl" json:"avatar_url,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *SearchResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SearchResponse) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SearchResponse) GetFirstname() string {
	if m != nil {
		return m.Firstname
	}
	return ""
}

func (m *SearchResponse) GetLastname() string {
	if m != nil {
		return m.Lastname
	}
	return ""
}

func (m *SearchResponse) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

type UserMeasurementEdge struct {
	Id            string                             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	UserId        string                             `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId         string                             `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created       int64                              `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Updated       int64                              `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
	MeasuredBy    *User                              `protobuf:"bytes,6,opt,name=measuredBy" json:"measuredBy,omitempty"`
	TrackMarkerId string                             `protobuf:"bytes,7,opt,name=track_marker_id,json=trackMarkerId" json:"track_marker_id,omitempty"`
	Method        *go_micro_srv_static.TrackerMethod `protobuf:"bytes,8,opt,name=method" json:"method,omitempty"`
}

func (m *UserMeasurementEdge) Reset()                    { *m = UserMeasurementEdge{} }
func (m *UserMeasurementEdge) String() string            { return proto.CompactTextString(m) }
func (*UserMeasurementEdge) ProtoMessage()               {}
func (*UserMeasurementEdge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *UserMeasurementEdge) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserMeasurementEdge) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserMeasurementEdge) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UserMeasurementEdge) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *UserMeasurementEdge) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *UserMeasurementEdge) GetMeasuredBy() *User {
	if m != nil {
		return m.MeasuredBy
	}
	return nil
}

func (m *UserMeasurementEdge) GetTrackMarkerId() string {
	if m != nil {
		return m.TrackMarkerId
	}
	return ""
}

func (m *UserMeasurementEdge) GetMethod() *go_micro_srv_static.TrackerMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

func init() {
	proto.RegisterType((*UserData)(nil), "go.micro.srv.user.UserData")
	proto.RegisterType((*UserArrData)(nil), "go.micro.srv.user.UserArrData")
	proto.RegisterType((*UserTokenData)(nil), "go.micro.srv.user.UserTokenData")
	proto.RegisterType((*AllRequest)(nil), "go.micro.srv.user.AllRequest")
	proto.RegisterType((*AllResponse)(nil), "go.micro.srv.user.AllResponse")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.user.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.user.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.user.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.user.ReadResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.user.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.user.UpdateResponse")
	proto.RegisterType((*FilterRequest)(nil), "go.micro.srv.user.FilterRequest")
	proto.RegisterType((*FilterResponse)(nil), "go.micro.srv.user.FilterResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.user.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.user.DeleteResponse")
	proto.RegisterType((*UpdateTokenRequest)(nil), "go.micro.srv.user.UpdateTokenRequest")
	proto.RegisterType((*UpdateTokenResponse)(nil), "go.micro.srv.user.UpdateTokenResponse")
	proto.RegisterType((*ReadByAccountRequest)(nil), "go.micro.srv.user.ReadByAccountRequest")
	proto.RegisterType((*ReadByAccountResponse)(nil), "go.micro.srv.user.ReadByAccountResponse")
	proto.RegisterType((*ReadTokensRequest)(nil), "go.micro.srv.user.ReadTokensRequest")
	proto.RegisterType((*ReadTokensResponse)(nil), "go.micro.srv.user.ReadTokensResponse")
	proto.RegisterType((*SaveUserPreferenceRequest)(nil), "go.micro.srv.user.SaveUserPreferenceRequest")
	proto.RegisterType((*SaveUserPreferenceResponse)(nil), "go.micro.srv.user.SaveUserPreferenceResponse")
	proto.RegisterType((*SaveUserPreferenceResponse_Data)(nil), "go.micro.srv.user.SaveUserPreferenceResponse.Data")
	proto.RegisterType((*ReadUserPreferenceRequest)(nil), "go.micro.srv.user.ReadUserPreferenceRequest")
	proto.RegisterType((*ReadUserPreferenceResponse)(nil), "go.micro.srv.user.ReadUserPreferenceResponse")
	proto.RegisterType((*ReadUserPreferenceResponse_Data)(nil), "go.micro.srv.user.ReadUserPreferenceResponse.Data")
	proto.RegisterType((*ListUserFeedbackRequest)(nil), "go.micro.srv.user.ListUserFeedbackRequest")
	proto.RegisterType((*ListUserFeedbackResponse)(nil), "go.micro.srv.user.ListUserFeedbackResponse")
	proto.RegisterType((*ListUserFeedbackResponse_Data)(nil), "go.micro.srv.user.ListUserFeedbackResponse.Data")
	proto.RegisterType((*FilterUserRequest)(nil), "go.micro.srv.user.FilterUserRequest")
	proto.RegisterType((*FilterUserResponse)(nil), "go.micro.srv.user.FilterUserResponse")
	proto.RegisterType((*FilterUserResponse_Data)(nil), "go.micro.srv.user.FilterUserResponse.Data")
	proto.RegisterType((*SearchUserRequest)(nil), "go.micro.srv.user.SearchUserRequest")
	proto.RegisterType((*SearchUserResponse)(nil), "go.micro.srv.user.SearchUserResponse")
	proto.RegisterType((*SearchUserResponse_Data)(nil), "go.micro.srv.user.SearchUserResponse.Data")
	proto.RegisterType((*AutocompleteUserRequest)(nil), "go.micro.srv.user.AutocompleteUserRequest")
	proto.RegisterType((*AutocompleteUserResponse)(nil), "go.micro.srv.user.AutocompleteUserResponse")
	proto.RegisterType((*AutocompleteUserResponse_Data)(nil), "go.micro.srv.user.AutocompleteUserResponse.Data")
	proto.RegisterType((*AddMultipleMeasurementsRequest)(nil), "go.micro.srv.user.AddMultipleMeasurementsRequest")
	proto.RegisterType((*AddMultipleMeasurementsResponse)(nil), "go.micro.srv.user.AddMultipleMeasurementsResponse")
	proto.RegisterType((*AddMultipleMeasurementsResponse_Data)(nil), "go.micro.srv.user.AddMultipleMeasurementsResponse.Data")
	proto.RegisterType((*GetAllMeasurementsHistoryRequest)(nil), "go.micro.srv.user.GetAllMeasurementsHistoryRequest")
	proto.RegisterType((*GetAllMeasurementsHistoryResponse)(nil), "go.micro.srv.user.GetAllMeasurementsHistoryResponse")
	proto.RegisterType((*GetAllMeasurementsHistoryResponse_Data)(nil), "go.micro.srv.user.GetAllMeasurementsHistoryResponse.Data")
	proto.RegisterType((*GetMeasurementsHistoryRequest)(nil), "go.micro.srv.user.GetMeasurementsHistoryRequest")
	proto.RegisterType((*GetMeasurementsHistoryResponse)(nil), "go.micro.srv.user.GetMeasurementsHistoryResponse")
	proto.RegisterType((*GetMeasurementsHistoryResponse_Data)(nil), "go.micro.srv.user.GetMeasurementsHistoryResponse.Data")
	proto.RegisterType((*GetAllTrackedMarkersRequest)(nil), "go.micro.srv.user.GetAllTrackedMarkersRequest")
	proto.RegisterType((*GetAllTrackedMarkersResponse)(nil), "go.micro.srv.user.GetAllTrackedMarkersResponse")
	proto.RegisterType((*GetAllTrackedMarkersResponse_Data)(nil), "go.micro.srv.user.GetAllTrackedMarkersResponse.Data")
	proto.RegisterType((*ReadAccountTokenRequest)(nil), "go.micro.srv.user.ReadAccountTokenRequest")
	proto.RegisterType((*ReadAccountTokenResponse)(nil), "go.micro.srv.user.ReadAccountTokenResponse")
	proto.RegisterType((*GetSharedResourcesRequest)(nil), "go.micro.srv.user.GetSharedResourcesRequest")
	proto.RegisterType((*GetSharedResourcesResponse)(nil), "go.micro.srv.user.GetSharedResourcesResponse")
	proto.RegisterType((*GetSharedResourcesResponse_Data)(nil), "go.micro.srv.user.GetSharedResourcesResponse.Data")
	proto.RegisterType((*GetShareableResourcesRequest)(nil), "go.micro.srv.user.GetShareableResourcesRequest")
	proto.RegisterType((*GetShareableResourcesResponse)(nil), "go.micro.srv.user.GetShareableResourcesResponse")
	proto.RegisterType((*GetShareableResourcesResponse_Data)(nil), "go.micro.srv.user.GetShareableResourcesResponse.Data")
	proto.RegisterType((*SharedResourcesResponse)(nil), "go.micro.srv.user.SharedResourcesResponse")
	proto.RegisterType((*GoalResponse)(nil), "go.micro.srv.user.GoalResponse")
	proto.RegisterType((*AllGoalResponseRequest)(nil), "go.micro.srv.user.AllGoalResponseRequest")
	proto.RegisterType((*AllGoalResponseResponse)(nil), "go.micro.srv.user.AllGoalResponseResponse")
	proto.RegisterType((*AllGoalResponseResponse_Data)(nil), "go.micro.srv.user.AllGoalResponseResponse.Data")
	proto.RegisterType((*ChallengeResponse)(nil), "go.micro.srv.user.ChallengeResponse")
	proto.RegisterType((*AllChallengeResponseRequest)(nil), "go.micro.srv.user.AllChallengeResponseRequest")
	proto.RegisterType((*AllChallengeResponseResponse)(nil), "go.micro.srv.user.AllChallengeResponseResponse")
	proto.RegisterType((*AllChallengeResponseResponse_Data)(nil), "go.micro.srv.user.AllChallengeResponseResponse.Data")
	proto.RegisterType((*HabitResponse)(nil), "go.micro.srv.user.HabitResponse")
	proto.RegisterType((*AllHabitResponseRequest)(nil), "go.micro.srv.user.AllHabitResponseRequest")
	proto.RegisterType((*AllHabitResponseResponse)(nil), "go.micro.srv.user.AllHabitResponseResponse")
	proto.RegisterType((*AllHabitResponseResponse_Data)(nil), "go.micro.srv.user.AllHabitResponseResponse.Data")
	proto.RegisterType((*ShareResourcesRequest)(nil), "go.micro.srv.user.ShareResourcesRequest")
	proto.RegisterType((*ShareResourcesRequest_Resource)(nil), "go.micro.srv.user.ShareResourcesRequest.Resource")
	proto.RegisterType((*ShareMultipleResourcesRequest)(nil), "go.micro.srv.user.ShareMultipleResourcesRequest")
	proto.RegisterType((*ShareMultipleResourcesRequest_Resource)(nil), "go.micro.srv.user.ShareMultipleResourcesRequest.Resource")
	proto.RegisterType((*ShareResourcesResponse)(nil), "go.micro.srv.user.ShareResourcesResponse")
	proto.RegisterType((*ShareResource)(nil), "go.micro.srv.user.ShareResource")
	proto.RegisterType((*ShareableSurvey)(nil), "go.micro.srv.user.ShareableSurvey")
	proto.RegisterType((*GetShareableSurveyRequest)(nil), "go.micro.srv.user.GetShareableSurveyRequest")
	proto.RegisterType((*GetShareableSurveyResponse)(nil), "go.micro.srv.user.GetShareableSurveyResponse")
	proto.RegisterType((*GetShareableSurveyResponse_Data)(nil), "go.micro.srv.user.GetShareableSurveyResponse.Data")
	proto.RegisterType((*ShareableContent)(nil), "go.micro.srv.user.ShareableContent")
	proto.RegisterType((*GetShareableContentRequest)(nil), "go.micro.srv.user.GetShareableContentRequest")
	proto.RegisterType((*GetShareableContentResponse)(nil), "go.micro.srv.user.GetShareableContentResponse")
	proto.RegisterType((*GetShareableContentResponse_Data)(nil), "go.micro.srv.user.GetShareableContentResponse.Data")
	proto.RegisterType((*User)(nil), "go.micro.srv.user.User")
	proto.RegisterType((*Token)(nil), "go.micro.srv.user.Token")
	proto.RegisterType((*ContactDetail)(nil), "go.micro.srv.user.ContactDetail")
	proto.RegisterType((*Preferences)(nil), "go.micro.srv.user.Preferences")
	proto.RegisterType((*Measurement)(nil), "go.micro.srv.user.Measurement")
	proto.RegisterType((*PreferencesMessage)(nil), "go.micro.srv.user.PreferencesMessage")
	proto.RegisterType((*UserFeedback)(nil), "go.micro.srv.user.UserFeedback")
	proto.RegisterType((*SearchResponse)(nil), "go.micro.srv.user.SearchResponse")
	proto.RegisterType((*UserMeasurementEdge)(nil), "go.micro.srv.user.UserMeasurementEdge")
	proto.RegisterEnum("go.micro.srv.user.ContactDetailType", ContactDetailType_name, ContactDetailType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for UserService service

type UserServiceClient interface {
	All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Filter(ctx context.Context, in *FilterRequest, opts ...client.CallOption) (*FilterResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	UpdateTokens(ctx context.Context, in *UpdateTokenRequest, opts ...client.CallOption) (*UpdateTokenResponse, error)
	ReadByAccount(ctx context.Context, in *ReadByAccountRequest, opts ...client.CallOption) (*ReadByAccountResponse, error)
	ReadTokens(ctx context.Context, in *ReadTokensRequest, opts ...client.CallOption) (*ReadTokensResponse, error)
	SaveUserPreference(ctx context.Context, in *SaveUserPreferenceRequest, opts ...client.CallOption) (*SaveUserPreferenceResponse, error)
	ReadUserPreference(ctx context.Context, in *ReadUserPreferenceRequest, opts ...client.CallOption) (*ReadUserPreferenceResponse, error)
	ListUserFeedback(ctx context.Context, in *ListUserFeedbackRequest, opts ...client.CallOption) (*ListUserFeedbackResponse, error)
	FilterUser(ctx context.Context, in *FilterUserRequest, opts ...client.CallOption) (*FilterUserResponse, error)
	SearchUser(ctx context.Context, in *SearchUserRequest, opts ...client.CallOption) (*SearchUserResponse, error)
	AutocompleteUser(ctx context.Context, in *AutocompleteUserRequest, opts ...client.CallOption) (*AutocompleteUserResponse, error)
	SetAccountStatus(ctx context.Context, in *go_micro_srv_account.SetAccountStatusRequest, opts ...client.CallOption) (*go_micro_srv_account.SetAccountStatusResponse, error)
	GetAccountStatus(ctx context.Context, in *go_micro_srv_account.GetAccountStatusRequest, opts ...client.CallOption) (*go_micro_srv_account.GetAccountStatusResponse, error)
	ResetUserPassword(ctx context.Context, in *go_micro_srv_account.ResetUserPasswordRequest, opts ...client.CallOption) (*go_micro_srv_account.ResetUserPasswordResponse, error)
	AddMultipleMeasurements(ctx context.Context, in *AddMultipleMeasurementsRequest, opts ...client.CallOption) (*AddMultipleMeasurementsResponse, error)
	GetAllMeasurementsHistory(ctx context.Context, in *GetAllMeasurementsHistoryRequest, opts ...client.CallOption) (*GetAllMeasurementsHistoryResponse, error)
	GetMeasurementsHistory(ctx context.Context, in *GetMeasurementsHistoryRequest, opts ...client.CallOption) (*GetMeasurementsHistoryResponse, error)
	GetAllTrackedMarkers(ctx context.Context, in *GetAllTrackedMarkersRequest, opts ...client.CallOption) (*GetAllTrackedMarkersResponse, error)
	GetSharedResources(ctx context.Context, in *GetSharedResourcesRequest, opts ...client.CallOption) (*GetSharedResourcesResponse, error)
	GetAllShareableResources(ctx context.Context, in *GetShareableResourcesRequest, opts ...client.CallOption) (*GetShareableResourcesResponse, error)
	ShareResources(ctx context.Context, in *ShareResourcesRequest, opts ...client.CallOption) (*ShareResourcesResponse, error)
	ShareMultipleResources(ctx context.Context, in *ShareMultipleResourcesRequest, opts ...client.CallOption) (*ShareResourcesResponse, error)
}

type userServiceClient struct {
	c           client.Client
	serviceName string
}

func NewUserServiceClient(serviceName string, c client.Client) UserServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.user"
	}
	return &userServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userServiceClient) All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.All", in)
	out := new(AllResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Filter(ctx context.Context, in *FilterRequest, opts ...client.CallOption) (*FilterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Filter", in)
	out := new(FilterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateTokens(ctx context.Context, in *UpdateTokenRequest, opts ...client.CallOption) (*UpdateTokenResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.UpdateTokens", in)
	out := new(UpdateTokenResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ReadByAccount(ctx context.Context, in *ReadByAccountRequest, opts ...client.CallOption) (*ReadByAccountResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ReadByAccount", in)
	out := new(ReadByAccountResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ReadTokens(ctx context.Context, in *ReadTokensRequest, opts ...client.CallOption) (*ReadTokensResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ReadTokens", in)
	out := new(ReadTokensResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SaveUserPreference(ctx context.Context, in *SaveUserPreferenceRequest, opts ...client.CallOption) (*SaveUserPreferenceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.SaveUserPreference", in)
	out := new(SaveUserPreferenceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ReadUserPreference(ctx context.Context, in *ReadUserPreferenceRequest, opts ...client.CallOption) (*ReadUserPreferenceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ReadUserPreference", in)
	out := new(ReadUserPreferenceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListUserFeedback(ctx context.Context, in *ListUserFeedbackRequest, opts ...client.CallOption) (*ListUserFeedbackResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ListUserFeedback", in)
	out := new(ListUserFeedbackResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FilterUser(ctx context.Context, in *FilterUserRequest, opts ...client.CallOption) (*FilterUserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.FilterUser", in)
	out := new(FilterUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SearchUser(ctx context.Context, in *SearchUserRequest, opts ...client.CallOption) (*SearchUserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.SearchUser", in)
	out := new(SearchUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AutocompleteUser(ctx context.Context, in *AutocompleteUserRequest, opts ...client.CallOption) (*AutocompleteUserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.AutocompleteUser", in)
	out := new(AutocompleteUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SetAccountStatus(ctx context.Context, in *go_micro_srv_account.SetAccountStatusRequest, opts ...client.CallOption) (*go_micro_srv_account.SetAccountStatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.SetAccountStatus", in)
	out := new(go_micro_srv_account.SetAccountStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetAccountStatus(ctx context.Context, in *go_micro_srv_account.GetAccountStatusRequest, opts ...client.CallOption) (*go_micro_srv_account.GetAccountStatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetAccountStatus", in)
	out := new(go_micro_srv_account.GetAccountStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ResetUserPassword(ctx context.Context, in *go_micro_srv_account.ResetUserPasswordRequest, opts ...client.CallOption) (*go_micro_srv_account.ResetUserPasswordResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ResetUserPassword", in)
	out := new(go_micro_srv_account.ResetUserPasswordResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddMultipleMeasurements(ctx context.Context, in *AddMultipleMeasurementsRequest, opts ...client.CallOption) (*AddMultipleMeasurementsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.AddMultipleMeasurements", in)
	out := new(AddMultipleMeasurementsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetAllMeasurementsHistory(ctx context.Context, in *GetAllMeasurementsHistoryRequest, opts ...client.CallOption) (*GetAllMeasurementsHistoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetAllMeasurementsHistory", in)
	out := new(GetAllMeasurementsHistoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetMeasurementsHistory(ctx context.Context, in *GetMeasurementsHistoryRequest, opts ...client.CallOption) (*GetMeasurementsHistoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetMeasurementsHistory", in)
	out := new(GetMeasurementsHistoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetAllTrackedMarkers(ctx context.Context, in *GetAllTrackedMarkersRequest, opts ...client.CallOption) (*GetAllTrackedMarkersResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetAllTrackedMarkers", in)
	out := new(GetAllTrackedMarkersResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetSharedResources(ctx context.Context, in *GetSharedResourcesRequest, opts ...client.CallOption) (*GetSharedResourcesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetSharedResources", in)
	out := new(GetSharedResourcesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetAllShareableResources(ctx context.Context, in *GetShareableResourcesRequest, opts ...client.CallOption) (*GetShareableResourcesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetAllShareableResources", in)
	out := new(GetShareableResourcesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ShareResources(ctx context.Context, in *ShareResourcesRequest, opts ...client.CallOption) (*ShareResourcesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ShareResources", in)
	out := new(ShareResourcesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ShareMultipleResources(ctx context.Context, in *ShareMultipleResourcesRequest, opts ...client.CallOption) (*ShareResourcesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.ShareMultipleResources", in)
	out := new(ShareResourcesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceHandler interface {
	All(context.Context, *AllRequest, *AllResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Filter(context.Context, *FilterRequest, *FilterResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	UpdateTokens(context.Context, *UpdateTokenRequest, *UpdateTokenResponse) error
	ReadByAccount(context.Context, *ReadByAccountRequest, *ReadByAccountResponse) error
	ReadTokens(context.Context, *ReadTokensRequest, *ReadTokensResponse) error
	SaveUserPreference(context.Context, *SaveUserPreferenceRequest, *SaveUserPreferenceResponse) error
	ReadUserPreference(context.Context, *ReadUserPreferenceRequest, *ReadUserPreferenceResponse) error
	ListUserFeedback(context.Context, *ListUserFeedbackRequest, *ListUserFeedbackResponse) error
	FilterUser(context.Context, *FilterUserRequest, *FilterUserResponse) error
	SearchUser(context.Context, *SearchUserRequest, *SearchUserResponse) error
	AutocompleteUser(context.Context, *AutocompleteUserRequest, *AutocompleteUserResponse) error
	SetAccountStatus(context.Context, *go_micro_srv_account.SetAccountStatusRequest, *go_micro_srv_account.SetAccountStatusResponse) error
	GetAccountStatus(context.Context, *go_micro_srv_account.GetAccountStatusRequest, *go_micro_srv_account.GetAccountStatusResponse) error
	ResetUserPassword(context.Context, *go_micro_srv_account.ResetUserPasswordRequest, *go_micro_srv_account.ResetUserPasswordResponse) error
	AddMultipleMeasurements(context.Context, *AddMultipleMeasurementsRequest, *AddMultipleMeasurementsResponse) error
	GetAllMeasurementsHistory(context.Context, *GetAllMeasurementsHistoryRequest, *GetAllMeasurementsHistoryResponse) error
	GetMeasurementsHistory(context.Context, *GetMeasurementsHistoryRequest, *GetMeasurementsHistoryResponse) error
	GetAllTrackedMarkers(context.Context, *GetAllTrackedMarkersRequest, *GetAllTrackedMarkersResponse) error
	GetSharedResources(context.Context, *GetSharedResourcesRequest, *GetSharedResourcesResponse) error
	GetAllShareableResources(context.Context, *GetShareableResourcesRequest, *GetShareableResourcesResponse) error
	ShareResources(context.Context, *ShareResourcesRequest, *ShareResourcesResponse) error
	ShareMultipleResources(context.Context, *ShareMultipleResourcesRequest, *ShareResourcesResponse) error
}

func RegisterUserServiceHandler(s server.Server, hdlr UserServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&UserService{hdlr}, opts...))
}

type UserService struct {
	UserServiceHandler
}

func (h *UserService) All(ctx context.Context, in *AllRequest, out *AllResponse) error {
	return h.UserServiceHandler.All(ctx, in, out)
}

func (h *UserService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.UserServiceHandler.Create(ctx, in, out)
}

func (h *UserService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.UserServiceHandler.Update(ctx, in, out)
}

func (h *UserService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.UserServiceHandler.Read(ctx, in, out)
}

func (h *UserService) Filter(ctx context.Context, in *FilterRequest, out *FilterResponse) error {
	return h.UserServiceHandler.Filter(ctx, in, out)
}

func (h *UserService) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.UserServiceHandler.Delete(ctx, in, out)
}

func (h *UserService) UpdateTokens(ctx context.Context, in *UpdateTokenRequest, out *UpdateTokenResponse) error {
	return h.UserServiceHandler.UpdateTokens(ctx, in, out)
}

func (h *UserService) ReadByAccount(ctx context.Context, in *ReadByAccountRequest, out *ReadByAccountResponse) error {
	return h.UserServiceHandler.ReadByAccount(ctx, in, out)
}

func (h *UserService) ReadTokens(ctx context.Context, in *ReadTokensRequest, out *ReadTokensResponse) error {
	return h.UserServiceHandler.ReadTokens(ctx, in, out)
}

func (h *UserService) SaveUserPreference(ctx context.Context, in *SaveUserPreferenceRequest, out *SaveUserPreferenceResponse) error {
	return h.UserServiceHandler.SaveUserPreference(ctx, in, out)
}

func (h *UserService) ReadUserPreference(ctx context.Context, in *ReadUserPreferenceRequest, out *ReadUserPreferenceResponse) error {
	return h.UserServiceHandler.ReadUserPreference(ctx, in, out)
}

func (h *UserService) ListUserFeedback(ctx context.Context, in *ListUserFeedbackRequest, out *ListUserFeedbackResponse) error {
	return h.UserServiceHandler.ListUserFeedback(ctx, in, out)
}

func (h *UserService) FilterUser(ctx context.Context, in *FilterUserRequest, out *FilterUserResponse) error {
	return h.UserServiceHandler.FilterUser(ctx, in, out)
}

func (h *UserService) SearchUser(ctx context.Context, in *SearchUserRequest, out *SearchUserResponse) error {
	return h.UserServiceHandler.SearchUser(ctx, in, out)
}

func (h *UserService) AutocompleteUser(ctx context.Context, in *AutocompleteUserRequest, out *AutocompleteUserResponse) error {
	return h.UserServiceHandler.AutocompleteUser(ctx, in, out)
}

func (h *UserService) SetAccountStatus(ctx context.Context, in *go_micro_srv_account.SetAccountStatusRequest, out *go_micro_srv_account.SetAccountStatusResponse) error {
	return h.UserServiceHandler.SetAccountStatus(ctx, in, out)
}

func (h *UserService) GetAccountStatus(ctx context.Context, in *go_micro_srv_account.GetAccountStatusRequest, out *go_micro_srv_account.GetAccountStatusResponse) error {
	return h.UserServiceHandler.GetAccountStatus(ctx, in, out)
}

func (h *UserService) ResetUserPassword(ctx context.Context, in *go_micro_srv_account.ResetUserPasswordRequest, out *go_micro_srv_account.ResetUserPasswordResponse) error {
	return h.UserServiceHandler.ResetUserPassword(ctx, in, out)
}

func (h *UserService) AddMultipleMeasurements(ctx context.Context, in *AddMultipleMeasurementsRequest, out *AddMultipleMeasurementsResponse) error {
	return h.UserServiceHandler.AddMultipleMeasurements(ctx, in, out)
}

func (h *UserService) GetAllMeasurementsHistory(ctx context.Context, in *GetAllMeasurementsHistoryRequest, out *GetAllMeasurementsHistoryResponse) error {
	return h.UserServiceHandler.GetAllMeasurementsHistory(ctx, in, out)
}

func (h *UserService) GetMeasurementsHistory(ctx context.Context, in *GetMeasurementsHistoryRequest, out *GetMeasurementsHistoryResponse) error {
	return h.UserServiceHandler.GetMeasurementsHistory(ctx, in, out)
}

func (h *UserService) GetAllTrackedMarkers(ctx context.Context, in *GetAllTrackedMarkersRequest, out *GetAllTrackedMarkersResponse) error {
	return h.UserServiceHandler.GetAllTrackedMarkers(ctx, in, out)
}

func (h *UserService) GetSharedResources(ctx context.Context, in *GetSharedResourcesRequest, out *GetSharedResourcesResponse) error {
	return h.UserServiceHandler.GetSharedResources(ctx, in, out)
}

func (h *UserService) GetAllShareableResources(ctx context.Context, in *GetShareableResourcesRequest, out *GetShareableResourcesResponse) error {
	return h.UserServiceHandler.GetAllShareableResources(ctx, in, out)
}

func (h *UserService) ShareResources(ctx context.Context, in *ShareResourcesRequest, out *ShareResourcesResponse) error {
	return h.UserServiceHandler.ShareResources(ctx, in, out)
}

func (h *UserService) ShareMultipleResources(ctx context.Context, in *ShareMultipleResourcesRequest, out *ShareResourcesResponse) error {
	return h.UserServiceHandler.ShareMultipleResources(ctx, in, out)
}

func init() { proto.RegisterFile("server/user-srv/proto/user/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 3585 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3b, 0xcd, 0x6f, 0x1b, 0xc7,
	0xf5, 0x5a, 0x7e, 0xf3, 0x51, 0x92, 0xa5, 0xb1, 0x6c, 0xd1, 0xf4, 0x97, 0xbc, 0xb1, 0xfd, 0x53,
	0xe2, 0x98, 0xf2, 0xe7, 0xcf, 0x4e, 0xea, 0x38, 0x95, 0x2d, 0x4b, 0x56, 0x6a, 0xc5, 0xc6, 0xda,
	0x0e, 0x0a, 0x14, 0x85, 0xb0, 0xe2, 0x8e, 0xa8, 0x85, 0x97, 0x5c, 0x66, 0x77, 0xa8, 0x94, 0xa7,
	0x02, 0x69, 0x81, 0xf6, 0xdc, 0x1c, 0x82, 0xb4, 0xd7, 0xb6, 0xb7, 0x1e, 0x8a, 0xa2, 0x45, 0x6f,
	0x3d, 0x16, 0x45, 0x51, 0x20, 0x45, 0x51, 0xa0, 0x29, 0xfa, 0x71, 0x29, 0x82, 0xa2, 0x68, 0x0f,
	0xfd, 0x0f, 0x8a, 0x9d, 0x8f, 0xe5, 0x2c, 0x77, 0x96, 0x5a, 0xd2, 0x8a, 0x9d, 0x20, 0xb9, 0x48,
	0x9c, 0xd9, 0xf7, 0x31, 0xf3, 0xde, 0x9b, 0x37, 0xef, 0xcd, 0xbc, 0x81, 0x33, 0x3e, 0xf6, 0x76,
	0xb1, 0xb7, 0xd4, 0xf5, 0xb1, 0x77, 0xde, 0xf7, 0x76, 0x97, 0x3a, 0x9e, 0x4b, 0x5c, 0xda, 0xa4,
	0x7f, 0xea, 0xb4, 0x8d, 0x66, 0x9b, 0x6e, 0xbd, 0x65, 0x37, 0x3c, 0xb7, 0xee, 0x7b, 0xbb, 0xf5,
	0xe0, 0x43, 0xed, 0x48, 0xd3, 0x75, 0x9b, 0x0e, 0x66, 0x08, 0x5b, 0xdd, 0xed, 0x25, 0xb3, 0xdd,
	0x63, 0xd0, 0xb5, 0xab, 0x4d, 0x9b, 0xec, 0x74, 0xb7, 0xea, 0x0d, 0xb7, 0xb5, 0xd4, 0x74, 0x1d,
	0xb3, 0xdd, 0xec, 0x43, 0x75, 0x48, 0xaf, 0x83, 0xfd, 0x25, 0x9f, 0x78, 0xdd, 0x06, 0xe1, 0xff,
	0x38, 0xda, 0x39, 0x3e, 0x16, 0x9f, 0x98, 0xc4, 0x6e, 0x48, 0xa3, 0x61, 0x1d, 0xfc, 0x1f, 0x07,
	0xae, 0x73, 0x60, 0xb3, 0xd1, 0x70, 0xbb, 0x6d, 0x22, 0x41, 0xf3, 0x1e, 0xf1, 0x9f, 0xc1, 0xeb,
	0xd7, 0xa0, 0xf4, 0xd8, 0xc7, 0xde, 0x8a, 0x49, 0x4c, 0x74, 0x0e, 0x72, 0xc1, 0x14, 0xaa, 0xda,
	0x82, 0xb6, 0x58, 0xb9, 0x34, 0x5f, 0x8f, 0x4d, 0xae, 0x1e, 0x80, 0x1a, 0x14, 0x48, 0xbf, 0x01,
	0x95, 0xa0, 0xb5, 0xec, 0x31, 0xdc, 0xf3, 0x90, 0x0f, 0xba, 0xfd, 0xaa, 0xb6, 0x90, 0x1d, 0x86,
	0xcc, 0xa0, 0xf4, 0x2e, 0x4c, 0x05, 0xcd, 0x47, 0xee, 0x13, 0xdc, 0x1e, 0x99, 0x37, 0xba, 0x06,
	0x45, 0x3e, 0x8b, 0x6a, 0x86, 0xc2, 0x1f, 0x8f, 0xc2, 0x8b, 0x29, 0x2e, 0xb3, 0xff, 0x86, 0x80,
	0xd6, 0x7f, 0xa9, 0x01, 0x2c, 0x3b, 0x8e, 0x81, 0xdf, 0xee, 0x62, 0x9f, 0xa0, 0x43, 0x50, 0x70,
	0xbd, 0xe6, 0xa6, 0x6d, 0x51, 0xb6, 0x65, 0x23, 0xef, 0x7a, 0xcd, 0x75, 0x0b, 0xcd, 0x43, 0x91,
	0x60, 0xb3, 0x15, 0xf4, 0x67, 0x68, 0x7f, 0x21, 0x68, 0xae, 0x5b, 0xe8, 0x30, 0x14, 0xdc, 0xed,
	0x6d, 0x1f, 0x93, 0x6a, 0x76, 0x41, 0x5b, 0xcc, 0x1a, 0xbc, 0x85, 0xe6, 0x20, 0xef, 0xd8, 0x2d,
	0x9b, 0x54, 0x73, 0xb4, 0x9b, 0x35, 0xd0, 0x19, 0x98, 0xf6, 0x5d, 0x8f, 0x6c, 0x76, 0x4c, 0xcf,
	0x6c, 0x61, 0x82, 0xbd, 0x6a, 0x9e, 0x52, 0x9b, 0x0a, 0x7a, 0x1f, 0x88, 0xce, 0x10, 0xcc, 0xb2,
	0x3d, 0xdc, 0x20, 0xb6, 0xdb, 0xae, 0x16, 0xfa, 0x60, 0x2b, 0xa2, 0x53, 0x77, 0xa1, 0x42, 0x47,
	0xee, 0x77, 0xdc, 0xb6, 0x8f, 0xd1, 0x25, 0xc8, 0x59, 0x26, 0x31, 0xb9, 0xbc, 0x4e, 0x24, 0xc8,
	0x8b, 0x6b, 0xc7, 0xa0, 0xb0, 0x08, 0x41, 0xae, 0xe1, 0x5a, 0x98, 0x4e, 0x2a, 0x6b, 0xd0, 0xdf,
	0xa8, 0x0a, 0xc5, 0x16, 0xf6, 0x7d, 0xb3, 0x89, 0xe9, 0x9c, 0xca, 0x86, 0x68, 0xea, 0x3f, 0xd2,
	0x60, 0xea, 0xb6, 0x87, 0x4d, 0x82, 0x85, 0xb8, 0x9e, 0x89, 0x8e, 0x24, 0xa5, 0x64, 0x13, 0x94,
	0x92, 0x93, 0x95, 0xa2, 0x13, 0x98, 0x16, 0xc3, 0xe4, 0xb2, 0xb9, 0x12, 0x91, 0xcd, 0x42, 0xc2,
	0x38, 0x43, 0xdb, 0x1b, 0x4b, 0x3a, 0x6f, 0x41, 0xc5, 0xc0, 0xa6, 0x25, 0x44, 0x33, 0x0f, 0xc5,
	0x80, 0x70, 0xdf, 0x94, 0x0a, 0x41, 0x73, 0xdd, 0x92, 0x66, 0x93, 0x49, 0x98, 0x4d, 0x36, 0x32,
	0x9b, 0x16, 0x4c, 0x32, 0xba, 0x7c, 0x2e, 0x4b, 0x91, 0xb9, 0x1c, 0x4d, 0x98, 0xcb, 0xd8, 0xd3,
	0x70, 0x60, 0xea, 0x71, 0xc7, 0x1a, 0x57, 0xc7, 0xa3, 0x4e, 0xce, 0x85, 0x69, 0xc1, 0xed, 0xd9,
	0x4c, 0xef, 0xf7, 0x1a, 0x4c, 0xad, 0xda, 0x0e, 0xc1, 0xde, 0x67, 0x70, 0xc9, 0x07, 0x3c, 0x98,
	0x4f, 0x2d, 0x2e, 0x64, 0x83, 0xa1, 0x32, 0xd7, 0xe9, 0xc1, 0xb4, 0x98, 0xd2, 0x33, 0xf3, 0x05,
	0x5f, 0x85, 0xa9, 0x15, 0xec, 0xe0, 0xbe, 0x99, 0xec, 0x9b, 0xbd, 0xdf, 0x84, 0x69, 0x41, 0x99,
	0xcf, 0x46, 0x8c, 0x4c, 0x53, 0x8f, 0x2c, 0x13, 0x1d, 0xd9, 0xef, 0x34, 0x40, 0xcc, 0xa6, 0xe8,
	0x7a, 0xde, 0x73, 0x7c, 0xeb, 0x50, 0x20, 0x01, 0xa0, 0x5f, 0xcd, 0xd0, 0x8d, 0xea, 0xa2, 0x4a,
	0x5a, 0x31, 0x7a, 0x75, 0xda, 0xf0, 0xef, 0xb4, 0x89, 0xd7, 0x33, 0x38, 0x81, 0xda, 0x43, 0xa8,
	0x48, 0xdd, 0x68, 0x06, 0xb2, 0x4f, 0x70, 0x8f, 0xb3, 0x0b, 0x7e, 0xa2, 0x3a, 0xe4, 0x77, 0x4d,
	0xa7, 0x8b, 0xb9, 0x03, 0xac, 0x2a, 0x58, 0x31, 0x26, 0x0c, 0xec, 0xd5, 0xcc, 0x75, 0x4d, 0x3f,
	0x04, 0x07, 0x23, 0xec, 0x99, 0x50, 0xf4, 0xab, 0x30, 0x17, 0xb8, 0x85, 0x5b, 0x3d, 0xe1, 0x2e,
	0xf9, 0x3c, 0x8f, 0x03, 0x70, 0xbf, 0xd9, 0x9f, 0x6a, 0x99, 0xf7, 0xac, 0x5b, 0xfa, 0x2e, 0x1c,
	0x1a, 0x40, 0x7b, 0x36, 0xeb, 0xae, 0x0e, 0xb3, 0x01, 0x5f, 0x26, 0x1e, 0x31, 0xd6, 0x23, 0x50,
	0xe2, 0x3a, 0x61, 0x51, 0x42, 0xd9, 0x28, 0x32, 0xa5, 0xf8, 0xfa, 0x2a, 0x20, 0x19, 0x9e, 0x0f,
	0xf2, 0x42, 0xa8, 0x2b, 0x16, 0x54, 0x24, 0x0b, 0x90, 0xc3, 0xe9, 0x3f, 0xd4, 0xe0, 0xc8, 0x43,
	0x73, 0x17, 0x07, 0x83, 0x7f, 0xe0, 0xe1, 0x6d, 0xec, 0xe1, 0x76, 0x23, 0x34, 0xda, 0x9b, 0x00,
	0x9d, 0xb0, 0x73, 0xc8, 0x6a, 0xe9, 0x63, 0xfa, 0x86, 0x84, 0x21, 0x1b, 0x55, 0x26, 0xc1, 0xe8,
	0xd3, 0x6d, 0x59, 0x7f, 0xd6, 0xa0, 0xa6, 0x1a, 0x26, 0x9f, 0xf7, 0x6a, 0x44, 0x39, 0x97, 0x14,
	0x23, 0x4c, 0x46, 0xae, 0x8f, 0xab, 0xb3, 0xda, 0x2a, 0xe4, 0x68, 0x24, 0xf6, 0x94, 0x52, 0xd2,
	0x2d, 0x38, 0x12, 0xe8, 0x52, 0xad, 0x82, 0x7d, 0xf3, 0x1b, 0x81, 0x08, 0x55, 0x6c, 0x52, 0x8b,
	0x30, 0x19, 0xf9, 0xf9, 0x8b, 0x70, 0x0b, 0xe6, 0xef, 0xd9, 0x3e, 0x09, 0x86, 0xb7, 0x8a, 0xb1,
	0xb5, 0x65, 0x36, 0x9e, 0xec, 0xbb, 0x00, 0xff, 0xa8, 0x41, 0x35, 0xce, 0x84, 0x8b, 0x6f, 0x25,
	0x22, 0xbe, 0x0b, 0x8a, 0xa1, 0x27, 0xa1, 0x8e, 0x2f, 0xbc, 0x3b, 0x5c, 0x78, 0xaf, 0x41, 0x79,
	0x9b, 0x13, 0x15, 0x0b, 0xff, 0x64, 0x82, 0x7f, 0x0a, 0x99, 0xf7, 0x31, 0xf4, 0x0f, 0x33, 0x30,
	0xcb, 0xf6, 0x47, 0x1a, 0xa8, 0x70, 0xb1, 0x21, 0xc8, 0x11, 0xb3, 0x29, 0xfc, 0x0e, 0xfd, 0x3d,
	0xa0, 0xa5, 0xcc, 0xc8, 0xee, 0xe0, 0x4b, 0x50, 0x08, 0x52, 0xaf, 0xae, 0x4f, 0x67, 0x32, 0x7d,
	0xe9, 0x85, 0xa1, 0x01, 0xee, 0x43, 0x0a, 0x6a, 0x70, 0x14, 0x49, 0x5d, 0xb9, 0x04, 0x75, 0xe5,
	0x13, 0xe2, 0x90, 0x82, 0x3a, 0x0e, 0x29, 0x0e, 0x8f, 0x43, 0x4a, 0xe9, 0xe2, 0x90, 0xb2, 0x2a,
	0xf5, 0xf8, 0x8d, 0x06, 0x48, 0x16, 0x29, 0x37, 0x92, 0x9b, 0x11, 0x23, 0x79, 0x49, 0x21, 0xb9,
	0x38, 0xd2, 0x7e, 0x98, 0x47, 0xc9, 0xe3, 0xc4, 0xb8, 0x75, 0x9c, 0x52, 0x39, 0x48, 0x6c, 0x7a,
	0x8d, 0x1d, 0xc1, 0xd5, 0x08, 0x51, 0xf4, 0x3f, 0x64, 0x60, 0x96, 0x7d, 0x94, 0xcd, 0xe3, 0x93,
	0x8d, 0x0a, 0x11, 0xe4, 0xda, 0x66, 0x0b, 0x73, 0x8d, 0xd2, 0xdf, 0xe8, 0x32, 0x14, 0x9a, 0xb8,
	0x6d, 0x61, 0x8f, 0xea, 0x73, 0x7a, 0x70, 0x0b, 0xe6, 0x39, 0xfd, 0x1a, 0x05, 0x31, 0x38, 0x68,
	0x10, 0x62, 0x58, 0xee, 0x16, 0x57, 0x75, 0xf0, 0x13, 0xbd, 0x0a, 0x65, 0xd3, 0xb2, 0x3c, 0xec,
	0xfb, 0xd8, 0xaf, 0x96, 0xa8, 0x38, 0x8e, 0x29, 0x29, 0x2d, 0x33, 0x28, 0xa3, 0x0f, 0x8e, 0xd6,
	0xe1, 0x40, 0xc3, 0x6d, 0x13, 0xb3, 0x41, 0x36, 0x2d, 0x4c, 0x4c, 0xdb, 0xf1, 0xab, 0x65, 0x4a,
	0x41, 0x95, 0x31, 0xdd, 0x66, 0x90, 0x2b, 0x14, 0xd0, 0x98, 0x6e, 0xc8, 0x4d, 0x9f, 0x5a, 0x88,
	0x2c, 0xd5, 0xd4, 0x16, 0x12, 0x47, 0x7a, 0xee, 0x16, 0xf2, 0x91, 0x06, 0xf3, 0xcb, 0x5d, 0xe2,
	0x36, 0xdc, 0x56, 0x27, 0x08, 0x4c, 0x07, 0xdc, 0x08, 0xd5, 0xa4, 0x26, 0x69, 0x72, 0x44, 0xc7,
	0x2b, 0xd9, 0x4e, 0x4e, 0x6d, 0x3b, 0xf9, 0xe1, 0x2b, 0xb9, 0x90, 0x6e, 0x25, 0x17, 0x55, 0x2b,
	0x39, 0x70, 0xfa, 0xf1, 0xb9, 0xa5, 0x76, 0xfa, 0x49, 0xa8, 0xcf, 0x5d, 0x67, 0x3f, 0xd1, 0xe0,
	0xc4, 0xb2, 0x65, 0x6d, 0x74, 0x1d, 0x62, 0x77, 0x1c, 0xbc, 0x81, 0x4d, 0xbf, 0xeb, 0xe1, 0x16,
	0x6e, 0x93, 0x30, 0xfa, 0xbc, 0x05, 0x93, 0x2d, 0xa9, 0x9b, 0x73, 0x51, 0xf9, 0x7b, 0x09, 0xdb,
	0x88, 0xe0, 0xec, 0x5f, 0x00, 0xf8, 0x4f, 0x0d, 0x4e, 0x26, 0x8e, 0x97, 0xab, 0xe3, 0x2b, 0x11,
	0x75, 0x5c, 0x53, 0xa9, 0x63, 0x38, 0x85, 0xf1, 0xb5, 0xf2, 0x06, 0xd7, 0xca, 0xad, 0x98, 0x56,
	0xce, 0x26, 0xec, 0xc4, 0x12, 0xff, 0x3b, 0x56, 0x53, 0x56, 0xcd, 0x07, 0x1a, 0x2c, 0xac, 0x61,
	0xb2, 0xec, 0x38, 0xf2, 0x18, 0xef, 0xda, 0x3e, 0x71, 0xbd, 0xde, 0xb8, 0x51, 0xcd, 0x68, 0xfe,
	0x37, 0x69, 0x53, 0xd5, 0xff, 0xad, 0xc1, 0xa9, 0x21, 0x63, 0xe3, 0x8a, 0xd8, 0x88, 0x28, 0xe2,
	0x15, 0x85, 0x04, 0xf6, 0xa4, 0xb1, 0x1f, 0xaa, 0x78, 0x6a, 0xf3, 0xd5, 0x7f, 0xa6, 0xc1, 0xf1,
	0x35, 0x4c, 0x3e, 0x75, 0x7a, 0x40, 0x47, 0xa1, 0xdc, 0x32, 0xbd, 0x27, 0x8c, 0x31, 0xf3, 0x6f,
	0x25, 0xd6, 0xb1, 0x6e, 0xe9, 0x1f, 0x6b, 0x70, 0x22, 0x69, 0xd4, 0x5c, 0x43, 0x6f, 0x44, 0x34,
	0xf4, 0xff, 0x6a, 0x0d, 0x7d, 0xea, 0xd5, 0xb3, 0x0d, 0x47, 0x99, 0x21, 0x3d, 0xf2, 0xcc, 0xc6,
	0x13, 0x6c, 0x6d, 0x50, 0x09, 0xf8, 0x9f, 0x44, 0xe4, 0x7f, 0x4c, 0xcd, 0x88, 0x8b, 0xf3, 0x6e,
	0x44, 0x9c, 0x57, 0x12, 0x0d, 0x5e, 0x8d, 0x3e, 0xbe, 0x30, 0x5f, 0xe3, 0xc2, 0xbc, 0x0a, 0x45,
	0xa6, 0x7d, 0x21, 0x47, 0x75, 0x70, 0xc4, 0xf8, 0x1a, 0x02, 0x56, 0xbf, 0x0e, 0xf3, 0x41, 0x52,
	0xc7, 0xe3, 0xed, 0xc8, 0x71, 0xd0, 0x1e, 0xc7, 0x24, 0x17, 0xa0, 0x1a, 0xc7, 0xe4, 0xc2, 0x98,
	0x83, 0x3c, 0x3d, 0x5c, 0x10, 0x91, 0x21, 0x6d, 0xe8, 0xef, 0x65, 0xe0, 0xc8, 0x1a, 0x26, 0x0f,
	0x77, 0x4c, 0x0f, 0x5b, 0x06, 0xf6, 0xdd, 0xae, 0x17, 0xa4, 0x07, 0xfb, 0xac, 0x2a, 0x9a, 0xb6,
	0xf4, 0x3a, 0xb8, 0x9a, 0xe3, 0x69, 0x4b, 0xaf, 0x83, 0x83, 0xc5, 0xe2, 0x53, 0xb6, 0x9b, 0x5b,
	0xbd, 0x6a, 0x9e, 0x7e, 0x28, 0xb1, 0x8e, 0x5b, 0x3d, 0x74, 0x3d, 0xcc, 0x49, 0x0a, 0x0b, 0xd9,
	0xc5, 0xe9, 0xc1, 0x50, 0x8e, 0x4b, 0x8e, 0x0e, 0x7b, 0x20, 0x21, 0xe9, 0x2f, 0xe5, 0xa2, 0x7a,
	0x29, 0x97, 0xe4, 0xa5, 0x3c, 0x07, 0xf9, 0xb7, 0xbb, 0xd8, 0xeb, 0xf1, 0x84, 0x81, 0x35, 0xf4,
	0xff, 0x6a, 0x50, 0x53, 0x49, 0x25, 0x75, 0x52, 0x9e, 0x8c, 0x3c, 0xbe, 0x55, 0x7d, 0x9d, 0x5b,
	0xd5, 0x63, 0x98, 0xe1, 0x72, 0xf3, 0x04, 0x71, 0x6e, 0x5e, 0xca, 0xc0, 0x54, 0x3d, 0x0c, 0xe3,
	0x80, 0x1f, 0xfd, 0xa0, 0xff, 0x8d, 0xad, 0x26, 0x0a, 0x6f, 0x6e, 0x39, 0xf8, 0xd9, 0x1a, 0xc3,
	0x71, 0x80, 0x06, 0xbd, 0xfc, 0x90, 0xac, 0xa1, 0xcc, 0x7b, 0x6e, 0xf5, 0xf6, 0x45, 0xa9, 0xff,
	0x62, 0xbb, 0x86, 0x6a, 0x82, 0x5c, 0xaf, 0xeb, 0x11, 0xbd, 0x5e, 0x1d, 0xa2, 0x57, 0x25, 0xfe,
	0xf8, 0xaa, 0x7d, 0xc0, 0x55, 0x7b, 0x17, 0xca, 0x4f, 0xa3, 0xd3, 0x3e, 0xb2, 0xfe, 0x7e, 0x16,
	0xe6, 0x93, 0xcc, 0x77, 0x1a, 0x32, 0xa1, 0x0e, 0x33, 0x76, 0xa2, 0xfe, 0x4e, 0x42, 0x45, 0xd0,
	0xeb, 0xeb, 0x10, 0x44, 0xd7, 0xba, 0x15, 0x88, 0xd9, 0x6e, 0x05, 0xb3, 0xe1, 0x99, 0x3f, 0x6d,
	0x50, 0x3f, 0x63, 0x13, 0x47, 0x64, 0x89, 0xac, 0x11, 0xcc, 0xdd, 0xef, 0xb6, 0x5a, 0xa6, 0xd7,
	0xe3, 0xfb, 0xa2, 0x68, 0xa2, 0x2b, 0xb2, 0x1b, 0x28, 0x0e, 0xbf, 0xad, 0xe9, 0xfb, 0x87, 0x2a,
	0x14, 0x1b, 0x5d, 0xcf, 0xc3, 0x6d, 0xa1, 0x7a, 0xd1, 0x0c, 0x12, 0x52, 0x62, 0x7a, 0x4d, 0x4c,
	0xa8, 0xf6, 0x93, 0x7c, 0xee, 0x23, 0x0a, 0x62, 0x70, 0x50, 0x54, 0x83, 0x92, 0xd5, 0xf5, 0x4c,
	0x9a, 0x70, 0x00, 0xdb, 0xb7, 0x45, 0x3b, 0x98, 0x10, 0xbb, 0xfe, 0xab, 0x30, 0x1b, 0x63, 0xb7,
	0x7b, 0xc2, 0x88, 0x27, 0x59, 0x06, 0x45, 0x8d, 0xf8, 0x05, 0x98, 0x12, 0xe1, 0xe2, 0x26, 0xb1,
	0x5b, 0xb8, 0x3a, 0x45, 0x31, 0x26, 0x45, 0xe7, 0x23, 0xbb, 0x85, 0xf5, 0x77, 0x33, 0x30, 0xb9,
	0xe6, 0x9a, 0xce, 0xa8, 0xea, 0x08, 0xe5, 0x9a, 0x95, 0xe5, 0xaa, 0xd6, 0x81, 0x24, 0xed, 0x7c,
	0x54, 0xda, 0xf2, 0x44, 0x0b, 0x03, 0x13, 0xed, 0x4b, 0xae, 0x98, 0x5e, 0x72, 0x11, 0xf5, 0x95,
	0x52, 0xaa, 0x4f, 0xff, 0x5e, 0x06, 0x0e, 0x2f, 0x3b, 0x8e, 0x2c, 0x87, 0x71, 0x8f, 0x30, 0x42,
	0x17, 0x90, 0x95, 0x5d, 0x40, 0x52, 0x72, 0x2a, 0x39, 0xb1, 0x7c, 0xc4, 0x89, 0x45, 0x1d, 0x50,
	0x61, 0xd0, 0x01, 0x85, 0x2e, 0xa5, 0x28, 0xb9, 0x14, 0x45, 0xb6, 0x5a, 0x52, 0xdd, 0x7f, 0xc5,
	0x73, 0xdf, 0xb2, 0x22, 0xf7, 0xd5, 0x7f, 0x1b, 0x24, 0xec, 0x83, 0x42, 0xe1, 0x46, 0x72, 0x3b,
	0xe2, 0x9a, 0x96, 0x54, 0x49, 0x94, 0x1a, 0x73, 0x3f, 0xa2, 0x98, 0x7c, 0xd3, 0x35, 0x9d, 0x61,
	0x67, 0x98, 0x11, 0xc6, 0x0c, 0x5a, 0xff, 0x4e, 0x06, 0x66, 0x6f, 0xef, 0x98, 0x8e, 0x83, 0xdb,
	0x4d, 0xfc, 0xb9, 0x36, 0xf6, 0xf7, 0x33, 0x70, 0x74, 0xd9, 0x71, 0x62, 0xc2, 0xf8, 0xc2, 0xe2,
	0xff, 0xa1, 0xc1, 0x31, 0xb5, 0x64, 0x52, 0x47, 0xf0, 0xc3, 0xd0, 0xc7, 0xb7, 0xfd, 0x7b, 0xdc,
	0xf6, 0x57, 0x00, 0x1a, 0x82, 0xba, 0x58, 0x00, 0xa7, 0x55, 0xa7, 0x8a, 0xb1, 0x21, 0x48, 0x78,
	0xfa, 0xb7, 0x32, 0x30, 0x75, 0xd7, 0xdc, 0xb2, 0xc9, 0xe7, 0x7a, 0x19, 0xbc, 0x97, 0xa1, 0xee,
	0x2d, 0x22, 0x88, 0x2f, 0x96, 0xc0, 0x87, 0x1a, 0x54, 0xe3, 0x52, 0x49, 0x7f, 0x92, 0x99, 0x80,
	0x3a, 0xbe, 0xe9, 0x7f, 0x99, 0x9b, 0xfe, 0x75, 0x28, 0xec, 0x04, 0x94, 0x85, 0xd9, 0xab, 0x0e,
	0xd3, 0xa3, 0xac, 0x39, 0xbc, 0xfe, 0x71, 0x06, 0x0e, 0xd1, 0xd8, 0xf3, 0x93, 0x4b, 0x21, 0xee,
	0x41, 0x81, 0xda, 0x95, 0x4f, 0x93, 0x08, 0xb5, 0x67, 0x50, 0x0e, 0x81, 0xf5, 0x8a, 0x02, 0x08,
	0x46, 0xa3, 0xe6, 0x40, 0x45, 0xea, 0x56, 0x14, 0x40, 0xac, 0x45, 0x0b, 0x20, 0x2e, 0xa6, 0xe6,
	0x26, 0x3a, 0xa4, 0xca, 0x88, 0xda, 0x5d, 0x28, 0x89, 0x6e, 0x74, 0x83, 0x1e, 0x4c, 0xd2, 0xdf,
	0x43, 0xc4, 0x1c, 0xa1, 0x6d, 0x84, 0x18, 0xfa, 0x47, 0x19, 0x38, 0x4e, 0xbf, 0x89, 0xd3, 0xd3,
	0x98, 0xc0, 0xc7, 0x58, 0x57, 0xac, 0x52, 0x27, 0x2b, 0x55, 0xea, 0xa0, 0x47, 0x03, 0xd2, 0xbe,
	0x91, 0x34, 0xc6, 0xa4, 0x71, 0x28, 0xa5, 0x4e, 0xf6, 0x92, 0xfa, 0xfd, 0xa8, 0xd4, 0x5f, 0x19,
	0x99, 0xab, 0x4a, 0xfa, 0x67, 0x25, 0xe9, 0xd7, 0x06, 0xa4, 0x5f, 0x96, 0x64, 0xbb, 0x0a, 0x87,
	0x07, 0x55, 0x3a, 0x56, 0x5d, 0xcf, 0xaf, 0x34, 0x98, 0x8a, 0x10, 0x1a, 0xcc, 0xab, 0xb4, 0x58,
	0x5e, 0xa5, 0xc3, 0x24, 0x4f, 0x66, 0xde, 0x0a, 0xa7, 0x9f, 0x35, 0x22, 0x7d, 0xe8, 0x31, 0xcc,
	0xe0, 0x6f, 0x74, 0x70, 0x83, 0x60, 0xeb, 0x81, 0xe7, 0x36, 0x3d, 0xec, 0x8b, 0xdb, 0xdb, 0x17,
	0x95, 0x1e, 0xfc, 0xce, 0x00, 0xf0, 0xa3, 0x5e, 0x07, 0x1b, 0x31, 0x12, 0xc1, 0xdc, 0xba, 0x6d,
	0x7e, 0xdc, 0x59, 0x36, 0xe8, 0x6f, 0xfd, 0x23, 0x0d, 0x0e, 0x84, 0x49, 0xef, 0xc3, 0xae, 0xb7,
	0x8b, 0x7b, 0x4f, 0xb7, 0x7f, 0x49, 0x3b, 0x55, 0x6e, 0x48, 0x2e, 0x98, 0x4f, 0x9b, 0x0b, 0x86,
	0x09, 0x5a, 0x41, 0x4e, 0xd0, 0x62, 0xc9, 0x58, 0x51, 0x91, 0x8c, 0xfd, 0x5a, 0xeb, 0x1f, 0x7f,
	0xf5, 0xa7, 0xf7, 0x19, 0xdc, 0x95, 0xf4, 0x3f, 0x49, 0x47, 0x56, 0xf2, 0x4c, 0x46, 0x3e, 0xb2,
	0x8a, 0x23, 0x8f, 0xbf, 0x97, 0xac, 0xf0, 0xbd, 0xe4, 0x46, 0xa0, 0xf1, 0x80, 0xa4, 0xd8, 0x4c,
	0xf4, 0xa4, 0xb5, 0x2c, 0x71, 0x17, 0x28, 0xfa, 0xdf, 0x35, 0x98, 0x09, 0x3f, 0xde, 0x76, 0xdb,
	0x24, 0x48, 0xf3, 0x9f, 0x69, 0x04, 0x15, 0xb1, 0xcb, 0x42, 0x5a, 0xbb, 0x5c, 0x84, 0x9c, 0x4d,
	0x70, 0x8b, 0x47, 0x56, 0x73, 0x75, 0x56, 0x50, 0x5f, 0x17, 0xa5, 0xf2, 0xf5, 0xe5, 0x76, 0xcf,
	0xa0, 0x10, 0xfa, 0x5f, 0x06, 0x94, 0xc7, 0x27, 0xf9, 0x59, 0x8c, 0x8e, 0xc4, 0xb9, 0x48, 0xa9,
	0x7f, 0xb8, 0xa7, 0xff, 0x55, 0xa3, 0x37, 0x02, 0xf1, 0xe9, 0x71, 0xe3, 0x5c, 0x8b, 0x18, 0xe7,
	0xe5, 0x3d, 0x8c, 0x73, 0x00, 0x7b, 0x7c, 0xeb, 0x5c, 0xe3, 0xd6, 0xf9, 0x3a, 0x94, 0x1a, 0x8c,
	0xa6, 0x30, 0xcf, 0x17, 0x86, 0x99, 0xa7, 0xe0, 0x1f, 0x22, 0xe9, 0x3f, 0x2d, 0x42, 0x2e, 0xd0,
	0x7d, 0x5a, 0xa3, 0xac, 0x42, 0x91, 0x8b, 0x91, 0x6b, 0x48, 0x34, 0x83, 0x2f, 0x5d, 0x5a, 0x35,
	0x69, 0x71, 0x25, 0x89, 0x26, 0x3a, 0x06, 0xe5, 0x6d, 0xdb, 0xf3, 0x89, 0x54, 0x80, 0xd1, 0xef,
	0x08, 0x76, 0x32, 0xc7, 0xe4, 0x1f, 0x79, 0x88, 0x2f, 0xda, 0xf4, 0xce, 0x60, 0xd7, 0x24, 0xa6,
	0xb7, 0xd9, 0xf5, 0x1c, 0xae, 0xac, 0x32, 0xeb, 0x79, 0xec, 0x39, 0x52, 0x01, 0x47, 0x69, 0xe4,
	0x02, 0x8e, 0x72, 0x42, 0x01, 0x07, 0x3c, 0x75, 0x01, 0x47, 0x65, 0xbc, 0x02, 0x0e, 0x74, 0x33,
	0xdc, 0x3b, 0x6f, 0x99, 0xa4, 0xb1, 0x43, 0x8f, 0xe7, 0x2a, 0x97, 0x6a, 0xca, 0x91, 0x50, 0x08,
	0x23, 0x02, 0x8f, 0x5e, 0x87, 0xe9, 0x8e, 0x6b, 0xb7, 0xc9, 0xfd, 0x6d, 0xce, 0x87, 0x9e, 0xe1,
	0x0d, 0x59, 0xee, 0x03, 0xe0, 0x61, 0x81, 0xd6, 0xb4, 0x54, 0xa0, 0xb5, 0x06, 0x53, 0x6d, 0x97,
	0xd8, 0xdb, 0x76, 0x83, 0x26, 0x5d, 0x7e, 0xf5, 0x80, 0xaa, 0x32, 0x80, 0x8f, 0xea, 0x4d, 0x09,
	0xd2, 0x88, 0xe2, 0xa1, 0xd3, 0x30, 0xd5, 0xd9, 0xe9, 0xf9, 0x76, 0xc3, 0x74, 0x9c, 0xde, 0xaa,
	0x4d, 0xaa, 0x33, 0x0b, 0xda, 0x62, 0xc9, 0x88, 0x76, 0xa2, 0x05, 0xa8, 0xb4, 0x70, 0x9b, 0x08,
	0x98, 0x59, 0x0a, 0x23, 0x77, 0xa1, 0x25, 0x38, 0xe8, 0xb6, 0xb7, 0x5c, 0xd3, 0xb3, 0xec, 0x76,
	0x73, 0x53, 0x54, 0x42, 0x54, 0x11, 0x85, 0x44, 0xfd, 0x4f, 0xb7, 0xf9, 0x97, 0x81, 0x12, 0xb3,
	0x83, 0xe3, 0x94, 0x98, 0xf1, 0x0a, 0xd8, 0xb9, 0xc4, 0x05, 0xf6, 0x38, 0x2c, 0x83, 0x7d, 0x16,
	0xf5, 0xc9, 0xdf, 0xd7, 0x20, 0x4f, 0x3b, 0xd1, 0x29, 0x98, 0xb4, 0xf0, 0xae, 0xdd, 0xc0, 0x9b,
	0xf2, 0xfd, 0x58, 0x85, 0xf5, 0x31, 0x90, 0x1a, 0x94, 0x3a, 0x8e, 0x49, 0xb6, 0x5d, 0xaf, 0x45,
	0x79, 0xe4, 0x8d, 0xb0, 0x8d, 0xce, 0xc1, 0x6c, 0xb7, 0x6d, 0xbf, 0xdd, 0x0d, 0x82, 0x39, 0xdc,
	0x0e, 0xb4, 0x85, 0x3d, 0xee, 0x69, 0x66, 0xd8, 0x87, 0xf5, 0xb0, 0x3f, 0x48, 0x0a, 0xcd, 0x4e,
	0x47, 0x86, 0x64, 0x3b, 0xd0, 0x94, 0xd9, 0xe9, 0xf4, 0xc1, 0xf4, 0x1f, 0x68, 0x30, 0x15, 0xb1,
	0xf3, 0x98, 0x67, 0xb9, 0xce, 0xdd, 0x6c, 0x86, 0xae, 0xd9, 0xd3, 0x7b, 0xad, 0x13, 0x1a, 0xee,
	0xb1, 0x43, 0xea, 0x39, 0x21, 0x2c, 0xbe, 0x23, 0xd2, 0x46, 0xe0, 0x78, 0x3a, 0x9e, 0x1d, 0xc6,
	0x64, 0x25, 0x43, 0x34, 0xe9, 0x52, 0x6f, 0xb3, 0xad, 0xa1, 0x64, 0x04, 0x3f, 0xf5, 0x9f, 0xe7,
	0xa0, 0x22, 0x29, 0x3a, 0xad, 0xd7, 0x93, 0xf6, 0x99, 0x4a, 0x64, 0x9f, 0x19, 0xc7, 0x1d, 0x3e,
	0x80, 0x83, 0x7c, 0xdd, 0xca, 0xd7, 0xe1, 0xf4, 0xe2, 0x68, 0xef, 0xeb, 0x6a, 0x15, 0x2a, 0xba,
	0x0b, 0xd0, 0x70, 0xdb, 0x96, 0xcd, 0x56, 0x68, 0x81, 0x12, 0x5a, 0x54, 0xae, 0x50, 0xbe, 0x01,
	0xdc, 0x36, 0x09, 0x6e, 0xba, 0x5e, 0x6f, 0x9d, 0xe0, 0x96, 0x21, 0xe1, 0xa2, 0x55, 0x28, 0x9b,
	0x8e, 0x83, 0xbd, 0xa6, 0x8d, 0xd9, 0x93, 0x87, 0x51, 0x08, 0xf5, 0x51, 0xd1, 0x0d, 0xc8, 0x6d,
	0xbb, 0xae, 0xc5, 0xcb, 0xe1, 0xd2, 0x93, 0xa0, 0x58, 0x68, 0x05, 0x4a, 0x8d, 0xae, 0xed, 0xdb,
	0x6d, 0x2c, 0xca, 0xe1, 0xd2, 0x53, 0x08, 0x31, 0xd1, 0x1b, 0x50, 0xc1, 0x64, 0xc7, 0x6e, 0xdb,
	0x0d, 0x62, 0x87, 0x8e, 0x3d, 0x3d, 0x21, 0x19, 0x59, 0xff, 0x4f, 0x06, 0x2a, 0x92, 0xc8, 0x63,
	0x76, 0x33, 0x6a, 0x55, 0x92, 0x64, 0x37, 0xb9, 0x44, 0xbb, 0xc9, 0x47, 0xed, 0xe6, 0x32, 0x14,
	0xd8, 0x35, 0x3b, 0x0f, 0xe3, 0x86, 0xde, 0xc8, 0x73, 0x50, 0xf4, 0x2a, 0x14, 0x5a, 0x98, 0xec,
	0xb8, 0x16, 0x0f, 0xe5, 0x74, 0xf5, 0x21, 0x19, 0xad, 0x22, 0xf0, 0x36, 0x28, 0xa4, 0xc1, 0x31,
	0xd0, 0x35, 0x00, 0x5e, 0x1c, 0x61, 0xdd, 0xda, 0xf3, 0xb0, 0x4c, 0x02, 0x45, 0x2f, 0x8b, 0x75,
	0xca, 0xae, 0xb1, 0x0e, 0xc7, 0xc2, 0x47, 0x9a, 0x08, 0x8a, 0xf5, 0x2b, 0x12, 0x37, 0x90, 0x12,
	0xb7, 0x6f, 0x6b, 0x80, 0xa4, 0x75, 0xba, 0xc1, 0xc2, 0x9e, 0x91, 0x0f, 0x61, 0xa2, 0xbe, 0x3f,
	0x3b, 0x72, 0x11, 0xf8, 0x2f, 0x34, 0x98, 0x94, 0x8b, 0x9c, 0x9f, 0x5a, 0xef, 0x35, 0x28, 0x89,
	0x32, 0x69, 0xee, 0x3e, 0xc3, 0x76, 0x10, 0xe4, 0x7a, 0x26, 0xb1, 0xdb, 0x4d, 0xae, 0x78, 0xde,
	0x92, 0x6d, 0xa5, 0x90, 0x68, 0x2b, 0xc5, 0x88, 0xad, 0xe8, 0x1f, 0x68, 0x30, 0x1d, 0xad, 0xd4,
	0x1b, 0x59, 0x76, 0x91, 0xa8, 0x2d, 0x3b, 0x2c, 0x6a, 0xcb, 0x0d, 0x8d, 0xda, 0xf2, 0x03, 0x51,
	0x9b, 0xfe, 0xe3, 0x0c, 0x1c, 0x54, 0xd4, 0xab, 0x3d, 0x97, 0x35, 0x15, 0x35, 0xf1, 0x42, 0x7a,
	0x13, 0x3f, 0x0b, 0x07, 0x48, 0xb0, 0x68, 0x36, 0xfb, 0x45, 0x53, 0xbc, 0xda, 0x93, 0x76, 0x6f,
	0xf0, 0xca, 0x29, 0x69, 0xfd, 0x95, 0x46, 0x5d, 0x7f, 0x2f, 0xdd, 0x81, 0xd9, 0xd8, 0x4e, 0x88,
	0x6a, 0x70, 0x38, 0xd6, 0xb9, 0xf9, 0xe6, 0xfd, 0x37, 0xef, 0xcc, 0x4c, 0xa0, 0x32, 0xe4, 0xef,
	0x6c, 0x2c, 0xaf, 0xdf, 0x9b, 0xd1, 0x82, 0x9f, 0x0f, 0xee, 0x06, 0xbd, 0x99, 0x4b, 0x1f, 0x1e,
	0x62, 0xcf, 0x84, 0x1f, 0x62, 0x2f, 0x08, 0x0b, 0xd0, 0x2a, 0x64, 0x97, 0x1d, 0x07, 0x1d, 0x57,
	0x1f, 0xc9, 0xf2, 0xc4, 0xad, 0x76, 0x22, 0xe9, 0x33, 0xaf, 0x29, 0x9c, 0x40, 0xf7, 0xa1, 0xc0,
	0x1e, 0x7d, 0x22, 0x65, 0xac, 0x2b, 0x3f, 0x5b, 0xad, 0x9d, 0x1a, 0x02, 0x21, 0x13, 0x64, 0xef,
	0xae, 0x94, 0x04, 0x23, 0x6f, 0x24, 0x95, 0x04, 0xa3, 0xef, 0x1a, 0xf5, 0x09, 0xb4, 0x0e, 0x39,
	0x03, 0x9b, 0x16, 0x3a, 0x91, 0xf0, 0xf6, 0x44, 0x10, 0x3b, 0x99, 0xf8, 0x5d, 0x1e, 0x1b, 0xab,
	0xa4, 0x57, 0x8e, 0x2d, 0xf2, 0xbe, 0x51, 0x39, 0xb6, 0xe8, 0x73, 0x41, 0x46, 0x90, 0x3d, 0xba,
	0x53, 0x12, 0x8c, 0xbc, 0xf4, 0x53, 0x12, 0x8c, 0xbe, 0xd8, 0xd3, 0x27, 0xd0, 0x26, 0x4c, 0x4a,
	0xaf, 0xd6, 0x7c, 0x74, 0x26, 0xd5, 0xab, 0xba, 0xda, 0xd9, 0xbd, 0xc0, 0x42, 0x06, 0x16, 0x4c,
	0x45, 0x1e, 0xb2, 0xa1, 0xff, 0x4b, 0x10, 0xdb, 0xe0, 0x0b, 0xb9, 0xda, 0xe2, 0xde, 0x80, 0x21,
	0x97, 0xaf, 0x01, 0xf4, 0x9f, 0xa1, 0xa1, 0xd3, 0x09, 0x98, 0x91, 0x57, 0x6d, 0xb5, 0x33, 0x7b,
	0x40, 0x85, 0xc4, 0x7d, 0x40, 0xf1, 0x67, 0x5b, 0xe8, 0xe5, 0x94, 0xaf, 0xbb, 0x18, 0xb3, 0xf3,
	0x23, 0xbd, 0x05, 0x63, 0x4c, 0xe3, 0x0f, 0x9d, 0x94, 0x4c, 0x13, 0xdf, 0x6c, 0x29, 0x99, 0x26,
	0xbf, 0x9e, 0xd2, 0x27, 0x50, 0x0b, 0x66, 0x06, 0x9f, 0x07, 0xa1, 0x97, 0x52, 0xbd, 0x21, 0x62,
	0x0c, 0xcf, 0x8d, 0xf0, 0xde, 0x88, 0x69, 0xad, 0xff, 0xd0, 0x44, 0xa9, 0xb5, 0xd8, 0x7b, 0x20,
	0xa5, 0xd6, 0xe2, 0xaf, 0x55, 0x18, 0xf1, 0xfe, 0x1b, 0x05, 0x25, 0xf1, 0xd8, 0x6b, 0x12, 0x25,
	0xf1, 0xf8, 0x43, 0x07, 0x26, 0xa8, 0xc1, 0x92, 0x7a, 0xa5, 0xa0, 0x12, 0x9e, 0x23, 0x28, 0x05,
	0x95, 0x54, 0xa3, 0x4f, 0x8d, 0x61, 0xe6, 0x21, 0x26, 0x91, 0xf7, 0x48, 0xe8, 0xbc, 0xfa, 0xd1,
	0xd2, 0x20, 0x9c, 0xe0, 0x58, 0x4f, 0x0b, 0x2e, 0x33, 0x5d, 0x4b, 0xc9, 0x74, 0x6d, 0x34, 0xa6,
	0x6b, 0xc9, 0x4c, 0x77, 0x61, 0xd6, 0xc0, 0x3e, 0xa6, 0x16, 0xf3, 0xc0, 0xf4, 0xfd, 0x77, 0x5c,
	0xcf, 0x42, 0x09, 0x64, 0x62, 0x80, 0x82, 0xed, 0x52, 0x6a, 0xf8, 0x90, 0xef, 0xbb, 0x1a, 0xcc,
	0x27, 0x54, 0xe5, 0xa3, 0x8b, 0xa3, 0x54, 0xf0, 0xb3, 0x11, 0x5c, 0x1a, 0xbd, 0xe8, 0x5f, 0x9f,
	0x40, 0xdf, 0x65, 0x87, 0xf3, 0xea, 0x8a, 0x74, 0x74, 0x79, 0xb4, 0xfa, 0x75, 0x36, 0x90, 0x2b,
	0xe3, 0x14, 0xbd, 0xeb, 0x13, 0xe8, 0x9b, 0x70, 0x58, 0x5d, 0x79, 0x8d, 0x2e, 0x8c, 0x50, 0xa4,
	0xcd, 0xc6, 0x70, 0x71, 0xe4, 0xb2, 0x6e, 0x7d, 0x02, 0xf5, 0x60, 0x4e, 0x55, 0xab, 0x3c, 0x68,
	0x0b, 0x43, 0x8a, 0x9a, 0x95, 0xb6, 0xb0, 0x67, 0x11, 0x34, 0x73, 0xbd, 0xf1, 0x72, 0x56, 0xa5,
	0xeb, 0x4d, 0x2c, 0x24, 0x56, 0xba, 0xde, 0xe4, 0x1a, 0x59, 0x2a, 0xf0, 0x2a, 0x1b, 0x56, 0xbc,
	0xdc, 0x12, 0x2d, 0xa5, 0x2f, 0xcc, 0x64, 0xdc, 0x2f, 0x8c, 0x5a, 0xc9, 0xa9, 0x4f, 0xa0, 0x26,
	0x4c, 0x47, 0xef, 0xff, 0xd0, 0x62, 0xda, 0x5b, 0xdf, 0xda, 0x8b, 0x29, 0x20, 0x43, 0x46, 0xef,
	0xf0, 0x8b, 0xc6, 0xd8, 0x2d, 0xa6, 0xd2, 0xb4, 0x86, 0x5e, 0x78, 0x8e, 0xc4, 0x78, 0xab, 0x40,
	0x33, 0xc9, 0xcb, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x24, 0x8f, 0x20, 0x23, 0x48, 0x00,
	0x00,
}
