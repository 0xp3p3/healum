// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/note-srv/proto/note/note.proto

/*
Package go_micro_srv_note is a generated protocol buffer package.

It is generated from these files:
	server/note-srv/proto/note/note.proto

It has these top-level messages:
	Data
	ArrData
	AllRequest
	AllResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	ReadRequest
	ReadResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
	ByCreatorRequest
	ByCreatorResponse
	ByUserRequest
	ByUserResponse
	FilterRequest
	FilterResponse
	Note
*/
package go_micro_srv_note

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import go_micro_srv_user "server/user-srv/proto/user"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VisiblityEnum int32

const (
	VisiblityEnum_VisiblityEnum_NONE VisiblityEnum = 0
	VisiblityEnum_DEFAULT            VisiblityEnum = 1
	VisiblityEnum_PUBLIC             VisiblityEnum = 2
	VisiblityEnum_PRIVATE            VisiblityEnum = 3
)

var VisiblityEnum_name = map[int32]string{
	0: "VisiblityEnum_NONE",
	1: "DEFAULT",
	2: "PUBLIC",
	3: "PRIVATE",
}
var VisiblityEnum_value = map[string]int32{
	"VisiblityEnum_NONE": 0,
	"DEFAULT":            1,
	"PUBLIC":             2,
	"PRIVATE":            3,
}

func (x VisiblityEnum) String() string {
	return proto.EnumName(VisiblityEnum_name, int32(x))
}
func (VisiblityEnum) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Data struct {
	Note *Note `protobuf:"bytes,1,opt,name=note" json:"note,omitempty"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Data) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

type ArrData struct {
	Notes []*Note `protobuf:"bytes,1,rep,name=notes" json:"notes,omitempty"`
}

func (m *ArrData) Reset()                    { *m = ArrData{} }
func (m *ArrData) String() string            { return proto.CompactTextString(m) }
func (*ArrData) ProtoMessage()               {}
func (*ArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ArrData) GetNotes() []*Note {
	if m != nil {
		return m.Notes
	}
	return nil
}

type AllRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllRequest) Reset()                    { *m = AllRequest{} }
func (m *AllRequest) String() string            { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()               {}
func (*AllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AllRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllResponse struct {
	Data    *ArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllResponse) Reset()                    { *m = AllResponse{} }
func (m *AllResponse) String() string            { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()               {}
func (*AllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AllResponse) GetData() *ArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateRequest struct {
	Note   *Note  `protobuf:"bytes,1,opt,name=note" json:"note,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateRequest) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *CreateRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateResponse struct {
	Data    *Data  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateRequest struct {
	Note   *Note  `protobuf:"bytes,1,opt,name=note" json:"note,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateRequest) GetNote() *Note {
	if m != nil {
		return m.Note
	}
	return nil
}

func (m *UpdateRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateResponse struct {
	Data    *Data  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReadRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadResponse struct {
	Data    *Data  `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ReadResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteResponse struct {
	Code    int64  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DeleteResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SearchRequest struct {
	Name          string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	OrgId         string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	From          int64  `protobuf:"varint,6,opt,name=from" json:"from,omitempty"`
	To            int64  `protobuf:"varint,7,opt,name=to" json:"to,omitempty"`
	SortParameter string `protobuf:"bytes,8,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,9,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SearchRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SearchRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *SearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *SearchRequest) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *SearchRequest) GetTo() int64 {
	if m != nil {
		return m.To
	}
	return 0
}

func (m *SearchRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *SearchRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type SearchResponse struct {
	Data    *ArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SearchResponse) GetData() *ArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SearchResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SearchResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ByCreatorRequest struct {
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId         string `protobuf:"bytes,11,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,12,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,13,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,14,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,2,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,3,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *ByCreatorRequest) Reset()                    { *m = ByCreatorRequest{} }
func (m *ByCreatorRequest) String() string            { return proto.CompactTextString(m) }
func (*ByCreatorRequest) ProtoMessage()               {}
func (*ByCreatorRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ByCreatorRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ByCreatorRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ByCreatorRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *ByCreatorRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ByCreatorRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ByCreatorRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *ByCreatorRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type ByCreatorResponse struct {
	Data    *ArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ByCreatorResponse) Reset()                    { *m = ByCreatorResponse{} }
func (m *ByCreatorResponse) String() string            { return proto.CompactTextString(m) }
func (*ByCreatorResponse) ProtoMessage()               {}
func (*ByCreatorResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ByCreatorResponse) GetData() *ArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ByCreatorResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ByCreatorResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ByUserRequest struct {
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId         string `protobuf:"bytes,11,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,12,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,13,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,14,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,2,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,3,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *ByUserRequest) Reset()                    { *m = ByUserRequest{} }
func (m *ByUserRequest) String() string            { return proto.CompactTextString(m) }
func (*ByUserRequest) ProtoMessage()               {}
func (*ByUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ByUserRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ByUserRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ByUserRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *ByUserRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ByUserRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ByUserRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *ByUserRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type ByUserResponse struct {
	Data    *ArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ByUserResponse) Reset()                    { *m = ByUserResponse{} }
func (m *ByUserResponse) String() string            { return proto.CompactTextString(m) }
func (*ByUserResponse) ProtoMessage()               {}
func (*ByUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ByUserResponse) GetData() *ArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ByUserResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ByUserResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterRequest struct {
	Category      []string `protobuf:"bytes,1,rep,name=category" json:"category,omitempty"`
	Tags          []string `protobuf:"bytes,2,rep,name=tags" json:"tags,omitempty"`
	OrgId         string   `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,6,opt,name=offset" json:"offset,omitempty"`
	SortParameter string   `protobuf:"bytes,7,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string   `protobuf:"bytes,8,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *FilterRequest) Reset()                    { *m = FilterRequest{} }
func (m *FilterRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterRequest) ProtoMessage()               {}
func (*FilterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *FilterRequest) GetCategory() []string {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *FilterRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *FilterRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type FilterResponse struct {
	Data    *ArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterResponse) Reset()                    { *m = FilterResponse{} }
func (m *FilterResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterResponse) ProtoMessage()               {}
func (*FilterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *FilterResponse) GetData() *ArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Note struct {
	Id          string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title       string                  `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string                  `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Created     int64                   `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Updated     int64                   `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
	User        *go_micro_srv_user.User `protobuf:"bytes,6,opt,name=user" json:"user,omitempty"`
	Creator     *go_micro_srv_user.User `protobuf:"bytes,7,opt,name=creator" json:"creator,omitempty"`
	Category    string                  `protobuf:"bytes,8,opt,name=category" json:"category,omitempty"`
	Tags        []string                `protobuf:"bytes,9,rep,name=tags" json:"tags,omitempty"`
	Priority    int64                   `protobuf:"varint,10,opt,name=priority" json:"priority,omitempty"`
	Links       []string                `protobuf:"bytes,11,rep,name=links" json:"links,omitempty"`
	Visibility  VisiblityEnum           `protobuf:"varint,12,opt,name=visibility,enum=go.micro.srv.note.VisiblityEnum" json:"visibility,omitempty"`
	OrgId       string                  `protobuf:"bytes,20,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *Note) Reset()                    { *m = Note{} }
func (m *Note) String() string            { return proto.CompactTextString(m) }
func (*Note) ProtoMessage()               {}
func (*Note) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *Note) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Note) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Note) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Note) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Note) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Note) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *Note) GetCreator() *go_micro_srv_user.User {
	if m != nil {
		return m.Creator
	}
	return nil
}

func (m *Note) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Note) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Note) GetPriority() int64 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Note) GetLinks() []string {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *Note) GetVisibility() VisiblityEnum {
	if m != nil {
		return m.Visibility
	}
	return VisiblityEnum_VisiblityEnum_NONE
}

func (m *Note) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func init() {
	proto.RegisterType((*Data)(nil), "go.micro.srv.note.Data")
	proto.RegisterType((*ArrData)(nil), "go.micro.srv.note.ArrData")
	proto.RegisterType((*AllRequest)(nil), "go.micro.srv.note.AllRequest")
	proto.RegisterType((*AllResponse)(nil), "go.micro.srv.note.AllResponse")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.note.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.note.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.note.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.note.UpdateResponse")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.note.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.note.ReadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.note.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.note.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "go.micro.srv.note.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "go.micro.srv.note.SearchResponse")
	proto.RegisterType((*ByCreatorRequest)(nil), "go.micro.srv.note.ByCreatorRequest")
	proto.RegisterType((*ByCreatorResponse)(nil), "go.micro.srv.note.ByCreatorResponse")
	proto.RegisterType((*ByUserRequest)(nil), "go.micro.srv.note.ByUserRequest")
	proto.RegisterType((*ByUserResponse)(nil), "go.micro.srv.note.ByUserResponse")
	proto.RegisterType((*FilterRequest)(nil), "go.micro.srv.note.FilterRequest")
	proto.RegisterType((*FilterResponse)(nil), "go.micro.srv.note.FilterResponse")
	proto.RegisterType((*Note)(nil), "go.micro.srv.note.Note")
	proto.RegisterEnum("go.micro.srv.note.VisiblityEnum", VisiblityEnum_name, VisiblityEnum_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for NoteService service

type NoteServiceClient interface {
	All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
	ByCreator(ctx context.Context, in *ByCreatorRequest, opts ...client.CallOption) (*ByCreatorResponse, error)
	ByUser(ctx context.Context, in *ByUserRequest, opts ...client.CallOption) (*ByUserResponse, error)
	Filter(ctx context.Context, in *FilterRequest, opts ...client.CallOption) (*FilterResponse, error)
}

type noteServiceClient struct {
	c           client.Client
	serviceName string
}

func NewNoteServiceClient(serviceName string, c client.Client) NoteServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.note"
	}
	return &noteServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *noteServiceClient) All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.All", in)
	out := new(AllResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) ByCreator(ctx context.Context, in *ByCreatorRequest, opts ...client.CallOption) (*ByCreatorResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.ByCreator", in)
	out := new(ByCreatorResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) ByUser(ctx context.Context, in *ByUserRequest, opts ...client.CallOption) (*ByUserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.ByUser", in)
	out := new(ByUserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *noteServiceClient) Filter(ctx context.Context, in *FilterRequest, opts ...client.CallOption) (*FilterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "NoteService.Filter", in)
	out := new(FilterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NoteService service

type NoteServiceHandler interface {
	All(context.Context, *AllRequest, *AllResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
	ByCreator(context.Context, *ByCreatorRequest, *ByCreatorResponse) error
	ByUser(context.Context, *ByUserRequest, *ByUserResponse) error
	Filter(context.Context, *FilterRequest, *FilterResponse) error
}

func RegisterNoteServiceHandler(s server.Server, hdlr NoteServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&NoteService{hdlr}, opts...))
}

type NoteService struct {
	NoteServiceHandler
}

func (h *NoteService) All(ctx context.Context, in *AllRequest, out *AllResponse) error {
	return h.NoteServiceHandler.All(ctx, in, out)
}

func (h *NoteService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.NoteServiceHandler.Create(ctx, in, out)
}

func (h *NoteService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.NoteServiceHandler.Update(ctx, in, out)
}

func (h *NoteService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.NoteServiceHandler.Read(ctx, in, out)
}

func (h *NoteService) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.NoteServiceHandler.Delete(ctx, in, out)
}

func (h *NoteService) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.NoteServiceHandler.Search(ctx, in, out)
}

func (h *NoteService) ByCreator(ctx context.Context, in *ByCreatorRequest, out *ByCreatorResponse) error {
	return h.NoteServiceHandler.ByCreator(ctx, in, out)
}

func (h *NoteService) ByUser(ctx context.Context, in *ByUserRequest, out *ByUserResponse) error {
	return h.NoteServiceHandler.ByUser(ctx, in, out)
}

func (h *NoteService) Filter(ctx context.Context, in *FilterRequest, out *FilterResponse) error {
	return h.NoteServiceHandler.Filter(ctx, in, out)
}

func init() { proto.RegisterFile("server/note-srv/proto/note/note.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 972 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x57, 0xc1, 0x6e, 0xdb, 0x46,
	0x10, 0x35, 0x45, 0x8a, 0xb2, 0x46, 0x91, 0xa0, 0x2c, 0xdc, 0x98, 0x10, 0xd0, 0x56, 0x65, 0x1b,
	0x20, 0x68, 0x10, 0x05, 0x75, 0x2e, 0x3d, 0x15, 0x95, 0x63, 0x1b, 0x10, 0x90, 0xd8, 0x06, 0x13,
	0x07, 0xbd, 0x19, 0x8c, 0xb8, 0x56, 0x17, 0xa6, 0xb4, 0xca, 0xee, 0x5a, 0x80, 0x3f, 0xa6, 0xff,
	0xd1, 0x0f, 0x29, 0xd0, 0x6b, 0xef, 0x3d, 0xf6, 0x07, 0x8a, 0x9d, 0xe5, 0x4a, 0x64, 0xbd, 0x72,
	0x6c, 0x04, 0xd1, 0xa1, 0x17, 0x81, 0x33, 0x3b, 0x33, 0x3b, 0xf3, 0x38, 0x7c, 0x33, 0x82, 0xc7,
	0x92, 0x8a, 0x05, 0x15, 0xcf, 0x67, 0x5c, 0xd1, 0x67, 0x52, 0x2c, 0x9e, 0xcf, 0x05, 0x57, 0x1c,
	0x45, 0xfc, 0x19, 0xa0, 0x4c, 0x1e, 0x4e, 0xf8, 0x60, 0xca, 0xc6, 0x82, 0x0f, 0xa4, 0x58, 0x0c,
	0xf4, 0x41, 0xcf, 0x7a, 0x5e, 0x49, 0x2a, 0x4a, 0x9e, 0x5a, 0xc4, 0x1f, 0xe3, 0x19, 0xbf, 0x80,
	0xe0, 0x20, 0x55, 0x29, 0x79, 0x0a, 0x81, 0x76, 0x8b, 0xbc, 0xbe, 0xf7, 0xa4, 0xb5, 0xb7, 0x3b,
	0xb8, 0x11, 0x70, 0x70, 0xcc, 0x15, 0x4d, 0xd0, 0x28, 0xfe, 0x11, 0x1a, 0x43, 0x21, 0xd0, 0xef,
	0x19, 0xd4, 0xb5, 0x4a, 0x46, 0x5e, 0xdf, 0xbf, 0xcd, 0xd1, 0x58, 0xc5, 0xbf, 0x7b, 0x00, 0xc3,
	0x3c, 0x4f, 0xe8, 0x87, 0x2b, 0x2a, 0x15, 0xf9, 0x02, 0x42, 0x2e, 0x26, 0xe7, 0x2c, 0xc3, 0x7b,
	0x9b, 0x49, 0x9d, 0x8b, 0xc9, 0x28, 0x23, 0xbb, 0xd0, 0x50, 0x34, 0x9d, 0x6a, 0x7d, 0x0d, 0xf5,
	0xa1, 0x16, 0x47, 0x19, 0xd9, 0x81, 0x7a, 0xce, 0xa6, 0x4c, 0x45, 0x7e, 0xdf, 0x7b, 0xe2, 0x27,
	0x46, 0x20, 0x8f, 0x20, 0xe4, 0x17, 0x17, 0x92, 0xaa, 0x28, 0x40, 0x75, 0x21, 0x91, 0xc7, 0xd0,
	0x91, 0x5c, 0xa8, 0xf3, 0x79, 0x2a, 0xd2, 0x29, 0x55, 0x54, 0x44, 0x75, 0x8c, 0xd6, 0xd6, 0xda,
	0x53, 0xab, 0x5c, 0x9a, 0x65, 0x4c, 0xd0, 0xb1, 0x62, 0x7c, 0x16, 0x85, 0x2b, 0xb3, 0x03, 0xab,
	0x8c, 0x2f, 0xa1, 0x85, 0x99, 0xcb, 0x39, 0x9f, 0x49, 0x4a, 0x06, 0x10, 0x64, 0xa9, 0x4a, 0x0b,
	0xc0, 0x7a, 0x8e, 0xba, 0x0b, 0x88, 0x12, 0xb4, 0x23, 0x04, 0x82, 0x31, 0xcf, 0x28, 0x16, 0xe4,
	0x27, 0xf8, 0x4c, 0x22, 0x68, 0x4c, 0xa9, 0x94, 0xe9, 0x84, 0x62, 0x41, 0xcd, 0xc4, 0x8a, 0x71,
	0x0e, 0xed, 0x97, 0x82, 0xa6, 0x8a, 0x5a, 0xa4, 0xee, 0xf3, 0x7e, 0x4a, 0xb0, 0xd6, 0xd6, 0xc0,
	0xea, 0x97, 0x61, 0x8d, 0x2f, 0xa1, 0x63, 0x6f, 0x2b, 0xaa, 0x7b, 0x5a, 0xa9, 0xce, 0x75, 0xdd,
	0xa7, 0x94, 0x76, 0x36, 0xcf, 0x36, 0x58, 0x9a, 0xbd, 0xed, 0xf3, 0x97, 0xf6, 0x1a, 0x5a, 0x09,
	0x4d, 0x33, 0x5b, 0x58, 0x07, 0x6a, 0xcb, 0xce, 0xae, 0xb1, 0xec, 0xde, 0xb9, 0x33, 0x78, 0x60,
	0xc2, 0x7d, 0xfe, 0xcc, 0x4f, 0xa0, 0x7d, 0x40, 0x73, 0xba, 0x7a, 0x29, 0x9f, 0x9a, 0xfb, 0x4f,
	0xd0, 0xb1, 0x01, 0x8b, 0xec, 0xef, 0x97, 0xd0, 0x3f, 0x1e, 0xb4, 0xdf, 0xd0, 0x54, 0x8c, 0x7f,
	0xb5, 0x19, 0x11, 0x08, 0x66, 0xe9, 0x94, 0x16, 0x39, 0xe1, 0xf3, 0x7d, 0xb3, 0x5a, 0xf1, 0x47,
	0xe0, 0xe6, 0x8f, 0x7a, 0x85, 0x3f, 0x08, 0x04, 0x17, 0x82, 0x4f, 0x91, 0x0e, 0xfc, 0x04, 0x9f,
	0x35, 0x2e, 0x8a, 0x47, 0x0d, 0xd4, 0xd4, 0x14, 0x77, 0x70, 0xcc, 0xf6, 0xdd, 0x38, 0xa6, 0xe9,
	0xe2, 0x98, 0x19, 0x74, 0x6c, 0xd1, 0x1b, 0xa1, 0x99, 0x3f, 0x3d, 0xe8, 0xee, 0x5f, 0xe3, 0xb7,
	0xcf, 0x85, 0x05, 0x7a, 0x17, 0x1a, 0x7a, 0x40, 0xac, 0x58, 0x39, 0xd4, 0xe2, 0xa8, 0xdc, 0x03,
	0xad, 0x35, 0x68, 0x3f, 0x70, 0xa3, 0xdd, 0x76, 0xa3, 0xdd, 0xf9, 0x08, 0x5b, 0xd7, 0xee, 0x86,
	0xa4, 0xef, 0x42, 0xf2, 0x03, 0x3c, 0x2c, 0x15, 0xb6, 0x11, 0x30, 0xff, 0xf0, 0xa0, 0xbd, 0x7f,
	0x7d, 0x26, 0xe9, 0xff, 0x0b, 0xc9, 0x19, 0x74, 0x6c, 0x55, 0x1b, 0x81, 0xf1, 0x6f, 0x0f, 0xda,
	0x47, 0x2c, 0x57, 0x2b, 0x18, 0x7b, 0xb0, 0x3d, 0x4e, 0x15, 0x9d, 0x70, 0x71, 0x8d, 0x6b, 0x46,
	0x33, 0x59, 0xca, 0x3a, 0xb6, 0x4a, 0x27, 0x32, 0xaa, 0xa1, 0x1e, 0x9f, 0x4b, 0xe8, 0xfa, 0x6b,
	0xd0, 0x0d, 0xdc, 0xe8, 0xd6, 0xdd, 0xe8, 0x86, 0x1f, 0x41, 0xb7, 0x71, 0x37, 0x74, 0xb7, 0xd7,
	0xa0, 0x6b, 0x8b, 0xdd, 0x08, 0xba, 0xbf, 0xf9, 0x10, 0xe8, 0x71, 0x7a, 0x83, 0xe0, 0x77, 0xa0,
	0xae, 0x98, 0xca, 0xa9, 0x65, 0x52, 0x14, 0x48, 0x1f, 0x5a, 0x19, 0x95, 0x63, 0xc1, 0xe6, 0xa5,
	0x06, 0x29, 0xab, 0xf4, 0x55, 0x63, 0xdc, 0x1d, 0xb2, 0x82, 0x54, 0xad, 0xa8, 0x4f, 0xae, 0x70,
	0xf4, 0x66, 0x05, 0xb0, 0x56, 0xd4, 0x83, 0x4c, 0x7f, 0x08, 0x08, 0xec, 0x8d, 0x41, 0x86, 0xcb,
	0x29, 0xf6, 0x1b, 0x1a, 0x91, 0x1f, 0x8a, 0x0b, 0xb8, 0x01, 0xfa, 0x16, 0x7b, 0x6b, 0x57, 0x69,
	0x18, 0x83, 0xfa, 0xcd, 0x86, 0x69, 0x96, 0x1a, 0xa6, 0x07, 0xdb, 0x73, 0xc1, 0xb8, 0x60, 0xea,
	0x3a, 0x02, 0x4c, 0x75, 0x29, 0x9b, 0xe6, 0x98, 0x5d, 0xca, 0xa8, 0x85, 0x0e, 0x46, 0x20, 0x3f,
	0x03, 0x2c, 0x98, 0x64, 0xef, 0x59, 0xae, 0x7d, 0xf4, 0xc7, 0xda, 0xd9, 0xeb, 0x3b, 0x5e, 0xd5,
	0x3b, 0x6d, 0xa4, 0x6d, 0x0e, 0x67, 0x57, 0xd3, 0xa4, 0xe4, 0x53, 0x6a, 0xd2, 0x9d, 0x52, 0x93,
	0x7e, 0xff, 0x1a, 0xda, 0x15, 0x1f, 0xf2, 0x08, 0x48, 0x45, 0x71, 0x7e, 0x7c, 0x72, 0x7c, 0xd8,
	0xdd, 0x22, 0x2d, 0x68, 0x1c, 0x1c, 0x1e, 0x0d, 0xcf, 0x5e, 0xbd, 0xed, 0x7a, 0x04, 0x20, 0x3c,
	0x3d, 0xdb, 0x7f, 0x35, 0x7a, 0xd9, 0xad, 0xe9, 0x83, 0xd3, 0x64, 0xf4, 0x6e, 0xf8, 0xf6, 0xb0,
	0xeb, 0xef, 0xfd, 0x55, 0x87, 0x96, 0x7e, 0xdd, 0x6f, 0xa8, 0x58, 0xb0, 0x31, 0x25, 0x47, 0xe0,
	0x0f, 0xf3, 0x9c, 0x7c, 0xe9, 0xea, 0xaa, 0xe5, 0x5a, 0xde, 0xfb, 0x6a, 0xdd, 0xb1, 0x69, 0xd1,
	0x78, 0x8b, 0x9c, 0x40, 0x68, 0x36, 0x46, 0xe2, 0xaa, 0xba, 0xb2, 0xba, 0xf6, 0xbe, 0xb9, 0xc5,
	0xa2, 0x1c, 0xd0, 0xec, 0x69, 0xce, 0x80, 0x95, 0x85, 0xd1, 0x19, 0xb0, 0xba, 0xe4, 0xc5, 0x5b,
	0x64, 0x04, 0x81, 0x5e, 0x9e, 0x88, 0xab, 0x96, 0xd2, 0x92, 0xd6, 0xfb, 0x7a, 0xed, 0x79, 0x39,
	0x37, 0xb3, 0xcb, 0x38, 0x73, 0xab, 0xec, 0x4d, 0xce, 0xdc, 0xaa, 0x8b, 0x90, 0x09, 0x68, 0xc6,
	0xbc, 0x33, 0x60, 0x65, 0xed, 0x71, 0x06, 0xac, 0xee, 0x08, 0xf1, 0x16, 0xf9, 0x05, 0x9a, 0xcb,
	0x69, 0x47, 0xbe, 0x75, 0x78, 0xfc, 0x77, 0xc8, 0xf7, 0xbe, 0xbb, 0xdd, 0xa8, 0x9c, 0xaa, 0x61,
	0x7f, 0x67, 0xaa, 0x95, 0x71, 0xe7, 0x4c, 0xb5, 0x3a, 0x3a, 0x4c, 0x40, 0x43, 0x78, 0xce, 0x80,
	0x15, 0xe2, 0x77, 0x06, 0xac, 0xb2, 0x65, 0xbc, 0xf5, 0x3e, 0xc4, 0x3f, 0xb2, 0x2f, 0xfe, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0x5a, 0xd8, 0x72, 0x6f, 0x2b, 0x0f, 0x00, 0x00,
}
