// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/organisation-srv/proto/organisation/organisation.proto

/*
Package go_micro_srv_organisation is a generated protocol buffer package.

It is generated from these files:
	server/organisation-srv/proto/organisation/organisation.proto

It has these top-level messages:
	OrgData
	AllRequest
	AllResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	ReadRequest
	ReadResponse
	CreateOrganisationProfileRequest
	CreateOrganisationProfileResponse
	CreateOrganisationSettingRequest
	CreateOrganisationSettingResponse
	ReadOrgInfoRequest
	ReadOrgInfoResponse
	PutOrgInfoRequest
	PutOrgInfoResponse
	WarmupCacheOrganisationRequest
	WarmupCacheOrganisationResponse
	Organisation
	OrganisationProfile
	OrganisationSetting
	OrganisationModule
	OrgInfo
	UpdateModulesRequest
	UpdateModulesResponse
	GetModulesByOrgRequest
	GetModulesByOrgResponse
*/
package go_micro_srv_organisation

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import go_micro_srv_static "server/static-srv/proto/static"
import go_micro_srv_content "server/content-srv/proto/content"
import go_micro_srv_account "server/account-srv/proto/account"
import go_micro_srv_user "server/user-srv/proto/user"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OrganisationType int32

const (
	OrganisationType_NONE             OrganisationType = 0
	OrganisationType_ROOT             OrganisationType = 1
	OrganisationType_CUSTOMER         OrganisationType = 2
	OrganisationType_PARTNER          OrganisationType = 3
	OrganisationType_REFERRER         OrganisationType = 4
	OrganisationType_SERVICE_PROVIDER OrganisationType = 5
)

var OrganisationType_name = map[int32]string{
	0: "NONE",
	1: "ROOT",
	2: "CUSTOMER",
	3: "PARTNER",
	4: "REFERRER",
	5: "SERVICE_PROVIDER",
}
var OrganisationType_value = map[string]int32{
	"NONE":             0,
	"ROOT":             1,
	"CUSTOMER":         2,
	"PARTNER":          3,
	"REFERRER":         4,
	"SERVICE_PROVIDER": 5,
}

func (x OrganisationType) String() string {
	return proto.EnumName(OrganisationType_name, int32(x))
}
func (OrganisationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type OrgData struct {
	Organisation *Organisation `protobuf:"bytes,1,opt,name=organisation" json:"organisation,omitempty"`
}

func (m *OrgData) Reset()                    { *m = OrgData{} }
func (m *OrgData) String() string            { return proto.CompactTextString(m) }
func (*OrgData) ProtoMessage()               {}
func (*OrgData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *OrgData) GetOrganisation() *Organisation {
	if m != nil {
		return m.Organisation
	}
	return nil
}

type AllRequest struct {
	Offset        int64  `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit         int64  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	SortParameter string `protobuf:"bytes,3,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,4,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllRequest) Reset()                    { *m = AllRequest{} }
func (m *AllRequest) String() string            { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()               {}
func (*AllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AllRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllResponse struct {
	Data    *AllResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64             `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllResponse) Reset()                    { *m = AllResponse{} }
func (m *AllResponse) String() string            { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()               {}
func (*AllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AllResponse) GetData() *AllResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllResponse_Data struct {
	Organisations []*Organisation `protobuf:"bytes,1,rep,name=organisations" json:"organisations,omitempty"`
}

func (m *AllResponse_Data) Reset()                    { *m = AllResponse_Data{} }
func (m *AllResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*AllResponse_Data) ProtoMessage()               {}
func (*AllResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

func (m *AllResponse_Data) GetOrganisations() []*Organisation {
	if m != nil {
		return m.Organisations
	}
	return nil
}

type CreateRequest struct {
	Organisation *Organisation                 `protobuf:"bytes,1,opt,name=organisation" json:"organisation,omitempty"`
	User         *go_micro_srv_user.User       `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	Account      *go_micro_srv_account.Account `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	Modules      []*go_micro_srv_static.Module `protobuf:"bytes,4,rep,name=modules" json:"modules,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateRequest) GetOrganisation() *Organisation {
	if m != nil {
		return m.Organisation
	}
	return nil
}

func (m *CreateRequest) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateRequest) GetAccount() *go_micro_srv_account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateRequest) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

type CreateResponse struct {
	Data    *CreateResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateResponse) GetData() *CreateResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateResponse_Data struct {
	Organisation *Organisation                 `protobuf:"bytes,1,opt,name=organisation" json:"organisation,omitempty"`
	Account      *go_micro_srv_account.Account `protobuf:"bytes,2,opt,name=account" json:"account,omitempty"`
	User         *go_micro_srv_user.User       `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
}

func (m *CreateResponse_Data) Reset()                    { *m = CreateResponse_Data{} }
func (m *CreateResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse_Data) ProtoMessage()               {}
func (*CreateResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *CreateResponse_Data) GetOrganisation() *Organisation {
	if m != nil {
		return m.Organisation
	}
	return nil
}

func (m *CreateResponse_Data) GetAccount() *go_micro_srv_account.Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateResponse_Data) GetUser() *go_micro_srv_user.User {
	if m != nil {
		return m.User
	}
	return nil
}

type UpdateRequest struct {
	Organisation *Organisation `protobuf:"bytes,1,opt,name=organisation" json:"organisation,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateRequest) GetOrganisation() *Organisation {
	if m != nil {
		return m.Organisation
	}
	return nil
}

type UpdateResponse struct {
	Data    *UpdateResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateResponse) GetData() *UpdateResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateResponse_Data struct {
	Organisation *Organisation `protobuf:"bytes,1,opt,name=organisation" json:"organisation,omitempty"`
}

func (m *UpdateResponse_Data) Reset()                    { *m = UpdateResponse_Data{} }
func (m *UpdateResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse_Data) ProtoMessage()               {}
func (*UpdateResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6, 0} }

func (m *UpdateResponse_Data) GetOrganisation() *Organisation {
	if m != nil {
		return m.Organisation
	}
	return nil
}

type ReadRequest struct {
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ReadRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type ReadResponse struct {
	Data    *OrgData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ReadResponse) GetData() *OrgData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateOrganisationProfileRequest struct {
	Profile *OrganisationProfile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *CreateOrganisationProfileRequest) Reset()         { *m = CreateOrganisationProfileRequest{} }
func (m *CreateOrganisationProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrganisationProfileRequest) ProtoMessage()    {}
func (*CreateOrganisationProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9}
}

func (m *CreateOrganisationProfileRequest) GetProfile() *OrganisationProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type CreateOrganisationProfileResponse struct {
	Data    *CreateOrganisationProfileResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateOrganisationProfileResponse) Reset()         { *m = CreateOrganisationProfileResponse{} }
func (m *CreateOrganisationProfileResponse) String() string { return proto.CompactTextString(m) }
func (*CreateOrganisationProfileResponse) ProtoMessage()    {}
func (*CreateOrganisationProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10}
}

func (m *CreateOrganisationProfileResponse) GetData() *CreateOrganisationProfileResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateOrganisationProfileResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateOrganisationProfileResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateOrganisationProfileResponse_Data struct {
	Profile *OrganisationProfile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *CreateOrganisationProfileResponse_Data) Reset() {
	*m = CreateOrganisationProfileResponse_Data{}
}
func (m *CreateOrganisationProfileResponse_Data) String() string { return proto.CompactTextString(m) }
func (*CreateOrganisationProfileResponse_Data) ProtoMessage()    {}
func (*CreateOrganisationProfileResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{10, 0}
}

func (m *CreateOrganisationProfileResponse_Data) GetProfile() *OrganisationProfile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type CreateOrganisationSettingRequest struct {
	Setting *OrganisationSetting `protobuf:"bytes,1,opt,name=setting" json:"setting,omitempty"`
}

func (m *CreateOrganisationSettingRequest) Reset()         { *m = CreateOrganisationSettingRequest{} }
func (m *CreateOrganisationSettingRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrganisationSettingRequest) ProtoMessage()    {}
func (*CreateOrganisationSettingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11}
}

func (m *CreateOrganisationSettingRequest) GetSetting() *OrganisationSetting {
	if m != nil {
		return m.Setting
	}
	return nil
}

type CreateOrganisationSettingResponse struct {
	Data    *CreateOrganisationSettingResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                                   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateOrganisationSettingResponse) Reset()         { *m = CreateOrganisationSettingResponse{} }
func (m *CreateOrganisationSettingResponse) String() string { return proto.CompactTextString(m) }
func (*CreateOrganisationSettingResponse) ProtoMessage()    {}
func (*CreateOrganisationSettingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *CreateOrganisationSettingResponse) GetData() *CreateOrganisationSettingResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateOrganisationSettingResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateOrganisationSettingResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateOrganisationSettingResponse_Data struct {
	Setting *OrganisationSetting `protobuf:"bytes,1,opt,name=setting" json:"setting,omitempty"`
}

func (m *CreateOrganisationSettingResponse_Data) Reset() {
	*m = CreateOrganisationSettingResponse_Data{}
}
func (m *CreateOrganisationSettingResponse_Data) String() string { return proto.CompactTextString(m) }
func (*CreateOrganisationSettingResponse_Data) ProtoMessage()    {}
func (*CreateOrganisationSettingResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 0}
}

func (m *CreateOrganisationSettingResponse_Data) GetSetting() *OrganisationSetting {
	if m != nil {
		return m.Setting
	}
	return nil
}

type ReadOrgInfoRequest struct {
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *ReadOrgInfoRequest) Reset()                    { *m = ReadOrgInfoRequest{} }
func (m *ReadOrgInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadOrgInfoRequest) ProtoMessage()               {}
func (*ReadOrgInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ReadOrgInfoRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type ReadOrgInfoResponse struct {
	OrgInfo *OrgInfo `protobuf:"bytes,1,opt,name=org_info,json=orgInfo" json:"org_info,omitempty"`
}

func (m *ReadOrgInfoResponse) Reset()                    { *m = ReadOrgInfoResponse{} }
func (m *ReadOrgInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadOrgInfoResponse) ProtoMessage()               {}
func (*ReadOrgInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReadOrgInfoResponse) GetOrgInfo() *OrgInfo {
	if m != nil {
		return m.OrgInfo
	}
	return nil
}

type PutOrgInfoRequest struct {
	OrgId   string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	OrgInfo *OrgInfo `protobuf:"bytes,2,opt,name=org_info,json=orgInfo" json:"org_info,omitempty"`
}

func (m *PutOrgInfoRequest) Reset()                    { *m = PutOrgInfoRequest{} }
func (m *PutOrgInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*PutOrgInfoRequest) ProtoMessage()               {}
func (*PutOrgInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *PutOrgInfoRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *PutOrgInfoRequest) GetOrgInfo() *OrgInfo {
	if m != nil {
		return m.OrgInfo
	}
	return nil
}

type PutOrgInfoResponse struct {
}

func (m *PutOrgInfoResponse) Reset()                    { *m = PutOrgInfoResponse{} }
func (m *PutOrgInfoResponse) String() string            { return proto.CompactTextString(m) }
func (*PutOrgInfoResponse) ProtoMessage()               {}
func (*PutOrgInfoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

type WarmupCacheOrganisationRequest struct {
	SortParameter string `protobuf:"bytes,1,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,2,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *WarmupCacheOrganisationRequest) Reset()                    { *m = WarmupCacheOrganisationRequest{} }
func (m *WarmupCacheOrganisationRequest) String() string            { return proto.CompactTextString(m) }
func (*WarmupCacheOrganisationRequest) ProtoMessage()               {}
func (*WarmupCacheOrganisationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *WarmupCacheOrganisationRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *WarmupCacheOrganisationRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type WarmupCacheOrganisationResponse struct {
}

func (m *WarmupCacheOrganisationResponse) Reset()         { *m = WarmupCacheOrganisationResponse{} }
func (m *WarmupCacheOrganisationResponse) String() string { return proto.CompactTextString(m) }
func (*WarmupCacheOrganisationResponse) ProtoMessage()    {}
func (*WarmupCacheOrganisationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18}
}

type Organisation struct {
	Id           string                        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string                        `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type         OrganisationType              `protobuf:"varint,3,opt,name=type,enum=go.micro.srv.organisation.OrganisationType" json:"type,omitempty"`
	Parent       *Organisation                 `protobuf:"bytes,4,opt,name=parent" json:"parent,omitempty"`
	Child        []*Organisation               `protobuf:"bytes,5,rep,name=child" json:"child,omitempty"`
	Modules      []*go_micro_srv_static.Module `protobuf:"bytes,6,rep,name=modules" json:"modules,omitempty"`
	Locations    []*go_micro_srv_content.Place `protobuf:"bytes,7,rep,name=locations" json:"locations,omitempty"`
	Owner        *go_micro_srv_user.User       `protobuf:"bytes,8,opt,name=owner" json:"owner,omitempty"`
	Created      int64                         `protobuf:"varint,9,opt,name=created" json:"created,omitempty"`
	Updated      int64                         `protobuf:"varint,10,opt,name=updated" json:"updated,omitempty"`
	Domain       string                        `protobuf:"bytes,11,opt,name=domain" json:"domain,omitempty"`
	Email        string                        `protobuf:"bytes,12,opt,name=email" json:"email,omitempty"`
	FriendlyName string                        `protobuf:"bytes,13,opt,name=friendly_name,json=friendlyName" json:"friendly_name,omitempty"`
}

func (m *Organisation) Reset()                    { *m = Organisation{} }
func (m *Organisation) String() string            { return proto.CompactTextString(m) }
func (*Organisation) ProtoMessage()               {}
func (*Organisation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *Organisation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Organisation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organisation) GetType() OrganisationType {
	if m != nil {
		return m.Type
	}
	return OrganisationType_NONE
}

func (m *Organisation) GetParent() *Organisation {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *Organisation) GetChild() []*Organisation {
	if m != nil {
		return m.Child
	}
	return nil
}

func (m *Organisation) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

func (m *Organisation) GetLocations() []*go_micro_srv_content.Place {
	if m != nil {
		return m.Locations
	}
	return nil
}

func (m *Organisation) GetOwner() *go_micro_srv_user.User {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *Organisation) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Organisation) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Organisation) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Organisation) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Organisation) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

// to be update later
type OrganisationProfile struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId   string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
}

func (m *OrganisationProfile) Reset()                    { *m = OrganisationProfile{} }
func (m *OrganisationProfile) String() string            { return proto.CompactTextString(m) }
func (*OrganisationProfile) ProtoMessage()               {}
func (*OrganisationProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *OrganisationProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrganisationProfile) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *OrganisationProfile) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *OrganisationProfile) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

// to be updated later
type OrganisationSetting struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId   string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created int64  `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated int64  `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
}

func (m *OrganisationSetting) Reset()                    { *m = OrganisationSetting{} }
func (m *OrganisationSetting) String() string            { return proto.CompactTextString(m) }
func (*OrganisationSetting) ProtoMessage()               {}
func (*OrganisationSetting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *OrganisationSetting) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrganisationSetting) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *OrganisationSetting) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *OrganisationSetting) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type OrganisationModule struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId       string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	DisplayName string `protobuf:"bytes,5,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
}

func (m *OrganisationModule) Reset()                    { *m = OrganisationModule{} }
func (m *OrganisationModule) String() string            { return proto.CompactTextString(m) }
func (*OrganisationModule) ProtoMessage()               {}
func (*OrganisationModule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *OrganisationModule) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrganisationModule) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *OrganisationModule) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type OrgInfo struct {
	OrgId   string                        `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Type    OrganisationType              `protobuf:"varint,2,opt,name=type,enum=go.micro.srv.organisation.OrganisationType" json:"type,omitempty"`
	Owner   *go_micro_srv_user.User       `protobuf:"bytes,7,opt,name=owner" json:"owner,omitempty"`
	Modules []*go_micro_srv_static.Module `protobuf:"bytes,5,rep,name=modules" json:"modules,omitempty"`
}

func (m *OrgInfo) Reset()                    { *m = OrgInfo{} }
func (m *OrgInfo) String() string            { return proto.CompactTextString(m) }
func (*OrgInfo) ProtoMessage()               {}
func (*OrgInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *OrgInfo) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *OrgInfo) GetType() OrganisationType {
	if m != nil {
		return m.Type
	}
	return OrganisationType_NONE
}

func (m *OrgInfo) GetOwner() *go_micro_srv_user.User {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *OrgInfo) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

type UpdateModulesRequest struct {
	Modules []*go_micro_srv_static.Module `protobuf:"bytes,1,rep,name=modules" json:"modules,omitempty"`
	OrgId   string                        `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *UpdateModulesRequest) Reset()                    { *m = UpdateModulesRequest{} }
func (m *UpdateModulesRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateModulesRequest) ProtoMessage()               {}
func (*UpdateModulesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *UpdateModulesRequest) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

func (m *UpdateModulesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type UpdateModulesResponse struct {
	Data    *UpdateModulesResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateModulesResponse) Reset()                    { *m = UpdateModulesResponse{} }
func (m *UpdateModulesResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateModulesResponse) ProtoMessage()               {}
func (*UpdateModulesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *UpdateModulesResponse) GetData() *UpdateModulesResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateModulesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateModulesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateModulesResponse_Data struct {
	Modules []*go_micro_srv_static.Module `protobuf:"bytes,1,rep,name=modules" json:"modules,omitempty"`
}

func (m *UpdateModulesResponse_Data) Reset()                    { *m = UpdateModulesResponse_Data{} }
func (m *UpdateModulesResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*UpdateModulesResponse_Data) ProtoMessage()               {}
func (*UpdateModulesResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25, 0} }

func (m *UpdateModulesResponse_Data) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

type GetModulesByOrgRequest struct {
	OrgId string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *GetModulesByOrgRequest) Reset()                    { *m = GetModulesByOrgRequest{} }
func (m *GetModulesByOrgRequest) String() string            { return proto.CompactTextString(m) }
func (*GetModulesByOrgRequest) ProtoMessage()               {}
func (*GetModulesByOrgRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *GetModulesByOrgRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type GetModulesByOrgResponse struct {
	Data    *GetModulesByOrgResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetModulesByOrgResponse) Reset()                    { *m = GetModulesByOrgResponse{} }
func (m *GetModulesByOrgResponse) String() string            { return proto.CompactTextString(m) }
func (*GetModulesByOrgResponse) ProtoMessage()               {}
func (*GetModulesByOrgResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *GetModulesByOrgResponse) GetData() *GetModulesByOrgResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetModulesByOrgResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetModulesByOrgResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetModulesByOrgResponse_Data struct {
	Modules []*go_micro_srv_static.Module `protobuf:"bytes,1,rep,name=modules" json:"modules,omitempty"`
}

func (m *GetModulesByOrgResponse_Data) Reset()         { *m = GetModulesByOrgResponse_Data{} }
func (m *GetModulesByOrgResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetModulesByOrgResponse_Data) ProtoMessage()    {}
func (*GetModulesByOrgResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{27, 0}
}

func (m *GetModulesByOrgResponse_Data) GetModules() []*go_micro_srv_static.Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

func init() {
	proto.RegisterType((*OrgData)(nil), "go.micro.srv.organisation.OrgData")
	proto.RegisterType((*AllRequest)(nil), "go.micro.srv.organisation.AllRequest")
	proto.RegisterType((*AllResponse)(nil), "go.micro.srv.organisation.AllResponse")
	proto.RegisterType((*AllResponse_Data)(nil), "go.micro.srv.organisation.AllResponse.Data")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.organisation.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.organisation.CreateResponse")
	proto.RegisterType((*CreateResponse_Data)(nil), "go.micro.srv.organisation.CreateResponse.Data")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.organisation.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.organisation.UpdateResponse")
	proto.RegisterType((*UpdateResponse_Data)(nil), "go.micro.srv.organisation.UpdateResponse.Data")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.organisation.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.organisation.ReadResponse")
	proto.RegisterType((*CreateOrganisationProfileRequest)(nil), "go.micro.srv.organisation.CreateOrganisationProfileRequest")
	proto.RegisterType((*CreateOrganisationProfileResponse)(nil), "go.micro.srv.organisation.CreateOrganisationProfileResponse")
	proto.RegisterType((*CreateOrganisationProfileResponse_Data)(nil), "go.micro.srv.organisation.CreateOrganisationProfileResponse.Data")
	proto.RegisterType((*CreateOrganisationSettingRequest)(nil), "go.micro.srv.organisation.CreateOrganisationSettingRequest")
	proto.RegisterType((*CreateOrganisationSettingResponse)(nil), "go.micro.srv.organisation.CreateOrganisationSettingResponse")
	proto.RegisterType((*CreateOrganisationSettingResponse_Data)(nil), "go.micro.srv.organisation.CreateOrganisationSettingResponse.Data")
	proto.RegisterType((*ReadOrgInfoRequest)(nil), "go.micro.srv.organisation.ReadOrgInfoRequest")
	proto.RegisterType((*ReadOrgInfoResponse)(nil), "go.micro.srv.organisation.ReadOrgInfoResponse")
	proto.RegisterType((*PutOrgInfoRequest)(nil), "go.micro.srv.organisation.PutOrgInfoRequest")
	proto.RegisterType((*PutOrgInfoResponse)(nil), "go.micro.srv.organisation.PutOrgInfoResponse")
	proto.RegisterType((*WarmupCacheOrganisationRequest)(nil), "go.micro.srv.organisation.WarmupCacheOrganisationRequest")
	proto.RegisterType((*WarmupCacheOrganisationResponse)(nil), "go.micro.srv.organisation.WarmupCacheOrganisationResponse")
	proto.RegisterType((*Organisation)(nil), "go.micro.srv.organisation.Organisation")
	proto.RegisterType((*OrganisationProfile)(nil), "go.micro.srv.organisation.OrganisationProfile")
	proto.RegisterType((*OrganisationSetting)(nil), "go.micro.srv.organisation.OrganisationSetting")
	proto.RegisterType((*OrganisationModule)(nil), "go.micro.srv.organisation.OrganisationModule")
	proto.RegisterType((*OrgInfo)(nil), "go.micro.srv.organisation.OrgInfo")
	proto.RegisterType((*UpdateModulesRequest)(nil), "go.micro.srv.organisation.UpdateModulesRequest")
	proto.RegisterType((*UpdateModulesResponse)(nil), "go.micro.srv.organisation.UpdateModulesResponse")
	proto.RegisterType((*UpdateModulesResponse_Data)(nil), "go.micro.srv.organisation.UpdateModulesResponse.Data")
	proto.RegisterType((*GetModulesByOrgRequest)(nil), "go.micro.srv.organisation.GetModulesByOrgRequest")
	proto.RegisterType((*GetModulesByOrgResponse)(nil), "go.micro.srv.organisation.GetModulesByOrgResponse")
	proto.RegisterType((*GetModulesByOrgResponse_Data)(nil), "go.micro.srv.organisation.GetModulesByOrgResponse.Data")
	proto.RegisterEnum("go.micro.srv.organisation.OrganisationType", OrganisationType_name, OrganisationType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for OrganisationService service

type OrganisationServiceClient interface {
	All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	CreateOrganisationProfile(ctx context.Context, in *CreateOrganisationProfileRequest, opts ...client.CallOption) (*CreateOrganisationProfileResponse, error)
	CreateOrganisationSetting(ctx context.Context, in *CreateOrganisationSettingRequest, opts ...client.CallOption) (*CreateOrganisationSettingResponse, error)
	ReadOrgInfo(ctx context.Context, in *ReadOrgInfoRequest, opts ...client.CallOption) (*ReadOrgInfoResponse, error)
	PutOrgInfo(ctx context.Context, in *PutOrgInfoRequest, opts ...client.CallOption) (*PutOrgInfoResponse, error)
	WarmupCacheOrganisation(ctx context.Context, in *WarmupCacheOrganisationRequest, opts ...client.CallOption) (*WarmupCacheOrganisationResponse, error)
	UpdateModules(ctx context.Context, in *UpdateModulesRequest, opts ...client.CallOption) (*UpdateModulesResponse, error)
	GetModulesByOrg(ctx context.Context, in *GetModulesByOrgRequest, opts ...client.CallOption) (*GetModulesByOrgResponse, error)
}

type organisationServiceClient struct {
	c           client.Client
	serviceName string
}

func NewOrganisationServiceClient(serviceName string, c client.Client) OrganisationServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.organisation"
	}
	return &organisationServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *organisationServiceClient) All(ctx context.Context, in *AllRequest, opts ...client.CallOption) (*AllResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.All", in)
	out := new(AllResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) CreateOrganisationProfile(ctx context.Context, in *CreateOrganisationProfileRequest, opts ...client.CallOption) (*CreateOrganisationProfileResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.CreateOrganisationProfile", in)
	out := new(CreateOrganisationProfileResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) CreateOrganisationSetting(ctx context.Context, in *CreateOrganisationSettingRequest, opts ...client.CallOption) (*CreateOrganisationSettingResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.CreateOrganisationSetting", in)
	out := new(CreateOrganisationSettingResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) ReadOrgInfo(ctx context.Context, in *ReadOrgInfoRequest, opts ...client.CallOption) (*ReadOrgInfoResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.ReadOrgInfo", in)
	out := new(ReadOrgInfoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) PutOrgInfo(ctx context.Context, in *PutOrgInfoRequest, opts ...client.CallOption) (*PutOrgInfoResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.PutOrgInfo", in)
	out := new(PutOrgInfoResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) WarmupCacheOrganisation(ctx context.Context, in *WarmupCacheOrganisationRequest, opts ...client.CallOption) (*WarmupCacheOrganisationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.WarmupCacheOrganisation", in)
	out := new(WarmupCacheOrganisationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) UpdateModules(ctx context.Context, in *UpdateModulesRequest, opts ...client.CallOption) (*UpdateModulesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.UpdateModules", in)
	out := new(UpdateModulesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *organisationServiceClient) GetModulesByOrg(ctx context.Context, in *GetModulesByOrgRequest, opts ...client.CallOption) (*GetModulesByOrgResponse, error) {
	req := c.c.NewRequest(c.serviceName, "OrganisationService.GetModulesByOrg", in)
	out := new(GetModulesByOrgResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OrganisationService service

type OrganisationServiceHandler interface {
	All(context.Context, *AllRequest, *AllResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	CreateOrganisationProfile(context.Context, *CreateOrganisationProfileRequest, *CreateOrganisationProfileResponse) error
	CreateOrganisationSetting(context.Context, *CreateOrganisationSettingRequest, *CreateOrganisationSettingResponse) error
	ReadOrgInfo(context.Context, *ReadOrgInfoRequest, *ReadOrgInfoResponse) error
	PutOrgInfo(context.Context, *PutOrgInfoRequest, *PutOrgInfoResponse) error
	WarmupCacheOrganisation(context.Context, *WarmupCacheOrganisationRequest, *WarmupCacheOrganisationResponse) error
	UpdateModules(context.Context, *UpdateModulesRequest, *UpdateModulesResponse) error
	GetModulesByOrg(context.Context, *GetModulesByOrgRequest, *GetModulesByOrgResponse) error
}

func RegisterOrganisationServiceHandler(s server.Server, hdlr OrganisationServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&OrganisationService{hdlr}, opts...))
}

type OrganisationService struct {
	OrganisationServiceHandler
}

func (h *OrganisationService) All(ctx context.Context, in *AllRequest, out *AllResponse) error {
	return h.OrganisationServiceHandler.All(ctx, in, out)
}

func (h *OrganisationService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.OrganisationServiceHandler.Create(ctx, in, out)
}

func (h *OrganisationService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.OrganisationServiceHandler.Update(ctx, in, out)
}

func (h *OrganisationService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.OrganisationServiceHandler.Read(ctx, in, out)
}

func (h *OrganisationService) CreateOrganisationProfile(ctx context.Context, in *CreateOrganisationProfileRequest, out *CreateOrganisationProfileResponse) error {
	return h.OrganisationServiceHandler.CreateOrganisationProfile(ctx, in, out)
}

func (h *OrganisationService) CreateOrganisationSetting(ctx context.Context, in *CreateOrganisationSettingRequest, out *CreateOrganisationSettingResponse) error {
	return h.OrganisationServiceHandler.CreateOrganisationSetting(ctx, in, out)
}

func (h *OrganisationService) ReadOrgInfo(ctx context.Context, in *ReadOrgInfoRequest, out *ReadOrgInfoResponse) error {
	return h.OrganisationServiceHandler.ReadOrgInfo(ctx, in, out)
}

func (h *OrganisationService) PutOrgInfo(ctx context.Context, in *PutOrgInfoRequest, out *PutOrgInfoResponse) error {
	return h.OrganisationServiceHandler.PutOrgInfo(ctx, in, out)
}

func (h *OrganisationService) WarmupCacheOrganisation(ctx context.Context, in *WarmupCacheOrganisationRequest, out *WarmupCacheOrganisationResponse) error {
	return h.OrganisationServiceHandler.WarmupCacheOrganisation(ctx, in, out)
}

func (h *OrganisationService) UpdateModules(ctx context.Context, in *UpdateModulesRequest, out *UpdateModulesResponse) error {
	return h.OrganisationServiceHandler.UpdateModules(ctx, in, out)
}

func (h *OrganisationService) GetModulesByOrg(ctx context.Context, in *GetModulesByOrgRequest, out *GetModulesByOrgResponse) error {
	return h.OrganisationServiceHandler.GetModulesByOrg(ctx, in, out)
}

func init() {
	proto.RegisterFile("server/organisation-srv/proto/organisation/organisation.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x58, 0xcb, 0x6f, 0xe3, 0xc4,
	0x1f, 0x8f, 0xf3, 0x6c, 0xbf, 0x49, 0xfa, 0xcb, 0x6f, 0xb6, 0xbb, 0xf5, 0x06, 0x01, 0xad, 0xa1,
	0x6c, 0xa1, 0x34, 0x85, 0xa2, 0x65, 0xb5, 0x2c, 0xd5, 0xaa, 0xdb, 0x06, 0xa8, 0x56, 0x6d, 0xa2,
	0xe9, 0x03, 0x21, 0x21, 0x2a, 0x63, 0x4f, 0xb2, 0x16, 0x8e, 0x1d, 0xc6, 0x4e, 0x51, 0xf9, 0x0b,
	0x38, 0x73, 0x42, 0xe2, 0xca, 0x3f, 0xc1, 0x85, 0x2b, 0x47, 0x0e, 0x7b, 0xe0, 0x6f, 0x81, 0x13,
	0xf2, 0x3c, 0x52, 0x3b, 0x4d, 0x1c, 0x3b, 0xa4, 0xe2, 0x62, 0x7b, 0x66, 0xbe, 0xef, 0xc7, 0xcc,
	0x67, 0x0c, 0xbb, 0x1e, 0xa1, 0x97, 0x84, 0x6e, 0xbb, 0xb4, 0xab, 0x3b, 0x96, 0xa7, 0xfb, 0x96,
	0xeb, 0x6c, 0x79, 0xf4, 0x72, 0xbb, 0x4f, 0x5d, 0xdf, 0x8d, 0x4c, 0x47, 0x06, 0x0d, 0xb6, 0x8e,
	0xee, 0x77, 0xdd, 0x46, 0xcf, 0x32, 0xa8, 0xdb, 0xf0, 0xe8, 0x65, 0x23, 0x4c, 0x50, 0xdf, 0x14,
	0x92, 0x3d, 0x5f, 0xf7, 0x2d, 0x23, 0x24, 0x93, 0x4f, 0x88, 0x17, 0x97, 0x53, 0x6f, 0x08, 0x62,
	0xc3, 0x75, 0x7c, 0xe2, 0xf8, 0x21, 0x6a, 0x31, 0x23, 0xdf, 0x23, 0xf4, 0xba, 0x61, 0xb8, 0x83,
	0x08, 0xbd, 0x98, 0x91, 0x6f, 0x41, 0xbf, 0x2e, 0xe8, 0x07, 0x1e, 0xa1, 0x21, 0xe2, 0x60, 0xc8,
	0x1e, 0x9c, 0x4c, 0x3b, 0x87, 0x52, 0x8b, 0x76, 0x0f, 0x74, 0x5f, 0x47, 0xcf, 0xa1, 0x12, 0x76,
	0x47, 0x55, 0x56, 0x95, 0x8d, 0xf2, 0xce, 0x83, 0xc6, 0x44, 0x87, 0x1b, 0xad, 0xd0, 0x00, 0x47,
	0x98, 0xb5, 0x1f, 0x14, 0x80, 0x3d, 0xdb, 0xc6, 0xe4, 0xdb, 0x01, 0xf1, 0x7c, 0x74, 0x0f, 0x8a,
	0x6e, 0xa7, 0xe3, 0x11, 0x9f, 0x49, 0xcd, 0x61, 0x31, 0x42, 0xcb, 0x50, 0xb0, 0xad, 0x9e, 0xe5,
	0xab, 0x59, 0x36, 0xcd, 0x07, 0x68, 0x1d, 0x96, 0x3c, 0x97, 0xfa, 0x17, 0x7d, 0x9d, 0xea, 0x3d,
	0xe2, 0x13, 0xaa, 0xe6, 0x56, 0x95, 0x8d, 0x45, 0x5c, 0x0d, 0x66, 0xdb, 0x72, 0x72, 0x48, 0x66,
	0x5a, 0x94, 0x18, 0xcc, 0xe4, 0xfc, 0x35, 0xd9, 0x81, 0x9c, 0xd4, 0x5e, 0x2a, 0x50, 0x66, 0xa6,
	0x78, 0x7d, 0xd7, 0xf1, 0x08, 0x7a, 0x0a, 0x79, 0x53, 0xf7, 0x75, 0xe1, 0xdf, 0x66, 0x8c, 0x7f,
	0x21, 0xae, 0x46, 0x10, 0x22, 0xcc, 0x18, 0x11, 0x82, 0xbc, 0xe1, 0x9a, 0x44, 0xd8, 0xcc, 0xbe,
	0x91, 0x0a, 0xa5, 0x1e, 0xf1, 0x3c, 0xbd, 0x4b, 0x84, 0xad, 0x72, 0x58, 0x3f, 0x83, 0x3c, 0x0b,
	0xef, 0x11, 0x54, 0xc3, 0xc2, 0x3d, 0x55, 0x59, 0xcd, 0xa5, 0x89, 0x6f, 0x94, 0x5b, 0xfb, 0x4b,
	0x81, 0xea, 0x3e, 0x25, 0xba, 0x4f, 0x64, 0x8c, 0xe7, 0x99, 0x3f, 0xb4, 0x09, 0xf9, 0xa0, 0x4a,
	0x98, 0x8f, 0xe5, 0x9d, 0x95, 0xa8, 0x10, 0x56, 0x3f, 0x67, 0x1e, 0xa1, 0x98, 0x11, 0xa1, 0x47,
	0x50, 0x12, 0xc5, 0xc7, 0x9c, 0x2f, 0xef, 0xbc, 0x1a, 0xa5, 0x97, 0x95, 0xb9, 0xc7, 0xdf, 0x58,
	0x52, 0xa3, 0x87, 0x50, 0xea, 0xb9, 0xe6, 0xc0, 0x26, 0x9e, 0x9a, 0x67, 0xd1, 0x78, 0x25, 0xca,
	0x28, 0x3a, 0xe6, 0x88, 0xd1, 0x60, 0x49, 0xab, 0xfd, 0x96, 0x85, 0x25, 0xe9, 0xbb, 0x48, 0xea,
	0xb3, 0x48, 0x52, 0x1b, 0x31, 0x4e, 0x47, 0x19, 0x67, 0xcf, 0xeb, 0xaf, 0x8a, 0x48, 0xec, 0x5c,
	0xe3, 0x1e, 0x0a, 0x65, 0x36, 0x55, 0x28, 0x65, 0xc2, 0x72, 0x09, 0x12, 0xa6, 0x7d, 0x09, 0xd5,
	0xb3, 0xbe, 0x79, 0x4b, 0xb5, 0xa3, 0xfd, 0xa9, 0xc0, 0x92, 0x14, 0x9f, 0x3a, 0x3d, 0x51, 0xc6,
	0xd9, 0xd3, 0x73, 0x72, 0x0b, 0xd9, 0xd1, 0xde, 0x84, 0x32, 0x26, 0xba, 0x29, 0xa3, 0x76, 0x17,
	0x8a, 0x2e, 0xed, 0x5e, 0x58, 0x26, 0x93, 0xba, 0x88, 0x0b, 0x2e, 0xed, 0x1e, 0x9a, 0x9a, 0x0f,
	0x15, 0x4e, 0x25, 0x9c, 0xff, 0x30, 0xe2, 0xbc, 0x16, 0xaf, 0x7a, 0x56, 0x87, 0x35, 0x1b, 0x56,
	0x79, 0x69, 0x87, 0xed, 0x6f, 0x53, 0xb7, 0x63, 0xd9, 0xc3, 0x34, 0x7f, 0x06, 0xa5, 0x3e, 0x9f,
	0x49, 0x90, 0x89, 0x71, 0x72, 0x24, 0xbb, 0xf6, 0xb7, 0x02, 0x6b, 0x31, 0xea, 0x84, 0xe7, 0x67,
	0x11, 0xcf, 0xf7, 0xa6, 0x76, 0x65, 0x8c, 0xac, 0xd9, 0x2b, 0xa1, 0x2d, 0x2a, 0x61, 0x7e, 0xce,
	0x8f, 0x0d, 0xf5, 0x09, 0xf1, 0x7d, 0xcb, 0xe9, 0x86, 0x42, 0xed, 0xf1, 0x99, 0x94, 0xda, 0xa4,
	0x1c, 0xc9, 0x3e, 0x21, 0xd4, 0x43, 0x75, 0x73, 0x08, 0xf5, 0x88, 0xac, 0xb9, 0x84, 0x7a, 0x4e,
	0xce, 0x6f, 0x02, 0x0a, 0x7a, 0xa9, 0x45, 0xbb, 0x87, 0x4e, 0xc7, 0x9d, 0xd2, 0x78, 0xa7, 0x70,
	0x27, 0x42, 0x2c, 0x42, 0xb3, 0x0b, 0x0b, 0x8c, 0xda, 0xe9, 0xb8, 0xc9, 0x7a, 0x90, 0x71, 0x97,
	0x5c, 0xfe, 0xa1, 0x59, 0xf0, 0xff, 0xf6, 0xc0, 0x4f, 0x64, 0x41, 0x44, 0x55, 0x36, 0xbd, 0xaa,
	0x65, 0x40, 0x61, 0x55, 0xdc, 0x7e, 0xcd, 0x81, 0xd7, 0x3e, 0xd7, 0x69, 0x6f, 0xd0, 0xdf, 0xd7,
	0x8d, 0x17, 0x91, 0xc4, 0x49, 0x6b, 0x6e, 0x02, 0x26, 0x25, 0x19, 0x60, 0xca, 0x8e, 0x03, 0x4c,
	0x6b, 0xf0, 0xfa, 0x44, 0x7d, 0xc2, 0xa4, 0x9f, 0xf3, 0x50, 0x09, 0x2f, 0xa0, 0x25, 0xc8, 0x0e,
	0x63, 0x91, 0xb5, 0xcc, 0xa0, 0x6e, 0x1c, 0xbd, 0x47, 0x84, 0x02, 0xf6, 0x1d, 0x00, 0x2f, 0xff,
	0xaa, 0xcf, 0x8b, 0x66, 0x29, 0x16, 0x78, 0x85, 0x45, 0x9f, 0x5e, 0xf5, 0x09, 0x66, 0x8c, 0xe8,
	0x29, 0x14, 0xfb, 0x3a, 0x25, 0x8e, 0xcf, 0x80, 0x5e, 0x8a, 0x5d, 0x5c, 0xb0, 0xa1, 0x5d, 0x28,
	0x18, 0x2f, 0x2c, 0xdb, 0x54, 0x0b, 0xe9, 0xb0, 0x17, 0xe7, 0x0a, 0xc3, 0x95, 0x62, 0x72, 0xb8,
	0x82, 0x1e, 0xc3, 0xa2, 0xed, 0x1a, 0x02, 0xf5, 0x95, 0xc6, 0x31, 0x4a, 0xa8, 0xdf, 0xb6, 0x75,
	0x83, 0xe0, 0x6b, 0x6a, 0xb4, 0x05, 0x05, 0xf7, 0x3b, 0x87, 0x50, 0x75, 0x21, 0xfe, 0x58, 0xe7,
	0x54, 0x41, 0x67, 0x1a, 0xac, 0xbb, 0x4d, 0x75, 0x91, 0x35, 0xac, 0x1c, 0x06, 0x2b, 0x03, 0x76,
	0xb2, 0x9a, 0x2a, 0xf0, 0x15, 0x31, 0x0c, 0xa0, 0xb9, 0xe9, 0xf6, 0x74, 0xcb, 0x51, 0xcb, 0x2c,
	0x57, 0x62, 0x14, 0x40, 0x73, 0xd2, 0xd3, 0x2d, 0x5b, 0xad, 0xf0, 0x02, 0x67, 0x03, 0xf4, 0x06,
	0x54, 0x3b, 0xd4, 0x22, 0x8e, 0x69, 0x5f, 0x5d, 0xb0, 0x04, 0x57, 0xd9, 0x6a, 0x45, 0x4e, 0x1e,
	0xeb, 0x3d, 0xa2, 0xf5, 0xe1, 0xce, 0x98, 0xfd, 0xf3, 0x46, 0x8d, 0x5c, 0xf7, 0x50, 0x36, 0xdc,
	0x43, 0x21, 0x27, 0x72, 0x13, 0x9d, 0xc8, 0x47, 0x9c, 0x18, 0xd5, 0x28, 0xb6, 0x91, 0xdb, 0xd4,
	0xf8, 0x15, 0xa0, 0xb0, 0x46, 0x9e, 0xf3, 0xa4, 0x0a, 0xd7, 0xa0, 0x62, 0x5a, 0x5e, 0xdf, 0xd6,
	0x45, 0x10, 0x0b, 0x6c, 0xb1, 0x2c, 0xe6, 0x58, 0x0c, 0x7f, 0x57, 0xd8, 0xcd, 0x2c, 0xd8, 0x08,
	0x26, 0x6d, 0x36, 0xb2, 0x9f, 0xb2, 0xb3, 0xf6, 0xd3, 0xb0, 0xba, 0x4a, 0x89, 0xaa, 0x2b, 0x54,
	0xfe, 0x85, 0x14, 0x68, 0xdd, 0x84, 0x65, 0x0e, 0xea, 0xf8, 0x82, 0x27, 0x37, 0xad, 0x90, 0x38,
	0x25, 0x45, 0x37, 0x8d, 0x0f, 0xa9, 0xf6, 0x87, 0x02, 0x77, 0x47, 0xd4, 0x88, 0xed, 0xff, 0x30,
	0x72, 0x32, 0x3e, 0x9c, 0x8a, 0x3d, 0x47, 0xf8, 0x67, 0x3f, 0x0d, 0x77, 0xc5, 0x69, 0x38, 0x9b,
	0xa3, 0xda, 0x36, 0xdc, 0xfb, 0x94, 0xf8, 0xc2, 0x9a, 0x67, 0x57, 0x2d, 0xda, 0x9d, 0x72, 0xfc,
	0xbd, 0x54, 0x60, 0xe5, 0x06, 0x87, 0x08, 0xc2, 0xf3, 0x48, 0x10, 0x1e, 0xc5, 0x04, 0x61, 0x82,
	0x84, 0xff, 0x2a, 0x0c, 0xef, 0x10, 0xa8, 0x8d, 0x96, 0x2f, 0x5a, 0x80, 0xfc, 0x71, 0xeb, 0xb8,
	0x59, 0xcb, 0x04, 0x5f, 0xb8, 0xd5, 0x3a, 0xad, 0x29, 0xa8, 0x02, 0x0b, 0xfb, 0x67, 0x27, 0xa7,
	0xad, 0xa3, 0x26, 0xae, 0x65, 0x51, 0x19, 0x4a, 0xed, 0x3d, 0x7c, 0x7a, 0xdc, 0xc4, 0xb5, 0x5c,
	0xb0, 0x84, 0x9b, 0x9f, 0x34, 0x31, 0x6e, 0xe2, 0x5a, 0x1e, 0x2d, 0x43, 0xed, 0xa4, 0x89, 0xcf,
	0x0f, 0xf7, 0x9b, 0x17, 0x6d, 0xdc, 0x3a, 0x3f, 0x3c, 0x68, 0xe2, 0x5a, 0x61, 0xe7, 0x17, 0x18,
	0xdd, 0x42, 0xe8, 0xa5, 0x65, 0x10, 0x74, 0x0e, 0xb9, 0x3d, 0xdb, 0x46, 0xeb, 0xd3, 0x7e, 0x13,
	0xb0, 0xcc, 0xd4, 0xdf, 0x4a, 0xf6, 0x37, 0x41, 0xcb, 0xa0, 0x0b, 0x28, 0x72, 0x20, 0x86, 0x36,
	0x12, 0x5c, 0x56, 0xb9, 0xf4, 0xb7, 0x13, 0x5f, 0x6b, 0xb9, 0x02, 0x5e, 0xcf, 0xb1, 0x0a, 0x22,
	0xd7, 0xc0, 0x58, 0x05, 0xd1, 0x8b, 0x99, 0x96, 0x41, 0x5f, 0x40, 0x3e, 0x40, 0x5b, 0x28, 0xce,
	0xe7, 0xd0, 0x6d, 0xa9, 0xfe, 0x60, 0x2a, 0xdd, 0x50, 0xf4, 0x4f, 0x0a, 0xdc, 0x9f, 0x78, 0x23,
	0x40, 0x4f, 0x66, 0xbb, 0x47, 0x70, 0x2b, 0x3e, 0xfe, 0x37, 0x97, 0x90, 0x89, 0xa6, 0xc9, 0x03,
	0xe7, 0xc9, 0x6c, 0xb8, 0x7b, 0x16, 0xd3, 0x46, 0x40, 0xbb, 0x96, 0x41, 0x0e, 0xbf, 0x9d, 0xca,
	0x53, 0x63, 0x6b, 0x4a, 0xbc, 0xa3, 0x88, 0xb6, 0xde, 0x48, 0x4a, 0x3e, 0xd4, 0xf7, 0x0d, 0xc0,
	0x35, 0x5a, 0x45, 0xef, 0xc6, 0xf0, 0xdf, 0xc0, 0xcf, 0xf5, 0xad, 0x84, 0xd4, 0x43, 0x65, 0x3f,
	0x2a, 0xb0, 0x32, 0x01, 0x95, 0xa2, 0xc7, 0x31, 0xc2, 0xe2, 0x91, 0x73, 0xfd, 0xa3, 0x59, 0x58,
	0x87, 0x46, 0xf9, 0xf2, 0x3f, 0x8a, 0xd8, 0x31, 0xd1, 0x76, 0xf2, 0xd3, 0x85, 0xeb, 0x7f, 0x2f,
	0xed, 0x71, 0xa4, 0x65, 0xd0, 0xf7, 0xf0, 0xbf, 0x91, 0x4d, 0x1a, 0xbd, 0x9f, 0x66, 0x43, 0xe7,
	0x9a, 0x77, 0xd2, 0x9f, 0x01, 0x5a, 0xe6, 0xeb, 0x22, 0xfb, 0x6d, 0xfc, 0xc1, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0xda, 0x21, 0x0d, 0x37, 0x46, 0x17, 0x00, 0x00,
}
