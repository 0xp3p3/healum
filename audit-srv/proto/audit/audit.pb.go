// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/audit-srv/proto/audit/audit.proto

/*
Package go_micro_srv_audit is a generated protocol buffer package.

It is generated from these files:
	server/audit-srv/proto/audit/audit.proto

It has these top-level messages:
	AuditData
	AuditArrData
	AllAuditsRequest
	AllAuditsResponse
	CreateAuditRequest
	CreateAuditResponse
	FilterAuditsRequest
	FilterAuditsResponse
	Audit
*/
package go_micro_srv_audit

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import go_micro_srv_static "server/static-srv/proto/pubsub"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActionType int32

const (
	ActionType_ActionType_NONE ActionType = 0
	ActionType_VIEW            ActionType = 1
	ActionType_UPDATE          ActionType = 2
	ActionType_CREATED         ActionType = 3
	ActionType_DELETED         ActionType = 4
)

var ActionType_name = map[int32]string{
	0: "ActionType_NONE",
	1: "VIEW",
	2: "UPDATE",
	3: "CREATED",
	4: "DELETED",
}
var ActionType_value = map[string]int32{
	"ActionType_NONE": 0,
	"VIEW":            1,
	"UPDATE":          2,
	"CREATED":         3,
	"DELETED":         4,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}
func (ActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AuditData struct {
	Audit *Audit `protobuf:"bytes,1,opt,name=audit" json:"audit,omitempty"`
}

func (m *AuditData) Reset()                    { *m = AuditData{} }
func (m *AuditData) String() string            { return proto.CompactTextString(m) }
func (*AuditData) ProtoMessage()               {}
func (*AuditData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuditData) GetAudit() *Audit {
	if m != nil {
		return m.Audit
	}
	return nil
}

type AuditArrData struct {
	Audits []*Audit `protobuf:"bytes,1,rep,name=audits" json:"audits,omitempty"`
}

func (m *AuditArrData) Reset()                    { *m = AuditArrData{} }
func (m *AuditArrData) String() string            { return proto.CompactTextString(m) }
func (*AuditArrData) ProtoMessage()               {}
func (*AuditArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuditArrData) GetAudits() []*Audit {
	if m != nil {
		return m.Audits
	}
	return nil
}

type AllAuditsRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllAuditsRequest) Reset()                    { *m = AllAuditsRequest{} }
func (m *AllAuditsRequest) String() string            { return proto.CompactTextString(m) }
func (*AllAuditsRequest) ProtoMessage()               {}
func (*AllAuditsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AllAuditsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllAuditsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllAuditsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllAuditsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllAuditsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllAuditsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllAuditsResponse struct {
	Data    *AuditArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllAuditsResponse) Reset()                    { *m = AllAuditsResponse{} }
func (m *AllAuditsResponse) String() string            { return proto.CompactTextString(m) }
func (*AllAuditsResponse) ProtoMessage()               {}
func (*AllAuditsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AllAuditsResponse) GetData() *AuditArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllAuditsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllAuditsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateAuditRequest struct {
	Audit  *Audit `protobuf:"bytes,1,opt,name=audit" json:"audit,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,4,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateAuditRequest) Reset()                    { *m = CreateAuditRequest{} }
func (m *CreateAuditRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAuditRequest) ProtoMessage()               {}
func (*CreateAuditRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateAuditRequest) GetAudit() *Audit {
	if m != nil {
		return m.Audit
	}
	return nil
}

func (m *CreateAuditRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *CreateAuditRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateAuditRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateAuditResponse struct {
	Data    *AuditData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64      `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateAuditResponse) Reset()                    { *m = CreateAuditResponse{} }
func (m *CreateAuditResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAuditResponse) ProtoMessage()               {}
func (*CreateAuditResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateAuditResponse) GetData() *AuditData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateAuditResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateAuditResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterAuditsRequest struct {
	OrgId            string     `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId           string     `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	ActionType       ActionType `protobuf:"varint,3,opt,name=action_type,json=actionType,enum=go.micro.srv.audit.ActionType" json:"action_type,omitempty"`
	ActionName       string     `protobuf:"bytes,4,opt,name=action_name,json=actionName" json:"action_name,omitempty"`
	ActionSourceUser string     `protobuf:"bytes,5,opt,name=action_source_user,json=actionSourceUser" json:"action_source_user,omitempty"`
	ActionTargetUser string     `protobuf:"bytes,6,opt,name=action_target_user,json=actionTargetUser" json:"action_target_user,omitempty"`
	ActionTimestamp  int64      `protobuf:"varint,7,opt,name=action_timestamp,json=actionTimestamp" json:"action_timestamp,omitempty"`
	ActionResource   string     `protobuf:"bytes,8,opt,name=action_resource,json=actionResource" json:"action_resource,omitempty"`
	ActionService    string     `protobuf:"bytes,9,opt,name=action_service,json=actionService" json:"action_service,omitempty"`
	ActionMethod     string     `protobuf:"bytes,10,opt,name=action_method,json=actionMethod" json:"action_method,omitempty"`
	ActionMetaData   string     `protobuf:"bytes,11,opt,name=action_meta_data,json=actionMetaData" json:"action_meta_data,omitempty"`
	Limit            int64      `protobuf:"varint,12,opt,name=limit" json:"limit,omitempty"`
	Offset           int64      `protobuf:"varint,13,opt,name=offset" json:"offset,omitempty"`
	SortParameter    string     `protobuf:"bytes,14,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection    string     `protobuf:"bytes,15,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *FilterAuditsRequest) Reset()                    { *m = FilterAuditsRequest{} }
func (m *FilterAuditsRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterAuditsRequest) ProtoMessage()               {}
func (*FilterAuditsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *FilterAuditsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterAuditsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterAuditsRequest) GetActionType() ActionType {
	if m != nil {
		return m.ActionType
	}
	return ActionType_ActionType_NONE
}

func (m *FilterAuditsRequest) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *FilterAuditsRequest) GetActionSourceUser() string {
	if m != nil {
		return m.ActionSourceUser
	}
	return ""
}

func (m *FilterAuditsRequest) GetActionTargetUser() string {
	if m != nil {
		return m.ActionTargetUser
	}
	return ""
}

func (m *FilterAuditsRequest) GetActionTimestamp() int64 {
	if m != nil {
		return m.ActionTimestamp
	}
	return 0
}

func (m *FilterAuditsRequest) GetActionResource() string {
	if m != nil {
		return m.ActionResource
	}
	return ""
}

func (m *FilterAuditsRequest) GetActionService() string {
	if m != nil {
		return m.ActionService
	}
	return ""
}

func (m *FilterAuditsRequest) GetActionMethod() string {
	if m != nil {
		return m.ActionMethod
	}
	return ""
}

func (m *FilterAuditsRequest) GetActionMetaData() string {
	if m != nil {
		return m.ActionMetaData
	}
	return ""
}

func (m *FilterAuditsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterAuditsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterAuditsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterAuditsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type FilterAuditsResponse struct {
	Data    *AuditArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterAuditsResponse) Reset()                    { *m = FilterAuditsResponse{} }
func (m *FilterAuditsResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterAuditsResponse) ProtoMessage()               {}
func (*FilterAuditsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *FilterAuditsResponse) GetData() *AuditArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterAuditsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterAuditsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Audit struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId                string     `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created              int64      `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated              int64      `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	ActionName           string     `protobuf:"bytes,5,opt,name=action_name,json=actionName" json:"action_name,omitempty"`
	ActionType           ActionType `protobuf:"varint,6,opt,name=action_type,json=actionType,enum=go.micro.srv.audit.ActionType" json:"action_type,omitempty"`
	ActionSourceUser     string     `protobuf:"bytes,7,opt,name=action_source_user,json=actionSourceUser" json:"action_source_user,omitempty"`
	ActionTargetUser     string     `protobuf:"bytes,8,opt,name=action_target_user,json=actionTargetUser" json:"action_target_user,omitempty"`
	ActionTimestamp      int64      `protobuf:"varint,9,opt,name=action_timestamp,json=actionTimestamp" json:"action_timestamp,omitempty"`
	ActionResource       string     `protobuf:"bytes,10,opt,name=action_resource,json=actionResource" json:"action_resource,omitempty"`
	ActionParameters     string     `protobuf:"bytes,11,opt,name=action_parameters,json=actionParameters" json:"action_parameters,omitempty"`
	ActionService        string     `protobuf:"bytes,12,opt,name=action_service,json=actionService" json:"action_service,omitempty"`
	ActionMethod         string     `protobuf:"bytes,13,opt,name=action_method,json=actionMethod" json:"action_method,omitempty"`
	ActionMetaData       string     `protobuf:"bytes,14,opt,name=action_meta_data,json=actionMetaData" json:"action_meta_data,omitempty"`
	ActionAuthorisation  string     `protobuf:"bytes,15,opt,name=action_authorisation,json=actionAuthorisation" json:"action_authorisation,omitempty"`
	ActionAuthentication string     `protobuf:"bytes,16,opt,name=action_authentication,json=actionAuthentication" json:"action_authentication,omitempty"`
}

func (m *Audit) Reset()                    { *m = Audit{} }
func (m *Audit) String() string            { return proto.CompactTextString(m) }
func (*Audit) ProtoMessage()               {}
func (*Audit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Audit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Audit) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Audit) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Audit) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Audit) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *Audit) GetActionType() ActionType {
	if m != nil {
		return m.ActionType
	}
	return ActionType_ActionType_NONE
}

func (m *Audit) GetActionSourceUser() string {
	if m != nil {
		return m.ActionSourceUser
	}
	return ""
}

func (m *Audit) GetActionTargetUser() string {
	if m != nil {
		return m.ActionTargetUser
	}
	return ""
}

func (m *Audit) GetActionTimestamp() int64 {
	if m != nil {
		return m.ActionTimestamp
	}
	return 0
}

func (m *Audit) GetActionResource() string {
	if m != nil {
		return m.ActionResource
	}
	return ""
}

func (m *Audit) GetActionParameters() string {
	if m != nil {
		return m.ActionParameters
	}
	return ""
}

func (m *Audit) GetActionService() string {
	if m != nil {
		return m.ActionService
	}
	return ""
}

func (m *Audit) GetActionMethod() string {
	if m != nil {
		return m.ActionMethod
	}
	return ""
}

func (m *Audit) GetActionMetaData() string {
	if m != nil {
		return m.ActionMetaData
	}
	return ""
}

func (m *Audit) GetActionAuthorisation() string {
	if m != nil {
		return m.ActionAuthorisation
	}
	return ""
}

func (m *Audit) GetActionAuthentication() string {
	if m != nil {
		return m.ActionAuthentication
	}
	return ""
}

func init() {
	proto.RegisterType((*AuditData)(nil), "go.micro.srv.audit.AuditData")
	proto.RegisterType((*AuditArrData)(nil), "go.micro.srv.audit.AuditArrData")
	proto.RegisterType((*AllAuditsRequest)(nil), "go.micro.srv.audit.AllAuditsRequest")
	proto.RegisterType((*AllAuditsResponse)(nil), "go.micro.srv.audit.AllAuditsResponse")
	proto.RegisterType((*CreateAuditRequest)(nil), "go.micro.srv.audit.CreateAuditRequest")
	proto.RegisterType((*CreateAuditResponse)(nil), "go.micro.srv.audit.CreateAuditResponse")
	proto.RegisterType((*FilterAuditsRequest)(nil), "go.micro.srv.audit.FilterAuditsRequest")
	proto.RegisterType((*FilterAuditsResponse)(nil), "go.micro.srv.audit.FilterAuditsResponse")
	proto.RegisterType((*Audit)(nil), "go.micro.srv.audit.Audit")
	proto.RegisterEnum("go.micro.srv.audit.ActionType", ActionType_name, ActionType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AuditService service

type AuditServiceClient interface {
	Subscribe(ctx context.Context, in *go_micro_srv_static.SubscribeRequest, opts ...client.CallOption) (*go_micro_srv_static.SubscribeResponse, error)
	AllAudits(ctx context.Context, in *AllAuditsRequest, opts ...client.CallOption) (*AllAuditsResponse, error)
	CreateAudit(ctx context.Context, in *CreateAuditRequest, opts ...client.CallOption) (*CreateAuditResponse, error)
	FilterAudits(ctx context.Context, in *FilterAuditsRequest, opts ...client.CallOption) (*FilterAuditsResponse, error)
}

type auditServiceClient struct {
	c           client.Client
	serviceName string
}

func NewAuditServiceClient(serviceName string, c client.Client) AuditServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.audit"
	}
	return &auditServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *auditServiceClient) Subscribe(ctx context.Context, in *go_micro_srv_static.SubscribeRequest, opts ...client.CallOption) (*go_micro_srv_static.SubscribeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AuditService.Subscribe", in)
	out := new(go_micro_srv_static.SubscribeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditServiceClient) AllAudits(ctx context.Context, in *AllAuditsRequest, opts ...client.CallOption) (*AllAuditsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AuditService.AllAudits", in)
	out := new(AllAuditsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditServiceClient) CreateAudit(ctx context.Context, in *CreateAuditRequest, opts ...client.CallOption) (*CreateAuditResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AuditService.CreateAudit", in)
	out := new(CreateAuditResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditServiceClient) FilterAudits(ctx context.Context, in *FilterAuditsRequest, opts ...client.CallOption) (*FilterAuditsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AuditService.FilterAudits", in)
	out := new(FilterAuditsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuditService service

type AuditServiceHandler interface {
	Subscribe(context.Context, *go_micro_srv_static.SubscribeRequest, *go_micro_srv_static.SubscribeResponse) error
	AllAudits(context.Context, *AllAuditsRequest, *AllAuditsResponse) error
	CreateAudit(context.Context, *CreateAuditRequest, *CreateAuditResponse) error
	FilterAudits(context.Context, *FilterAuditsRequest, *FilterAuditsResponse) error
}

func RegisterAuditServiceHandler(s server.Server, hdlr AuditServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AuditService{hdlr}, opts...))
}

type AuditService struct {
	AuditServiceHandler
}

func (h *AuditService) Subscribe(ctx context.Context, in *go_micro_srv_static.SubscribeRequest, out *go_micro_srv_static.SubscribeResponse) error {
	return h.AuditServiceHandler.Subscribe(ctx, in, out)
}

func (h *AuditService) AllAudits(ctx context.Context, in *AllAuditsRequest, out *AllAuditsResponse) error {
	return h.AuditServiceHandler.AllAudits(ctx, in, out)
}

func (h *AuditService) CreateAudit(ctx context.Context, in *CreateAuditRequest, out *CreateAuditResponse) error {
	return h.AuditServiceHandler.CreateAudit(ctx, in, out)
}

func (h *AuditService) FilterAudits(ctx context.Context, in *FilterAuditsRequest, out *FilterAuditsResponse) error {
	return h.AuditServiceHandler.FilterAudits(ctx, in, out)
}

func init() { proto.RegisterFile("server/audit-srv/proto/audit/audit.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 872 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xe1, 0x6e, 0xe3, 0x44,
	0x10, 0xbe, 0x24, 0x8e, 0xd3, 0x4c, 0xd2, 0xd4, 0xb7, 0xed, 0x81, 0x89, 0x04, 0x54, 0x81, 0xde,
	0x05, 0x0e, 0x52, 0xb5, 0xc7, 0x4f, 0x24, 0x14, 0x5d, 0x82, 0x54, 0x89, 0x2b, 0x87, 0xaf, 0x07,
	0x12, 0x42, 0x32, 0x1b, 0x7b, 0x2e, 0x67, 0xa9, 0xae, 0xcd, 0xee, 0x3a, 0xe8, 0x78, 0x08, 0x78,
	0x23, 0xfe, 0xf3, 0x54, 0x20, 0xcf, 0xae, 0x1d, 0xb7, 0x75, 0x49, 0x0b, 0xd2, 0xfd, 0x69, 0x33,
	0x33, 0xdf, 0xcc, 0x8e, 0x67, 0xbf, 0x6f, 0x77, 0x61, 0x2c, 0x51, 0xac, 0x50, 0x1c, 0xf2, 0x2c,
	0x8c, 0xd4, 0xe7, 0x52, 0xac, 0x0e, 0x53, 0x91, 0xa8, 0x44, 0xdb, 0xfa, 0xef, 0x84, 0x3c, 0x8c,
	0x2d, 0x93, 0x49, 0x1c, 0x05, 0x22, 0x99, 0x48, 0xb1, 0x9a, 0x50, 0x64, 0xf8, 0xd8, 0x64, 0x4b,
	0xc5, 0x55, 0x14, 0x54, 0xd2, 0xd3, 0x6c, 0x21, 0xb3, 0x85, 0xf9, 0xa7, 0x0b, 0x8c, 0xbe, 0x84,
	0xee, 0x34, 0xcf, 0x9a, 0x71, 0xc5, 0xd9, 0x21, 0xb4, 0xa9, 0x84, 0xdb, 0xd8, 0x6f, 0x8c, 0x7b,
	0xc7, 0xef, 0x4d, 0xae, 0x57, 0x9f, 0x10, 0xda, 0xd3, 0xb8, 0xd1, 0x14, 0xfa, 0x64, 0x4f, 0x85,
	0xa0, 0x02, 0x47, 0x60, 0x53, 0x40, 0xba, 0x8d, 0xfd, 0xd6, 0xbf, 0x57, 0x30, 0xc0, 0xd1, 0x9f,
	0x0d, 0x70, 0xa6, 0xe7, 0xe7, 0xe4, 0x94, 0x1e, 0xfe, 0x92, 0xa1, 0x54, 0xec, 0x01, 0xd8, 0x89,
	0x58, 0xfa, 0x51, 0x48, 0x9d, 0x74, 0xbd, 0x76, 0x22, 0x96, 0x27, 0x21, 0x7b, 0x17, 0x3a, 0x0a,
	0x79, 0x9c, 0xfb, 0x9b, 0xe4, 0xb7, 0x73, 0xf3, 0x24, 0x64, 0x7b, 0xd0, 0x3e, 0x8f, 0xe2, 0x48,
	0xb9, 0xad, 0xfd, 0xc6, 0xb8, 0xe5, 0x69, 0x83, 0xbd, 0x03, 0x76, 0xf2, 0xea, 0x95, 0x44, 0xe5,
	0x5a, 0xe4, 0x36, 0x16, 0x3b, 0x80, 0x81, 0x4c, 0x84, 0xf2, 0x53, 0x2e, 0x78, 0x8c, 0x0a, 0x85,
	0xdb, 0xa6, 0x6a, 0xdb, 0xb9, 0xf7, 0x79, 0xe1, 0x2c, 0x61, 0x61, 0x24, 0x30, 0x50, 0x51, 0x72,
	0xe1, 0xda, 0x6b, 0xd8, 0xac, 0x70, 0x8e, 0x7e, 0x85, 0xfb, 0x95, 0xfe, 0x65, 0x9a, 0x5c, 0x48,
	0x64, 0x5f, 0x80, 0x15, 0x72, 0xc5, 0xcd, 0x20, 0xf7, 0x6f, 0x1c, 0x83, 0x19, 0x9c, 0x47, 0x68,
	0xc6, 0xc0, 0x0a, 0x92, 0x10, 0xe9, 0xe3, 0x5a, 0x1e, 0xfd, 0x66, 0x2e, 0x74, 0x62, 0x94, 0x92,
	0x2f, 0x91, 0x3e, 0xae, 0xeb, 0x15, 0xe6, 0xe8, 0xf7, 0x06, 0xb0, 0xa7, 0x02, 0xb9, 0x42, 0x3d,
	0x51, 0x33, 0xbb, 0xbb, 0x6e, 0x62, 0x3e, 0xd5, 0x4c, 0xa2, 0xa8, 0x4c, 0x35, 0x37, 0x4f, 0xc2,
	0xca, 0x2e, 0xb4, 0x6e, 0xd8, 0x05, 0xab, 0xba, 0x0b, 0xa3, 0x15, 0xec, 0x5e, 0xea, 0xc7, 0xcc,
	0xe2, 0xe8, 0xd2, 0x2c, 0xde, 0xbf, 0xb1, 0x9f, 0xff, 0x3c, 0x88, 0xbf, 0x2c, 0xd8, 0xfd, 0x3a,
	0x3a, 0x57, 0x28, 0xfe, 0x1f, 0x8b, 0xbe, 0x82, 0x1e, 0xa7, 0x3d, 0xf5, 0xd5, 0x9b, 0x54, 0xaf,
	0x32, 0x38, 0xfe, 0xa0, 0xb6, 0x5f, 0x82, 0x9d, 0xbd, 0x49, 0xd1, 0x03, 0x5e, 0xfe, 0x66, 0x1f,
	0x96, 0x05, 0x2e, 0x78, 0x8c, 0x66, 0x3a, 0x06, 0x70, 0xca, 0x63, 0x64, 0x9f, 0x01, 0x33, 0x00,
	0x99, 0x64, 0x22, 0x40, 0x3f, 0x9f, 0xb4, 0x61, 0x9f, 0xa3, 0x23, 0x2f, 0x28, 0xf0, 0x52, 0xa2,
	0xa8, 0xa0, 0x15, 0x17, 0x4b, 0x54, 0x1a, 0x6d, 0x57, 0xd1, 0x67, 0x14, 0x20, 0xf4, 0x27, 0xe0,
	0x14, 0xe8, 0x28, 0x46, 0xa9, 0x78, 0x9c, 0xba, 0x1d, 0x9a, 0xdf, 0x8e, 0xc1, 0x16, 0x6e, 0xf6,
	0x08, 0x8c, 0xcb, 0x17, 0xa8, 0x1b, 0x71, 0xb7, 0xa8, 0xea, 0x40, 0xbb, 0x3d, 0xe3, 0xcd, 0x25,
	0x50, 0xf4, 0x8b, 0x62, 0x15, 0x05, 0xe8, 0x76, 0xb5, 0x04, 0x4c, 0xaf, 0xda, 0xc9, 0x3e, 0x02,
	0xe3, 0xf0, 0x63, 0x54, 0xaf, 0x93, 0xd0, 0x05, 0x42, 0xf5, 0xb5, 0xf3, 0x19, 0xf9, 0xd8, 0xb8,
	0xec, 0x2f, 0x46, 0xc5, 0x7d, 0xa2, 0x44, 0xaf, 0xba, 0xea, 0x33, 0x54, 0x9c, 0x4e, 0x91, 0x52,
	0xcd, 0xfd, 0x7a, 0x35, 0x6f, 0x6f, 0x50, 0xf3, 0xe0, 0x76, 0x6a, 0xde, 0xa9, 0x53, 0xf3, 0x6f,
	0xb0, 0x77, 0x99, 0x4a, 0x6f, 0x51, 0xd0, 0x7f, 0x5b, 0xd0, 0xa6, 0x22, 0x6c, 0x00, 0xcd, 0x92,
	0xb5, 0xcd, 0xa8, 0xaa, 0xc4, 0x66, 0x95, 0xc9, 0x2e, 0x74, 0x02, 0x12, 0x5c, 0x68, 0x0e, 0xbe,
	0xc2, 0xcc, 0x23, 0x59, 0x1a, 0x52, 0x44, 0x9f, 0x7d, 0x85, 0x79, 0x95, 0xa3, 0xed, 0x6b, 0x1c,
	0xbd, 0xa2, 0x02, 0xfb, 0xce, 0x2a, 0xa8, 0x27, 0x79, 0xe7, 0x4e, 0x24, 0xdf, 0xba, 0x03, 0xc9,
	0xbb, 0xb7, 0x26, 0x39, 0xd4, 0x92, 0xfc, 0x31, 0xdc, 0x37, 0xc0, 0x92, 0x42, 0xd2, 0x30, 0xd3,
	0x2c, 0x56, 0xb2, 0x48, 0xd6, 0x28, 0xa2, 0x7f, 0x2b, 0x45, 0x6c, 0xdf, 0x52, 0x11, 0x83, 0x5a,
	0x45, 0x1c, 0xc1, 0x9e, 0x41, 0xf2, 0x4c, 0xbd, 0x4e, 0x44, 0x24, 0x79, 0x85, 0xc2, 0xbb, 0x3a,
	0x36, 0xad, 0x86, 0xd8, 0x13, 0x78, 0x50, 0x49, 0xc1, 0x0b, 0x15, 0x05, 0x3a, 0xc7, 0xa1, 0x9c,
	0xbd, 0x75, 0xce, 0x3a, 0xf6, 0xe9, 0x77, 0x00, 0xeb, 0x4d, 0x65, 0xbb, 0xb0, 0xb3, 0xb6, 0xfc,
	0xd3, 0x6f, 0x4f, 0xe7, 0xce, 0x3d, 0xb6, 0x05, 0xd6, 0xf7, 0x27, 0xf3, 0x1f, 0x9c, 0x06, 0x03,
	0xb0, 0x5f, 0x3e, 0x9f, 0x4d, 0xcf, 0xe6, 0x4e, 0x93, 0xf5, 0xa0, 0xf3, 0xd4, 0x9b, 0x4f, 0xcf,
	0xe6, 0x33, 0xa7, 0x95, 0x1b, 0xb3, 0xf9, 0x37, 0xf3, 0xdc, 0xb0, 0x8e, 0xff, 0x68, 0x99, 0x37,
	0x42, 0x31, 0x9a, 0x9f, 0xa0, 0xfb, 0x22, 0x5b, 0xc8, 0x40, 0x44, 0x0b, 0x64, 0x07, 0x97, 0x79,
	0xa5, 0x9f, 0x2c, 0x93, 0x32, 0x6e, 0x4e, 0xf2, 0xe1, 0xc3, 0x4d, 0x30, 0xad, 0xd2, 0xd1, 0x3d,
	0xf6, 0x23, 0x74, 0xcb, 0xdb, 0x98, 0x7d, 0x5c, 0xcb, 0xda, 0x2b, 0x8f, 0x8d, 0xe1, 0xc1, 0x06,
	0x54, 0x59, 0xfb, 0x67, 0xe8, 0x55, 0xee, 0x37, 0xf6, 0xb0, 0x2e, 0xef, 0xfa, 0x85, 0x3c, 0x7c,
	0xb4, 0x11, 0x57, 0xae, 0x10, 0x40, 0xbf, 0x7a, 0xfa, 0xb0, 0xda, 0xd4, 0x9a, 0xab, 0x6e, 0x38,
	0xde, 0x0c, 0x2c, 0x16, 0x59, 0xd8, 0xf4, 0xf2, 0x7b, 0xf2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xa5, 0xe7, 0x0d, 0x4c, 0x66, 0x0a, 0x00, 0x00,
}
