// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/static-srv/proto/static/static.proto

/*
Package go_micro_srv_static is a generated protocol buffer package.

It is generated from these files:
	server/static-srv/proto/static/static.proto

It has these top-level messages:
	AppData
	AppArrData
	PlatformData
	PlatformArrData
	DeviceData
	DeviceArrData
	WearableData
	WearableArrData
	MarkerData
	MarkerArrData
	ModuleData
	ModuleArrData
	BehaviourCategoryData
	BehaviourCategoryArrData
	SocialTypeData
	SocialTypeArrData
	NotificationData
	NotificationArrData
	TrackerMethodData
	TrackerMethodArrData
	BehaviourCategoryAimData
	BehaviourCategoryAimArrData
	ContentParentCategoryData
	ContentParentCategoryArrData
	ContentCategoryData
	ContentCategoryArrData
	ContentTypeData
	ContentTypeArrData
	ContentSourceTypeData
	ContentSourceTypeArrData
	ModuleTriggerData
	ModuleTriggerArrData
	TriggerContentTypeData
	TriggerContentTypeArrData
	RoleData
	RoleArrData
	AllAppsRequest
	AllAppsResponse
	CreateAppRequest
	CreateAppResponse
	UpdateAppRequest
	UpdateAppResponse
	ReadAppRequest
	ReadAppResponse
	DeleteAppRequest
	DeleteAppResponse
	AllPlatformsRequest
	AllPlatformsResponse
	CreatePlatformRequest
	CreatePlatformResponse
	UpdatePlatformRequest
	UpdatePlatformResponse
	ReadPlatformRequest
	ReadPlatformResponse
	DeletePlatformRequest
	DeletePlatformResponse
	AllDevicesRequest
	AllDevicesResponse
	CreateDeviceRequest
	CreateDeviceResponse
	UpdateDeviceRequest
	UpdateDeviceResponse
	ReadDeviceRequest
	ReadDeviceResponse
	DeleteDeviceRequest
	DeleteDeviceResponse
	AllWearablesRequest
	AllWearablesResponse
	CreateWearableRequest
	CreateWearableResponse
	UpdateWearableRequest
	UpdateWearableResponse
	ReadWearableRequest
	ReadWearableResponse
	DeleteWearableRequest
	DeleteWearableResponse
	AllMarkersRequest
	AllMarkersResponse
	CreateMarkerRequest
	CreateMarkerResponse
	UpdateMarkerRequest
	UpdateMarkerResponse
	ReadMarkerRequest
	ReadMarkerResponse
	DeleteMarkerRequest
	DeleteMarkerResponse
	FilterMarkerRequest
	FilterMarkerResponse
	AllModulesRequest
	AllModulesResponse
	CreateModuleRequest
	CreateModuleResponse
	UpdateModuleRequest
	UpdateModuleResponse
	ReadModuleRequest
	ReadModuleResponse
	DeleteModuleRequest
	DeleteModuleResponse
	AllBehaviourCategoriesRequest
	AllBehaviourCategoriesResponse
	CreateBehaviourCategoryRequest
	CreateBehaviourCategoryResponse
	UpdateBehaviourCategoryRequest
	UpdateBehaviourCategoryResponse
	ReadBehaviourCategoryRequest
	ReadBehaviourCategoryResponse
	DeleteBehaviourCategoryRequest
	DeleteBehaviourCategoryResponse
	FilterBehaviourCategoryRequest
	FilterBehaviourCategoryResponse
	AllSocialTypesRequest
	AllSocialTypesResponse
	CreateSocialTypeRequest
	CreateSocialTypeResponse
	UpdateSocialTypeRequest
	UpdateSocialTypeResponse
	ReadSocialTypeRequest
	ReadSocialTypeResponse
	DeleteSocialTypeRequest
	DeleteSocialTypeResponse
	AllNotificationsRequest
	AllNotificationsResponse
	CreateNotificationRequest
	CreateNotificationResponse
	UpdateNotificationRequest
	UpdateNotificationResponse
	ReadNotificationRequest
	ReadNotificationResponse
	DeleteNotificationRequest
	DeleteNotificationResponse
	AllTrackerMethodsRequest
	AllTrackerMethodsResponse
	CreateTrackerMethodRequest
	CreateTrackerMethodResponse
	UpdateTrackerMethodRequest
	UpdateTrackerMethodResponse
	ReadTrackerMethodRequest
	ReadTrackerMethodResponse
	DeleteTrackerMethodRequest
	DeleteTrackerMethodResponse
	FilterTrackerMethodRequest
	FilterTrackerMethodResponse
	AllBehaviourCategoryAimsRequest
	AllBehaviourCategoryAimsResponse
	CreateBehaviourCategoryAimRequest
	CreateBehaviourCategoryAimResponse
	UpdateBehaviourCategoryAimRequest
	UpdateBehaviourCategoryAimResponse
	ReadBehaviourCategoryAimRequest
	ReadBehaviourCategoryAimResponse
	DeleteBehaviourCategoryAimRequest
	DeleteBehaviourCategoryAimResponse
	AllContentParentCategoriesRequest
	AllContentParentCategoriesResponse
	CreateContentParentCategoryRequest
	CreateContentParentCategoryResponse
	UpdateContentParentCategoryRequest
	UpdateContentParentCategoryResponse
	ReadContentParentCategoryRequest
	ReadContentParentCategoryResponse
	DeleteContentParentCategoryRequest
	DeleteContentParentCategoryResponse
	AllContentCategoriesRequest
	AllContentCategoriesResponse
	CreateContentCategoryRequest
	CreateContentCategoryResponse
	UpdateContentCategoryRequest
	UpdateContentCategoryResponse
	ReadContentCategoryRequest
	ReadContentCategoryResponse
	DeleteContentCategoryRequest
	DeleteContentCategoryResponse
	AllContentTypesRequest
	AllContentTypesResponse
	CreateContentTypeRequest
	CreateContentTypeResponse
	UpdateContentTypeRequest
	UpdateContentTypeResponse
	ReadContentTypeRequest
	ReadContentTypeResponse
	DeleteContentTypeRequest
	DeleteContentTypeResponse
	AllContentSourceTypesRequest
	AllContentSourceTypesResponse
	CreateContentSourceTypeRequest
	CreateContentSourceTypeResponse
	UpdateContentSourceTypeRequest
	UpdateContentSourceTypeResponse
	ReadContentSourceTypeRequest
	ReadContentSourceTypeResponse
	DeleteContentSourceTypeRequest
	DeleteContentSourceTypeResponse
	AllModuleTriggersRequest
	AllModuleTriggersResponse
	CreateModuleTriggerRequest
	CreateModuleTriggerResponse
	UpdateModuleTriggerRequest
	UpdateModuleTriggerResponse
	ReadModuleTriggerRequest
	ReadModuleTriggerResponse
	DeleteModuleTriggerRequest
	DeleteModuleTriggerResponse
	FilterModuleTriggerRequest
	FilterModuleTriggerResponse
	AllTriggerContentTypesRequest
	AllTriggerContentTypesResponse
	CreateTriggerContentTypeRequest
	CreateTriggerContentTypeResponse
	UpdateTriggerContentTypeRequest
	UpdateTriggerContentTypeResponse
	ReadTriggerContentTypeRequest
	ReadTriggerContentTypeResponse
	DeleteTriggerContentTypeRequest
	DeleteTriggerContentTypeResponse
	FilterTriggerContentTypeRequest
	FilterTriggerContentTypeResponse
	CreateRoleRequest
	CreateRoleResponse
	UpdateRoleRequest
	UpdateRoleResponse
	ReadRoleByNameslugRequest
	ReadRoleByNameslugResponse
	UploadRequest
	UploadResponse
	SetbackData
	SetbackArrData
	AllSetbacksRequest
	AllSetbacksResponse
	CreateSetbackRequest
	CreateSetbackResponse
	UpdateSetbackRequest
	UpdateSetbackResponse
	ReadSetbackRequest
	ReadSetbackResponse
	DeleteSetbackRequest
	DeleteSetbackResponse
	AutocompleteSetbackSearchRequest
	ReadByNameslugRequest
	App
	Platform
	Wearable
	Device
	Marker
	Module
	Social
	SocialType
	Notification
	TrackerMethod
	BehaviourCategoryAim
	BehaviourCategory
	ContentParentCategory
	ContentCategory
	Action
	ContentSourceType
	ContentType
	ModuleTrigger
	Schedule
	TriggerContentType
	TriggerEvent
	Address
	Role
	AutocompleteResponse
	Target
	Recurrence
	Taxonomy
	ContentCategoryItem
	Setback
	Setting
	Batch
	SharedUserId
*/
package go_micro_srv_static

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NotificationTarget int32

const (
	NotificationTarget_NotificationTarget_NONE NotificationTarget = 0
	NotificationTarget_APP_USER                NotificationTarget = 1
	NotificationTarget_NO_APP_USER             NotificationTarget = 2
	NotificationTarget_FACILITATOR             NotificationTarget = 3
)

var NotificationTarget_name = map[int32]string{
	0: "NotificationTarget_NONE",
	1: "APP_USER",
	2: "NO_APP_USER",
	3: "FACILITATOR",
}
var NotificationTarget_value = map[string]int32{
	"NotificationTarget_NONE": 0,
	"APP_USER":                1,
	"NO_APP_USER":             2,
	"FACILITATOR":             3,
}

func (x NotificationTarget) String() string {
	return proto.EnumName(NotificationTarget_name, int32(x))
}
func (NotificationTarget) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TriggerType int32

const (
	TriggerType_TriggerType_NONE TriggerType = 0
	TriggerType_EVENT            TriggerType = 1
	TriggerType_TIME             TriggerType = 2
)

var TriggerType_name = map[int32]string{
	0: "TriggerType_NONE",
	1: "EVENT",
	2: "TIME",
}
var TriggerType_value = map[string]int32{
	"TriggerType_NONE": 0,
	"EVENT":            1,
	"TIME":             2,
}

func (x TriggerType) String() string {
	return proto.EnumName(TriggerType_name, int32(x))
}
func (TriggerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Permission int32

const (
	Permission_Permission_NONE Permission = 0
	Permission_VIEW            Permission = 1
	Permission_CREATE          Permission = 2
	Permission_DELETE          Permission = 3
	Permission_OWNER           Permission = 4
)

var Permission_name = map[int32]string{
	0: "Permission_NONE",
	1: "VIEW",
	2: "CREATE",
	3: "DELETE",
	4: "OWNER",
}
var Permission_value = map[string]int32{
	"Permission_NONE": 0,
	"VIEW":            1,
	"CREATE":          2,
	"DELETE":          3,
	"OWNER":           4,
}

func (x Permission) String() string {
	return proto.EnumName(Permission_name, int32(x))
}
func (Permission) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// store this in static-srv or content-srv
type ShareStatus int32

const (
	ShareStatus_ShareStatus_NONE ShareStatus = 0
	ShareStatus_SHARED           ShareStatus = 1
	ShareStatus_RECEIVED         ShareStatus = 2
	ShareStatus_VIEWED           ShareStatus = 3
	ShareStatus_ACTIONED         ShareStatus = 4
)

var ShareStatus_name = map[int32]string{
	0: "ShareStatus_NONE",
	1: "SHARED",
	2: "RECEIVED",
	3: "VIEWED",
	4: "ACTIONED",
}
var ShareStatus_value = map[string]int32{
	"ShareStatus_NONE": 0,
	"SHARED":           1,
	"RECEIVED":         2,
	"VIEWED":           3,
	"ACTIONED":         4,
}

func (x ShareStatus) String() string {
	return proto.EnumName(ShareStatus_name, int32(x))
}
func (ShareStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Visibility int32

const (
	Visibility_Visibility_NONE Visibility = 0
	Visibility_PUBLIC          Visibility = 1
	Visibility_PRIVATE         Visibility = 2
)

var Visibility_name = map[int32]string{
	0: "Visibility_NONE",
	1: "PUBLIC",
	2: "PRIVATE",
}
var Visibility_value = map[string]int32{
	"Visibility_NONE": 0,
	"PUBLIC":          1,
	"PRIVATE":         2,
}

func (x Visibility) String() string {
	return proto.EnumName(Visibility_name, int32(x))
}
func (Visibility) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type ActionMethod int32

const (
	ActionMethod_ActionMethod_NONE ActionMethod = 0
	ActionMethod_NOTIFICATION      ActionMethod = 1
	ActionMethod_CHAT              ActionMethod = 2
	ActionMethod_SMS               ActionMethod = 3
	ActionMethod_EMAIL             ActionMethod = 4
	ActionMethod_PHONE             ActionMethod = 5
	ActionMethod_ALL               ActionMethod = 6
)

var ActionMethod_name = map[int32]string{
	0: "ActionMethod_NONE",
	1: "NOTIFICATION",
	2: "CHAT",
	3: "SMS",
	4: "EMAIL",
	5: "PHONE",
	6: "ALL",
}
var ActionMethod_value = map[string]int32{
	"ActionMethod_NONE": 0,
	"NOTIFICATION":      1,
	"CHAT":              2,
	"SMS":               3,
	"EMAIL":             4,
	"PHONE":             5,
	"ALL":               6,
}

func (x ActionMethod) String() string {
	return proto.EnumName(ActionMethod_name, int32(x))
}
func (ActionMethod) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Gender int32

const (
	Gender_Gender_NONE Gender = 0
	Gender_MALE        Gender = 1
	Gender_FEMALE      Gender = 2
	Gender_OTHER       Gender = 3
)

var Gender_name = map[int32]string{
	0: "Gender_NONE",
	1: "MALE",
	2: "FEMALE",
	3: "OTHER",
}
var Gender_value = map[string]int32{
	"Gender_NONE": 0,
	"MALE":        1,
	"FEMALE":      2,
	"OTHER":       3,
}

func (x Gender) String() string {
	return proto.EnumName(Gender_name, int32(x))
}
func (Gender) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ExpectedProgressType int32

const (
	ExpectedProgressType_ExpectedProgressType_NONE ExpectedProgressType = 0
	ExpectedProgressType_LINEAR                    ExpectedProgressType = 1
	ExpectedProgressType_EXPONENTIAL               ExpectedProgressType = 2
	ExpectedProgressType_SINE                      ExpectedProgressType = 3
	ExpectedProgressType_BELL                      ExpectedProgressType = 4
)

var ExpectedProgressType_name = map[int32]string{
	0: "ExpectedProgressType_NONE",
	1: "LINEAR",
	2: "EXPONENTIAL",
	3: "SINE",
	4: "BELL",
}
var ExpectedProgressType_value = map[string]int32{
	"ExpectedProgressType_NONE": 0,
	"LINEAR":                    1,
	"EXPONENTIAL":               2,
	"SINE":                      3,
	"BELL":                      4,
}

func (x ExpectedProgressType) String() string {
	return proto.EnumName(ExpectedProgressType_name, int32(x))
}
func (ExpectedProgressType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type AppData struct {
	App *App `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
}

func (m *AppData) Reset()                    { *m = AppData{} }
func (m *AppData) String() string            { return proto.CompactTextString(m) }
func (*AppData) ProtoMessage()               {}
func (*AppData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AppData) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

type AppArrData struct {
	Apps []*App `protobuf:"bytes,1,rep,name=apps" json:"apps,omitempty"`
}

func (m *AppArrData) Reset()                    { *m = AppArrData{} }
func (m *AppArrData) String() string            { return proto.CompactTextString(m) }
func (*AppArrData) ProtoMessage()               {}
func (*AppArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppArrData) GetApps() []*App {
	if m != nil {
		return m.Apps
	}
	return nil
}

type PlatformData struct {
	Platform *Platform `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
}

func (m *PlatformData) Reset()                    { *m = PlatformData{} }
func (m *PlatformData) String() string            { return proto.CompactTextString(m) }
func (*PlatformData) ProtoMessage()               {}
func (*PlatformData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PlatformData) GetPlatform() *Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

type PlatformArrData struct {
	Platforms []*Platform `protobuf:"bytes,1,rep,name=platforms" json:"platforms,omitempty"`
}

func (m *PlatformArrData) Reset()                    { *m = PlatformArrData{} }
func (m *PlatformArrData) String() string            { return proto.CompactTextString(m) }
func (*PlatformArrData) ProtoMessage()               {}
func (*PlatformArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PlatformArrData) GetPlatforms() []*Platform {
	if m != nil {
		return m.Platforms
	}
	return nil
}

type DeviceData struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *DeviceData) Reset()                    { *m = DeviceData{} }
func (m *DeviceData) String() string            { return proto.CompactTextString(m) }
func (*DeviceData) ProtoMessage()               {}
func (*DeviceData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DeviceData) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type DeviceArrData struct {
	Devices []*Device `protobuf:"bytes,1,rep,name=devices" json:"devices,omitempty"`
}

func (m *DeviceArrData) Reset()                    { *m = DeviceArrData{} }
func (m *DeviceArrData) String() string            { return proto.CompactTextString(m) }
func (*DeviceArrData) ProtoMessage()               {}
func (*DeviceArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeviceArrData) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type WearableData struct {
	Wearable *Wearable `protobuf:"bytes,1,opt,name=wearable" json:"wearable,omitempty"`
}

func (m *WearableData) Reset()                    { *m = WearableData{} }
func (m *WearableData) String() string            { return proto.CompactTextString(m) }
func (*WearableData) ProtoMessage()               {}
func (*WearableData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *WearableData) GetWearable() *Wearable {
	if m != nil {
		return m.Wearable
	}
	return nil
}

type WearableArrData struct {
	Wearables []*Wearable `protobuf:"bytes,1,rep,name=wearables" json:"wearables,omitempty"`
}

func (m *WearableArrData) Reset()                    { *m = WearableArrData{} }
func (m *WearableArrData) String() string            { return proto.CompactTextString(m) }
func (*WearableArrData) ProtoMessage()               {}
func (*WearableArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *WearableArrData) GetWearables() []*Wearable {
	if m != nil {
		return m.Wearables
	}
	return nil
}

type MarkerData struct {
	Marker *Marker `protobuf:"bytes,1,opt,name=marker" json:"marker,omitempty"`
}

func (m *MarkerData) Reset()                    { *m = MarkerData{} }
func (m *MarkerData) String() string            { return proto.CompactTextString(m) }
func (*MarkerData) ProtoMessage()               {}
func (*MarkerData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MarkerData) GetMarker() *Marker {
	if m != nil {
		return m.Marker
	}
	return nil
}

type MarkerArrData struct {
	Markers []*Marker `protobuf:"bytes,1,rep,name=markers" json:"markers,omitempty"`
}

func (m *MarkerArrData) Reset()                    { *m = MarkerArrData{} }
func (m *MarkerArrData) String() string            { return proto.CompactTextString(m) }
func (*MarkerArrData) ProtoMessage()               {}
func (*MarkerArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *MarkerArrData) GetMarkers() []*Marker {
	if m != nil {
		return m.Markers
	}
	return nil
}

type ModuleData struct {
	Module *Module `protobuf:"bytes,1,opt,name=module" json:"module,omitempty"`
}

func (m *ModuleData) Reset()                    { *m = ModuleData{} }
func (m *ModuleData) String() string            { return proto.CompactTextString(m) }
func (*ModuleData) ProtoMessage()               {}
func (*ModuleData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ModuleData) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

type ModuleArrData struct {
	Modules []*Module `protobuf:"bytes,1,rep,name=modules" json:"modules,omitempty"`
}

func (m *ModuleArrData) Reset()                    { *m = ModuleArrData{} }
func (m *ModuleArrData) String() string            { return proto.CompactTextString(m) }
func (*ModuleArrData) ProtoMessage()               {}
func (*ModuleArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ModuleArrData) GetModules() []*Module {
	if m != nil {
		return m.Modules
	}
	return nil
}

type BehaviourCategoryData struct {
	Category *BehaviourCategory `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
}

func (m *BehaviourCategoryData) Reset()                    { *m = BehaviourCategoryData{} }
func (m *BehaviourCategoryData) String() string            { return proto.CompactTextString(m) }
func (*BehaviourCategoryData) ProtoMessage()               {}
func (*BehaviourCategoryData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *BehaviourCategoryData) GetCategory() *BehaviourCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

type BehaviourCategoryArrData struct {
	Categories []*BehaviourCategory `protobuf:"bytes,1,rep,name=categories" json:"categories,omitempty"`
}

func (m *BehaviourCategoryArrData) Reset()                    { *m = BehaviourCategoryArrData{} }
func (m *BehaviourCategoryArrData) String() string            { return proto.CompactTextString(m) }
func (*BehaviourCategoryArrData) ProtoMessage()               {}
func (*BehaviourCategoryArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *BehaviourCategoryArrData) GetCategories() []*BehaviourCategory {
	if m != nil {
		return m.Categories
	}
	return nil
}

type SocialTypeData struct {
	SocialType *SocialType `protobuf:"bytes,1,opt,name=socialType" json:"socialType,omitempty"`
}

func (m *SocialTypeData) Reset()                    { *m = SocialTypeData{} }
func (m *SocialTypeData) String() string            { return proto.CompactTextString(m) }
func (*SocialTypeData) ProtoMessage()               {}
func (*SocialTypeData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SocialTypeData) GetSocialType() *SocialType {
	if m != nil {
		return m.SocialType
	}
	return nil
}

type SocialTypeArrData struct {
	SocialTypes []*SocialType `protobuf:"bytes,1,rep,name=socialTypes" json:"socialTypes,omitempty"`
}

func (m *SocialTypeArrData) Reset()                    { *m = SocialTypeArrData{} }
func (m *SocialTypeArrData) String() string            { return proto.CompactTextString(m) }
func (*SocialTypeArrData) ProtoMessage()               {}
func (*SocialTypeArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SocialTypeArrData) GetSocialTypes() []*SocialType {
	if m != nil {
		return m.SocialTypes
	}
	return nil
}

type NotificationData struct {
	Notification *Notification `protobuf:"bytes,1,opt,name=notification" json:"notification,omitempty"`
}

func (m *NotificationData) Reset()                    { *m = NotificationData{} }
func (m *NotificationData) String() string            { return proto.CompactTextString(m) }
func (*NotificationData) ProtoMessage()               {}
func (*NotificationData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *NotificationData) GetNotification() *Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

type NotificationArrData struct {
	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications" json:"notifications,omitempty"`
}

func (m *NotificationArrData) Reset()                    { *m = NotificationArrData{} }
func (m *NotificationArrData) String() string            { return proto.CompactTextString(m) }
func (*NotificationArrData) ProtoMessage()               {}
func (*NotificationArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *NotificationArrData) GetNotifications() []*Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

type TrackerMethodData struct {
	TrackerMethod *TrackerMethod `protobuf:"bytes,1,opt,name=trackerMethod" json:"trackerMethod,omitempty"`
}

func (m *TrackerMethodData) Reset()                    { *m = TrackerMethodData{} }
func (m *TrackerMethodData) String() string            { return proto.CompactTextString(m) }
func (*TrackerMethodData) ProtoMessage()               {}
func (*TrackerMethodData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *TrackerMethodData) GetTrackerMethod() *TrackerMethod {
	if m != nil {
		return m.TrackerMethod
	}
	return nil
}

type TrackerMethodArrData struct {
	TrackerMethods []*TrackerMethod `protobuf:"bytes,1,rep,name=trackerMethods" json:"trackerMethods,omitempty"`
}

func (m *TrackerMethodArrData) Reset()                    { *m = TrackerMethodArrData{} }
func (m *TrackerMethodArrData) String() string            { return proto.CompactTextString(m) }
func (*TrackerMethodArrData) ProtoMessage()               {}
func (*TrackerMethodArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *TrackerMethodArrData) GetTrackerMethods() []*TrackerMethod {
	if m != nil {
		return m.TrackerMethods
	}
	return nil
}

type BehaviourCategoryAimData struct {
	BehaviourCategoryAim *BehaviourCategoryAim `protobuf:"bytes,1,opt,name=behaviourCategoryAim" json:"behaviourCategoryAim,omitempty"`
}

func (m *BehaviourCategoryAimData) Reset()                    { *m = BehaviourCategoryAimData{} }
func (m *BehaviourCategoryAimData) String() string            { return proto.CompactTextString(m) }
func (*BehaviourCategoryAimData) ProtoMessage()               {}
func (*BehaviourCategoryAimData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *BehaviourCategoryAimData) GetBehaviourCategoryAim() *BehaviourCategoryAim {
	if m != nil {
		return m.BehaviourCategoryAim
	}
	return nil
}

type BehaviourCategoryAimArrData struct {
	BehaviourCategoryAims []*BehaviourCategoryAim `protobuf:"bytes,1,rep,name=behaviourCategoryAims" json:"behaviourCategoryAims,omitempty"`
}

func (m *BehaviourCategoryAimArrData) Reset()                    { *m = BehaviourCategoryAimArrData{} }
func (m *BehaviourCategoryAimArrData) String() string            { return proto.CompactTextString(m) }
func (*BehaviourCategoryAimArrData) ProtoMessage()               {}
func (*BehaviourCategoryAimArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *BehaviourCategoryAimArrData) GetBehaviourCategoryAims() []*BehaviourCategoryAim {
	if m != nil {
		return m.BehaviourCategoryAims
	}
	return nil
}

type ContentParentCategoryData struct {
	ContentParentCategory *ContentParentCategory `protobuf:"bytes,1,opt,name=contentParentCategory" json:"contentParentCategory,omitempty"`
}

func (m *ContentParentCategoryData) Reset()                    { *m = ContentParentCategoryData{} }
func (m *ContentParentCategoryData) String() string            { return proto.CompactTextString(m) }
func (*ContentParentCategoryData) ProtoMessage()               {}
func (*ContentParentCategoryData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *ContentParentCategoryData) GetContentParentCategory() *ContentParentCategory {
	if m != nil {
		return m.ContentParentCategory
	}
	return nil
}

type ContentParentCategoryArrData struct {
	ContentParentCategories []*ContentParentCategory `protobuf:"bytes,1,rep,name=contentParentCategories" json:"contentParentCategories,omitempty"`
}

func (m *ContentParentCategoryArrData) Reset()                    { *m = ContentParentCategoryArrData{} }
func (m *ContentParentCategoryArrData) String() string            { return proto.CompactTextString(m) }
func (*ContentParentCategoryArrData) ProtoMessage()               {}
func (*ContentParentCategoryArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ContentParentCategoryArrData) GetContentParentCategories() []*ContentParentCategory {
	if m != nil {
		return m.ContentParentCategories
	}
	return nil
}

type ContentCategoryData struct {
	ContentCategory *ContentCategory `protobuf:"bytes,1,opt,name=contentCategory" json:"contentCategory,omitempty"`
}

func (m *ContentCategoryData) Reset()                    { *m = ContentCategoryData{} }
func (m *ContentCategoryData) String() string            { return proto.CompactTextString(m) }
func (*ContentCategoryData) ProtoMessage()               {}
func (*ContentCategoryData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ContentCategoryData) GetContentCategory() *ContentCategory {
	if m != nil {
		return m.ContentCategory
	}
	return nil
}

type ContentCategoryArrData struct {
	ContentCategories []*ContentCategory `protobuf:"bytes,1,rep,name=contentCategories" json:"contentCategories,omitempty"`
}

func (m *ContentCategoryArrData) Reset()                    { *m = ContentCategoryArrData{} }
func (m *ContentCategoryArrData) String() string            { return proto.CompactTextString(m) }
func (*ContentCategoryArrData) ProtoMessage()               {}
func (*ContentCategoryArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ContentCategoryArrData) GetContentCategories() []*ContentCategory {
	if m != nil {
		return m.ContentCategories
	}
	return nil
}

type ContentTypeData struct {
	ContentType *ContentType `protobuf:"bytes,1,opt,name=contentType" json:"contentType,omitempty"`
}

func (m *ContentTypeData) Reset()                    { *m = ContentTypeData{} }
func (m *ContentTypeData) String() string            { return proto.CompactTextString(m) }
func (*ContentTypeData) ProtoMessage()               {}
func (*ContentTypeData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ContentTypeData) GetContentType() *ContentType {
	if m != nil {
		return m.ContentType
	}
	return nil
}

type ContentTypeArrData struct {
	ContentTypes []*ContentType `protobuf:"bytes,1,rep,name=contentTypes" json:"contentTypes,omitempty"`
}

func (m *ContentTypeArrData) Reset()                    { *m = ContentTypeArrData{} }
func (m *ContentTypeArrData) String() string            { return proto.CompactTextString(m) }
func (*ContentTypeArrData) ProtoMessage()               {}
func (*ContentTypeArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ContentTypeArrData) GetContentTypes() []*ContentType {
	if m != nil {
		return m.ContentTypes
	}
	return nil
}

type ContentSourceTypeData struct {
	ContentSourceType *ContentSourceType `protobuf:"bytes,1,opt,name=contentSourceType" json:"contentSourceType,omitempty"`
}

func (m *ContentSourceTypeData) Reset()                    { *m = ContentSourceTypeData{} }
func (m *ContentSourceTypeData) String() string            { return proto.CompactTextString(m) }
func (*ContentSourceTypeData) ProtoMessage()               {}
func (*ContentSourceTypeData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *ContentSourceTypeData) GetContentSourceType() *ContentSourceType {
	if m != nil {
		return m.ContentSourceType
	}
	return nil
}

type ContentSourceTypeArrData struct {
	ContentSourceTypes []*ContentSourceType `protobuf:"bytes,1,rep,name=contentSourceTypes" json:"contentSourceTypes,omitempty"`
}

func (m *ContentSourceTypeArrData) Reset()                    { *m = ContentSourceTypeArrData{} }
func (m *ContentSourceTypeArrData) String() string            { return proto.CompactTextString(m) }
func (*ContentSourceTypeArrData) ProtoMessage()               {}
func (*ContentSourceTypeArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ContentSourceTypeArrData) GetContentSourceTypes() []*ContentSourceType {
	if m != nil {
		return m.ContentSourceTypes
	}
	return nil
}

type ModuleTriggerData struct {
	ModuleTrigger *ModuleTrigger `protobuf:"bytes,1,opt,name=moduleTrigger" json:"moduleTrigger,omitempty"`
}

func (m *ModuleTriggerData) Reset()                    { *m = ModuleTriggerData{} }
func (m *ModuleTriggerData) String() string            { return proto.CompactTextString(m) }
func (*ModuleTriggerData) ProtoMessage()               {}
func (*ModuleTriggerData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ModuleTriggerData) GetModuleTrigger() *ModuleTrigger {
	if m != nil {
		return m.ModuleTrigger
	}
	return nil
}

type ModuleTriggerArrData struct {
	ModuleTriggers []*ModuleTrigger `protobuf:"bytes,1,rep,name=moduleTriggers" json:"moduleTriggers,omitempty"`
}

func (m *ModuleTriggerArrData) Reset()                    { *m = ModuleTriggerArrData{} }
func (m *ModuleTriggerArrData) String() string            { return proto.CompactTextString(m) }
func (*ModuleTriggerArrData) ProtoMessage()               {}
func (*ModuleTriggerArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *ModuleTriggerArrData) GetModuleTriggers() []*ModuleTrigger {
	if m != nil {
		return m.ModuleTriggers
	}
	return nil
}

type TriggerContentTypeData struct {
	TriggerContentType *TriggerContentType `protobuf:"bytes,1,opt,name=triggerContentType" json:"triggerContentType,omitempty"`
}

func (m *TriggerContentTypeData) Reset()                    { *m = TriggerContentTypeData{} }
func (m *TriggerContentTypeData) String() string            { return proto.CompactTextString(m) }
func (*TriggerContentTypeData) ProtoMessage()               {}
func (*TriggerContentTypeData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *TriggerContentTypeData) GetTriggerContentType() *TriggerContentType {
	if m != nil {
		return m.TriggerContentType
	}
	return nil
}

type TriggerContentTypeArrData struct {
	TriggerContentTypes []*TriggerContentType `protobuf:"bytes,1,rep,name=triggerContentTypes" json:"triggerContentTypes,omitempty"`
}

func (m *TriggerContentTypeArrData) Reset()                    { *m = TriggerContentTypeArrData{} }
func (m *TriggerContentTypeArrData) String() string            { return proto.CompactTextString(m) }
func (*TriggerContentTypeArrData) ProtoMessage()               {}
func (*TriggerContentTypeArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *TriggerContentTypeArrData) GetTriggerContentTypes() []*TriggerContentType {
	if m != nil {
		return m.TriggerContentTypes
	}
	return nil
}

type RoleData struct {
	Role *Role `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
}

func (m *RoleData) Reset()                    { *m = RoleData{} }
func (m *RoleData) String() string            { return proto.CompactTextString(m) }
func (*RoleData) ProtoMessage()               {}
func (*RoleData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *RoleData) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type RoleArrData struct {
	Roles []*Role `protobuf:"bytes,1,rep,name=roles" json:"roles,omitempty"`
}

func (m *RoleArrData) Reset()                    { *m = RoleArrData{} }
func (m *RoleArrData) String() string            { return proto.CompactTextString(m) }
func (*RoleArrData) ProtoMessage()               {}
func (*RoleArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *RoleArrData) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type AllAppsRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllAppsRequest) Reset()                    { *m = AllAppsRequest{} }
func (m *AllAppsRequest) String() string            { return proto.CompactTextString(m) }
func (*AllAppsRequest) ProtoMessage()               {}
func (*AllAppsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *AllAppsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllAppsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllAppsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllAppsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllAppsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllAppsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllAppsResponse struct {
	Data    *AppArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllAppsResponse) Reset()                    { *m = AllAppsResponse{} }
func (m *AllAppsResponse) String() string            { return proto.CompactTextString(m) }
func (*AllAppsResponse) ProtoMessage()               {}
func (*AllAppsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *AllAppsResponse) GetData() *AppArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllAppsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllAppsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateAppRequest struct {
	App    *App   `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateAppRequest) Reset()                    { *m = CreateAppRequest{} }
func (m *CreateAppRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAppRequest) ProtoMessage()               {}
func (*CreateAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *CreateAppRequest) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *CreateAppRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateAppRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateAppResponse struct {
	Data    *AppData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateAppResponse) Reset()                    { *m = CreateAppResponse{} }
func (m *CreateAppResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAppResponse) ProtoMessage()               {}
func (*CreateAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *CreateAppResponse) GetData() *AppData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateAppResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateAppResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateAppRequest struct {
	App    *App   `protobuf:"bytes,1,opt,name=app" json:"app,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateAppRequest) Reset()                    { *m = UpdateAppRequest{} }
func (m *UpdateAppRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAppRequest) ProtoMessage()               {}
func (*UpdateAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *UpdateAppRequest) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *UpdateAppRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateAppRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateAppResponse struct {
	Data    *AppData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateAppResponse) Reset()                    { *m = UpdateAppResponse{} }
func (m *UpdateAppResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAppResponse) ProtoMessage()               {}
func (*UpdateAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *UpdateAppResponse) GetData() *AppData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateAppResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateAppResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadAppRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadAppRequest) Reset()                    { *m = ReadAppRequest{} }
func (m *ReadAppRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAppRequest) ProtoMessage()               {}
func (*ReadAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ReadAppRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadAppRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadAppRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadAppResponse struct {
	Data    *AppData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string   `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadAppResponse) Reset()                    { *m = ReadAppResponse{} }
func (m *ReadAppResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAppResponse) ProtoMessage()               {}
func (*ReadAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *ReadAppResponse) GetData() *AppData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadAppResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadAppResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteAppRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteAppRequest) Reset()                    { *m = DeleteAppRequest{} }
func (m *DeleteAppRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAppRequest) ProtoMessage()               {}
func (*DeleteAppRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *DeleteAppRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteAppRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteAppRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteAppResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteAppResponse) Reset()                    { *m = DeleteAppResponse{} }
func (m *DeleteAppResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAppResponse) ProtoMessage()               {}
func (*DeleteAppResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *DeleteAppResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteAppResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllPlatformsRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllPlatformsRequest) Reset()                    { *m = AllPlatformsRequest{} }
func (m *AllPlatformsRequest) String() string            { return proto.CompactTextString(m) }
func (*AllPlatformsRequest) ProtoMessage()               {}
func (*AllPlatformsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *AllPlatformsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllPlatformsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllPlatformsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllPlatformsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllPlatformsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllPlatformsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllPlatformsResponse struct {
	Data    *PlatformArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllPlatformsResponse) Reset()                    { *m = AllPlatformsResponse{} }
func (m *AllPlatformsResponse) String() string            { return proto.CompactTextString(m) }
func (*AllPlatformsResponse) ProtoMessage()               {}
func (*AllPlatformsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *AllPlatformsResponse) GetData() *PlatformArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllPlatformsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllPlatformsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreatePlatformRequest struct {
	Platform *Platform `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
	OrgId    string    `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string    `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreatePlatformRequest) Reset()                    { *m = CreatePlatformRequest{} }
func (m *CreatePlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePlatformRequest) ProtoMessage()               {}
func (*CreatePlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *CreatePlatformRequest) GetPlatform() *Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *CreatePlatformRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreatePlatformRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreatePlatformResponse struct {
	Data    *PlatformData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreatePlatformResponse) Reset()                    { *m = CreatePlatformResponse{} }
func (m *CreatePlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePlatformResponse) ProtoMessage()               {}
func (*CreatePlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *CreatePlatformResponse) GetData() *PlatformData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreatePlatformResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreatePlatformResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdatePlatformRequest struct {
	Platform *Platform `protobuf:"bytes,1,opt,name=platform" json:"platform,omitempty"`
	OrgId    string    `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string    `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdatePlatformRequest) Reset()                    { *m = UpdatePlatformRequest{} }
func (m *UpdatePlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePlatformRequest) ProtoMessage()               {}
func (*UpdatePlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *UpdatePlatformRequest) GetPlatform() *Platform {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *UpdatePlatformRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdatePlatformRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdatePlatformResponse struct {
	Data    *PlatformData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdatePlatformResponse) Reset()                    { *m = UpdatePlatformResponse{} }
func (m *UpdatePlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePlatformResponse) ProtoMessage()               {}
func (*UpdatePlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *UpdatePlatformResponse) GetData() *PlatformData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdatePlatformResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdatePlatformResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadPlatformRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadPlatformRequest) Reset()                    { *m = ReadPlatformRequest{} }
func (m *ReadPlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadPlatformRequest) ProtoMessage()               {}
func (*ReadPlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *ReadPlatformRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadPlatformRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadPlatformRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadPlatformResponse struct {
	Data    *PlatformData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadPlatformResponse) Reset()                    { *m = ReadPlatformResponse{} }
func (m *ReadPlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadPlatformResponse) ProtoMessage()               {}
func (*ReadPlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *ReadPlatformResponse) GetData() *PlatformData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadPlatformResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadPlatformResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeletePlatformRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeletePlatformRequest) Reset()                    { *m = DeletePlatformRequest{} }
func (m *DeletePlatformRequest) String() string            { return proto.CompactTextString(m) }
func (*DeletePlatformRequest) ProtoMessage()               {}
func (*DeletePlatformRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *DeletePlatformRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeletePlatformRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeletePlatformRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeletePlatformResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeletePlatformResponse) Reset()                    { *m = DeletePlatformResponse{} }
func (m *DeletePlatformResponse) String() string            { return proto.CompactTextString(m) }
func (*DeletePlatformResponse) ProtoMessage()               {}
func (*DeletePlatformResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *DeletePlatformResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeletePlatformResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllDevicesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllDevicesRequest) Reset()                    { *m = AllDevicesRequest{} }
func (m *AllDevicesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllDevicesRequest) ProtoMessage()               {}
func (*AllDevicesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *AllDevicesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllDevicesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllDevicesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllDevicesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllDevicesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllDevicesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllDevicesResponse struct {
	Data    *DeviceArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllDevicesResponse) Reset()                    { *m = AllDevicesResponse{} }
func (m *AllDevicesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllDevicesResponse) ProtoMessage()               {}
func (*AllDevicesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *AllDevicesResponse) GetData() *DeviceArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllDevicesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllDevicesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateDeviceRequest struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	OrgId  string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string  `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateDeviceRequest) Reset()                    { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()               {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *CreateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *CreateDeviceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateDeviceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateDeviceResponse struct {
	Data    *DeviceData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateDeviceResponse) Reset()                    { *m = CreateDeviceResponse{} }
func (m *CreateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceResponse) ProtoMessage()               {}
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *CreateDeviceResponse) GetData() *DeviceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateDeviceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateDeviceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateDeviceRequest struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	OrgId  string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string  `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateDeviceRequest) Reset()                    { *m = UpdateDeviceRequest{} }
func (m *UpdateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceRequest) ProtoMessage()               {}
func (*UpdateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *UpdateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *UpdateDeviceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateDeviceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateDeviceResponse struct {
	Data    *DeviceData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateDeviceResponse) Reset()                    { *m = UpdateDeviceResponse{} }
func (m *UpdateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateDeviceResponse) ProtoMessage()               {}
func (*UpdateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *UpdateDeviceResponse) GetData() *DeviceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateDeviceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateDeviceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadDeviceRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadDeviceRequest) Reset()                    { *m = ReadDeviceRequest{} }
func (m *ReadDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadDeviceRequest) ProtoMessage()               {}
func (*ReadDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *ReadDeviceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadDeviceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadDeviceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadDeviceResponse struct {
	Data    *DeviceData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadDeviceResponse) Reset()                    { *m = ReadDeviceResponse{} }
func (m *ReadDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadDeviceResponse) ProtoMessage()               {}
func (*ReadDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *ReadDeviceResponse) GetData() *DeviceData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadDeviceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadDeviceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteDeviceRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteDeviceRequest) Reset()                    { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()               {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

func (m *DeleteDeviceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteDeviceRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteDeviceRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteDeviceResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteDeviceResponse) Reset()                    { *m = DeleteDeviceResponse{} }
func (m *DeleteDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteDeviceResponse) ProtoMessage()               {}
func (*DeleteDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *DeleteDeviceResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteDeviceResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllWearablesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllWearablesRequest) Reset()                    { *m = AllWearablesRequest{} }
func (m *AllWearablesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllWearablesRequest) ProtoMessage()               {}
func (*AllWearablesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *AllWearablesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllWearablesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllWearablesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllWearablesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllWearablesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllWearablesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllWearablesResponse struct {
	Data    *WearableArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllWearablesResponse) Reset()                    { *m = AllWearablesResponse{} }
func (m *AllWearablesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllWearablesResponse) ProtoMessage()               {}
func (*AllWearablesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *AllWearablesResponse) GetData() *WearableArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllWearablesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllWearablesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateWearableRequest struct {
	Wearable *Wearable `protobuf:"bytes,1,opt,name=wearable" json:"wearable,omitempty"`
	OrgId    string    `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string    `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateWearableRequest) Reset()                    { *m = CreateWearableRequest{} }
func (m *CreateWearableRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateWearableRequest) ProtoMessage()               {}
func (*CreateWearableRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *CreateWearableRequest) GetWearable() *Wearable {
	if m != nil {
		return m.Wearable
	}
	return nil
}

func (m *CreateWearableRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateWearableRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateWearableResponse struct {
	Data    *WearableData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateWearableResponse) Reset()                    { *m = CreateWearableResponse{} }
func (m *CreateWearableResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateWearableResponse) ProtoMessage()               {}
func (*CreateWearableResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *CreateWearableResponse) GetData() *WearableData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateWearableResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateWearableResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateWearableRequest struct {
	Wearable *Wearable `protobuf:"bytes,1,opt,name=wearable" json:"wearable,omitempty"`
	OrgId    string    `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string    `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateWearableRequest) Reset()                    { *m = UpdateWearableRequest{} }
func (m *UpdateWearableRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateWearableRequest) ProtoMessage()               {}
func (*UpdateWearableRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *UpdateWearableRequest) GetWearable() *Wearable {
	if m != nil {
		return m.Wearable
	}
	return nil
}

func (m *UpdateWearableRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateWearableRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateWearableResponse struct {
	Data    *WearableData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateWearableResponse) Reset()                    { *m = UpdateWearableResponse{} }
func (m *UpdateWearableResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateWearableResponse) ProtoMessage()               {}
func (*UpdateWearableResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *UpdateWearableResponse) GetData() *WearableData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateWearableResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateWearableResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadWearableRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadWearableRequest) Reset()                    { *m = ReadWearableRequest{} }
func (m *ReadWearableRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadWearableRequest) ProtoMessage()               {}
func (*ReadWearableRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *ReadWearableRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadWearableRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadWearableRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadWearableResponse struct {
	Data    *WearableData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadWearableResponse) Reset()                    { *m = ReadWearableResponse{} }
func (m *ReadWearableResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadWearableResponse) ProtoMessage()               {}
func (*ReadWearableResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *ReadWearableResponse) GetData() *WearableData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadWearableResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadWearableResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteWearableRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteWearableRequest) Reset()                    { *m = DeleteWearableRequest{} }
func (m *DeleteWearableRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteWearableRequest) ProtoMessage()               {}
func (*DeleteWearableRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

func (m *DeleteWearableRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteWearableRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteWearableRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteWearableResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteWearableResponse) Reset()                    { *m = DeleteWearableResponse{} }
func (m *DeleteWearableResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteWearableResponse) ProtoMessage()               {}
func (*DeleteWearableResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *DeleteWearableResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteWearableResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllMarkersRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllMarkersRequest) Reset()                    { *m = AllMarkersRequest{} }
func (m *AllMarkersRequest) String() string            { return proto.CompactTextString(m) }
func (*AllMarkersRequest) ProtoMessage()               {}
func (*AllMarkersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

func (m *AllMarkersRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllMarkersRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllMarkersRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllMarkersRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllMarkersRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllMarkersRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllMarkersResponse struct {
	Data    *MarkerArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllMarkersResponse) Reset()                    { *m = AllMarkersResponse{} }
func (m *AllMarkersResponse) String() string            { return proto.CompactTextString(m) }
func (*AllMarkersResponse) ProtoMessage()               {}
func (*AllMarkersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *AllMarkersResponse) GetData() *MarkerArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllMarkersResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllMarkersResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateMarkerRequest struct {
	Marker *Marker `protobuf:"bytes,1,opt,name=marker" json:"marker,omitempty"`
	OrgId  string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string  `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateMarkerRequest) Reset()                    { *m = CreateMarkerRequest{} }
func (m *CreateMarkerRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateMarkerRequest) ProtoMessage()               {}
func (*CreateMarkerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

func (m *CreateMarkerRequest) GetMarker() *Marker {
	if m != nil {
		return m.Marker
	}
	return nil
}

func (m *CreateMarkerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateMarkerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateMarkerResponse struct {
	Data    *MarkerData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateMarkerResponse) Reset()                    { *m = CreateMarkerResponse{} }
func (m *CreateMarkerResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateMarkerResponse) ProtoMessage()               {}
func (*CreateMarkerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *CreateMarkerResponse) GetData() *MarkerData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateMarkerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateMarkerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateMarkerRequest struct {
	Marker *Marker `protobuf:"bytes,1,opt,name=marker" json:"marker,omitempty"`
	OrgId  string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string  `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateMarkerRequest) Reset()                    { *m = UpdateMarkerRequest{} }
func (m *UpdateMarkerRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateMarkerRequest) ProtoMessage()               {}
func (*UpdateMarkerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *UpdateMarkerRequest) GetMarker() *Marker {
	if m != nil {
		return m.Marker
	}
	return nil
}

func (m *UpdateMarkerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateMarkerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateMarkerResponse struct {
	Data    *MarkerData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateMarkerResponse) Reset()                    { *m = UpdateMarkerResponse{} }
func (m *UpdateMarkerResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateMarkerResponse) ProtoMessage()               {}
func (*UpdateMarkerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *UpdateMarkerResponse) GetData() *MarkerData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateMarkerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateMarkerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadMarkerRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadMarkerRequest) Reset()                    { *m = ReadMarkerRequest{} }
func (m *ReadMarkerRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadMarkerRequest) ProtoMessage()               {}
func (*ReadMarkerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *ReadMarkerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadMarkerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadMarkerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadMarkerResponse struct {
	Data    *MarkerData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadMarkerResponse) Reset()                    { *m = ReadMarkerResponse{} }
func (m *ReadMarkerResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadMarkerResponse) ProtoMessage()               {}
func (*ReadMarkerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *ReadMarkerResponse) GetData() *MarkerData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadMarkerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadMarkerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteMarkerRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteMarkerRequest) Reset()                    { *m = DeleteMarkerRequest{} }
func (m *DeleteMarkerRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteMarkerRequest) ProtoMessage()               {}
func (*DeleteMarkerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *DeleteMarkerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteMarkerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteMarkerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteMarkerResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteMarkerResponse) Reset()                    { *m = DeleteMarkerResponse{} }
func (m *DeleteMarkerResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteMarkerResponse) ProtoMessage()               {}
func (*DeleteMarkerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *DeleteMarkerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteMarkerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterMarkerRequest struct {
	TrackerMethods []string `protobuf:"bytes,1,rep,name=trackerMethods" json:"trackerMethods,omitempty"`
	OrgId          string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId         string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit          int64    `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Offset         int64    `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	SortParameter  string   `protobuf:"bytes,6,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection  string   `protobuf:"bytes,7,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *FilterMarkerRequest) Reset()                    { *m = FilterMarkerRequest{} }
func (m *FilterMarkerRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterMarkerRequest) ProtoMessage()               {}
func (*FilterMarkerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *FilterMarkerRequest) GetTrackerMethods() []string {
	if m != nil {
		return m.TrackerMethods
	}
	return nil
}

func (m *FilterMarkerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterMarkerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterMarkerRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterMarkerRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterMarkerRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterMarkerRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type FilterMarkerResponse struct {
	Data    *MarkerArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterMarkerResponse) Reset()                    { *m = FilterMarkerResponse{} }
func (m *FilterMarkerResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterMarkerResponse) ProtoMessage()               {}
func (*FilterMarkerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

func (m *FilterMarkerResponse) GetData() *MarkerArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterMarkerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterMarkerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllModulesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllModulesRequest) Reset()                    { *m = AllModulesRequest{} }
func (m *AllModulesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllModulesRequest) ProtoMessage()               {}
func (*AllModulesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *AllModulesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllModulesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllModulesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllModulesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllModulesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllModulesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllModulesResponse struct {
	Data    *ModuleArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllModulesResponse) Reset()                    { *m = AllModulesResponse{} }
func (m *AllModulesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllModulesResponse) ProtoMessage()               {}
func (*AllModulesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *AllModulesResponse) GetData() *ModuleArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllModulesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllModulesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateModuleRequest struct {
	Module *Module `protobuf:"bytes,1,opt,name=module" json:"module,omitempty"`
	OrgId  string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string  `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateModuleRequest) Reset()                    { *m = CreateModuleRequest{} }
func (m *CreateModuleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateModuleRequest) ProtoMessage()               {}
func (*CreateModuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *CreateModuleRequest) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *CreateModuleRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateModuleRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateModuleResponse struct {
	Data    *ModuleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateModuleResponse) Reset()                    { *m = CreateModuleResponse{} }
func (m *CreateModuleResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateModuleResponse) ProtoMessage()               {}
func (*CreateModuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *CreateModuleResponse) GetData() *ModuleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateModuleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateModuleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateModuleRequest struct {
	Module *Module `protobuf:"bytes,1,opt,name=module" json:"module,omitempty"`
	OrgId  string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string  `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateModuleRequest) Reset()                    { *m = UpdateModuleRequest{} }
func (m *UpdateModuleRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateModuleRequest) ProtoMessage()               {}
func (*UpdateModuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *UpdateModuleRequest) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *UpdateModuleRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateModuleRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateModuleResponse struct {
	Data    *ModuleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateModuleResponse) Reset()                    { *m = UpdateModuleResponse{} }
func (m *UpdateModuleResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateModuleResponse) ProtoMessage()               {}
func (*UpdateModuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *UpdateModuleResponse) GetData() *ModuleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateModuleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateModuleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadModuleRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadModuleRequest) Reset()                    { *m = ReadModuleRequest{} }
func (m *ReadModuleRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadModuleRequest) ProtoMessage()               {}
func (*ReadModuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *ReadModuleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadModuleRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadModuleRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadModuleResponse struct {
	Data    *ModuleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string      `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadModuleResponse) Reset()                    { *m = ReadModuleResponse{} }
func (m *ReadModuleResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadModuleResponse) ProtoMessage()               {}
func (*ReadModuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *ReadModuleResponse) GetData() *ModuleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadModuleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadModuleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteModuleRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteModuleRequest) Reset()                    { *m = DeleteModuleRequest{} }
func (m *DeleteModuleRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteModuleRequest) ProtoMessage()               {}
func (*DeleteModuleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *DeleteModuleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteModuleRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteModuleRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteModuleResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteModuleResponse) Reset()                    { *m = DeleteModuleResponse{} }
func (m *DeleteModuleResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteModuleResponse) ProtoMessage()               {}
func (*DeleteModuleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func (m *DeleteModuleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteModuleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllBehaviourCategoriesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllBehaviourCategoriesRequest) Reset()                    { *m = AllBehaviourCategoriesRequest{} }
func (m *AllBehaviourCategoriesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllBehaviourCategoriesRequest) ProtoMessage()               {}
func (*AllBehaviourCategoriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{98} }

func (m *AllBehaviourCategoriesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllBehaviourCategoriesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllBehaviourCategoriesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllBehaviourCategoriesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllBehaviourCategoriesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllBehaviourCategoriesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllBehaviourCategoriesResponse struct {
	Data    *BehaviourCategoryArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllBehaviourCategoriesResponse) Reset()                    { *m = AllBehaviourCategoriesResponse{} }
func (m *AllBehaviourCategoriesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllBehaviourCategoriesResponse) ProtoMessage()               {}
func (*AllBehaviourCategoriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{99} }

func (m *AllBehaviourCategoriesResponse) GetData() *BehaviourCategoryArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllBehaviourCategoriesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllBehaviourCategoriesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateBehaviourCategoryRequest struct {
	Category *BehaviourCategory `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	OrgId    string             `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string             `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateBehaviourCategoryRequest) Reset()         { *m = CreateBehaviourCategoryRequest{} }
func (m *CreateBehaviourCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBehaviourCategoryRequest) ProtoMessage()    {}
func (*CreateBehaviourCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{100}
}

func (m *CreateBehaviourCategoryRequest) GetCategory() *BehaviourCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *CreateBehaviourCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateBehaviourCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateBehaviourCategoryResponse struct {
	Data    *BehaviourCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateBehaviourCategoryResponse) Reset()         { *m = CreateBehaviourCategoryResponse{} }
func (m *CreateBehaviourCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBehaviourCategoryResponse) ProtoMessage()    {}
func (*CreateBehaviourCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{101}
}

func (m *CreateBehaviourCategoryResponse) GetData() *BehaviourCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateBehaviourCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateBehaviourCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateBehaviourCategoryRequest struct {
	Category *BehaviourCategory `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	OrgId    string             `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string             `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateBehaviourCategoryRequest) Reset()         { *m = UpdateBehaviourCategoryRequest{} }
func (m *UpdateBehaviourCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBehaviourCategoryRequest) ProtoMessage()    {}
func (*UpdateBehaviourCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{102}
}

func (m *UpdateBehaviourCategoryRequest) GetCategory() *BehaviourCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *UpdateBehaviourCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateBehaviourCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateBehaviourCategoryResponse struct {
	Data    *BehaviourCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateBehaviourCategoryResponse) Reset()         { *m = UpdateBehaviourCategoryResponse{} }
func (m *UpdateBehaviourCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBehaviourCategoryResponse) ProtoMessage()    {}
func (*UpdateBehaviourCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{103}
}

func (m *UpdateBehaviourCategoryResponse) GetData() *BehaviourCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateBehaviourCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateBehaviourCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadBehaviourCategoryRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadBehaviourCategoryRequest) Reset()                    { *m = ReadBehaviourCategoryRequest{} }
func (m *ReadBehaviourCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadBehaviourCategoryRequest) ProtoMessage()               {}
func (*ReadBehaviourCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{104} }

func (m *ReadBehaviourCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadBehaviourCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadBehaviourCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadBehaviourCategoryResponse struct {
	Data    *BehaviourCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadBehaviourCategoryResponse) Reset()                    { *m = ReadBehaviourCategoryResponse{} }
func (m *ReadBehaviourCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadBehaviourCategoryResponse) ProtoMessage()               {}
func (*ReadBehaviourCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{105} }

func (m *ReadBehaviourCategoryResponse) GetData() *BehaviourCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadBehaviourCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadBehaviourCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteBehaviourCategoryRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteBehaviourCategoryRequest) Reset()         { *m = DeleteBehaviourCategoryRequest{} }
func (m *DeleteBehaviourCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBehaviourCategoryRequest) ProtoMessage()    {}
func (*DeleteBehaviourCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{106}
}

func (m *DeleteBehaviourCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteBehaviourCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteBehaviourCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteBehaviourCategoryResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteBehaviourCategoryResponse) Reset()         { *m = DeleteBehaviourCategoryResponse{} }
func (m *DeleteBehaviourCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteBehaviourCategoryResponse) ProtoMessage()    {}
func (*DeleteBehaviourCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{107}
}

func (m *DeleteBehaviourCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteBehaviourCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterBehaviourCategoryRequest struct {
	Markers       []string `protobuf:"bytes,1,rep,name=markers" json:"markers,omitempty"`
	OrgId         string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	SortParameter string   `protobuf:"bytes,6,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string   `protobuf:"bytes,7,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *FilterBehaviourCategoryRequest) Reset()         { *m = FilterBehaviourCategoryRequest{} }
func (m *FilterBehaviourCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*FilterBehaviourCategoryRequest) ProtoMessage()    {}
func (*FilterBehaviourCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{108}
}

func (m *FilterBehaviourCategoryRequest) GetMarkers() []string {
	if m != nil {
		return m.Markers
	}
	return nil
}

func (m *FilterBehaviourCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterBehaviourCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterBehaviourCategoryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterBehaviourCategoryRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterBehaviourCategoryRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterBehaviourCategoryRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type FilterBehaviourCategoryResponse struct {
	Data    *BehaviourCategoryArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterBehaviourCategoryResponse) Reset()         { *m = FilterBehaviourCategoryResponse{} }
func (m *FilterBehaviourCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*FilterBehaviourCategoryResponse) ProtoMessage()    {}
func (*FilterBehaviourCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{109}
}

func (m *FilterBehaviourCategoryResponse) GetData() *BehaviourCategoryArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterBehaviourCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterBehaviourCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllSocialTypesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllSocialTypesRequest) Reset()                    { *m = AllSocialTypesRequest{} }
func (m *AllSocialTypesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllSocialTypesRequest) ProtoMessage()               {}
func (*AllSocialTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{110} }

func (m *AllSocialTypesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllSocialTypesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllSocialTypesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllSocialTypesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllSocialTypesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllSocialTypesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllSocialTypesResponse struct {
	Data    *SocialTypeArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllSocialTypesResponse) Reset()                    { *m = AllSocialTypesResponse{} }
func (m *AllSocialTypesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllSocialTypesResponse) ProtoMessage()               {}
func (*AllSocialTypesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{111} }

func (m *AllSocialTypesResponse) GetData() *SocialTypeArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllSocialTypesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllSocialTypesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateSocialTypeRequest struct {
	SocialType *SocialType `protobuf:"bytes,1,opt,name=socialType" json:"socialType,omitempty"`
	OrgId      string      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId     string      `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateSocialTypeRequest) Reset()                    { *m = CreateSocialTypeRequest{} }
func (m *CreateSocialTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSocialTypeRequest) ProtoMessage()               {}
func (*CreateSocialTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{112} }

func (m *CreateSocialTypeRequest) GetSocialType() *SocialType {
	if m != nil {
		return m.SocialType
	}
	return nil
}

func (m *CreateSocialTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateSocialTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateSocialTypeResponse struct {
	Data    *SocialTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64           `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateSocialTypeResponse) Reset()                    { *m = CreateSocialTypeResponse{} }
func (m *CreateSocialTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSocialTypeResponse) ProtoMessage()               {}
func (*CreateSocialTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{113} }

func (m *CreateSocialTypeResponse) GetData() *SocialTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateSocialTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateSocialTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateSocialTypeRequest struct {
	SocialType *SocialType `protobuf:"bytes,1,opt,name=socialType" json:"socialType,omitempty"`
	OrgId      string      `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId     string      `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateSocialTypeRequest) Reset()                    { *m = UpdateSocialTypeRequest{} }
func (m *UpdateSocialTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSocialTypeRequest) ProtoMessage()               {}
func (*UpdateSocialTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{114} }

func (m *UpdateSocialTypeRequest) GetSocialType() *SocialType {
	if m != nil {
		return m.SocialType
	}
	return nil
}

func (m *UpdateSocialTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateSocialTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateSocialTypeResponse struct {
	Data    *SocialTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64           `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateSocialTypeResponse) Reset()                    { *m = UpdateSocialTypeResponse{} }
func (m *UpdateSocialTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateSocialTypeResponse) ProtoMessage()               {}
func (*UpdateSocialTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{115} }

func (m *UpdateSocialTypeResponse) GetData() *SocialTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateSocialTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateSocialTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadSocialTypeRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadSocialTypeRequest) Reset()                    { *m = ReadSocialTypeRequest{} }
func (m *ReadSocialTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadSocialTypeRequest) ProtoMessage()               {}
func (*ReadSocialTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{116} }

func (m *ReadSocialTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadSocialTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadSocialTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadSocialTypeResponse struct {
	Data    *SocialTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64           `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadSocialTypeResponse) Reset()                    { *m = ReadSocialTypeResponse{} }
func (m *ReadSocialTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadSocialTypeResponse) ProtoMessage()               {}
func (*ReadSocialTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{117} }

func (m *ReadSocialTypeResponse) GetData() *SocialTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadSocialTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadSocialTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteSocialTypeRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteSocialTypeRequest) Reset()                    { *m = DeleteSocialTypeRequest{} }
func (m *DeleteSocialTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSocialTypeRequest) ProtoMessage()               {}
func (*DeleteSocialTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{118} }

func (m *DeleteSocialTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteSocialTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteSocialTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteSocialTypeResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteSocialTypeResponse) Reset()                    { *m = DeleteSocialTypeResponse{} }
func (m *DeleteSocialTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteSocialTypeResponse) ProtoMessage()               {}
func (*DeleteSocialTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{119} }

func (m *DeleteSocialTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteSocialTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllNotificationsRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllNotificationsRequest) Reset()                    { *m = AllNotificationsRequest{} }
func (m *AllNotificationsRequest) String() string            { return proto.CompactTextString(m) }
func (*AllNotificationsRequest) ProtoMessage()               {}
func (*AllNotificationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{120} }

func (m *AllNotificationsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllNotificationsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllNotificationsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllNotificationsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllNotificationsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllNotificationsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllNotificationsResponse struct {
	Data    *NotificationArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllNotificationsResponse) Reset()                    { *m = AllNotificationsResponse{} }
func (m *AllNotificationsResponse) String() string            { return proto.CompactTextString(m) }
func (*AllNotificationsResponse) ProtoMessage()               {}
func (*AllNotificationsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{121} }

func (m *AllNotificationsResponse) GetData() *NotificationArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllNotificationsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllNotificationsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateNotificationRequest struct {
	Notification *Notification `protobuf:"bytes,1,opt,name=notification" json:"notification,omitempty"`
	OrgId        string        `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId       string        `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateNotificationRequest) Reset()                    { *m = CreateNotificationRequest{} }
func (m *CreateNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateNotificationRequest) ProtoMessage()               {}
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{122} }

func (m *CreateNotificationRequest) GetNotification() *Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func (m *CreateNotificationRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateNotificationRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateNotificationResponse struct {
	Data    *NotificationData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64             `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateNotificationResponse) Reset()                    { *m = CreateNotificationResponse{} }
func (m *CreateNotificationResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateNotificationResponse) ProtoMessage()               {}
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{123} }

func (m *CreateNotificationResponse) GetData() *NotificationData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateNotificationResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateNotificationResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateNotificationRequest struct {
	Notification *Notification `protobuf:"bytes,1,opt,name=notification" json:"notification,omitempty"`
	OrgId        string        `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId       string        `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateNotificationRequest) Reset()                    { *m = UpdateNotificationRequest{} }
func (m *UpdateNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateNotificationRequest) ProtoMessage()               {}
func (*UpdateNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{124} }

func (m *UpdateNotificationRequest) GetNotification() *Notification {
	if m != nil {
		return m.Notification
	}
	return nil
}

func (m *UpdateNotificationRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateNotificationRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateNotificationResponse struct {
	Data    *NotificationData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64             `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateNotificationResponse) Reset()                    { *m = UpdateNotificationResponse{} }
func (m *UpdateNotificationResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateNotificationResponse) ProtoMessage()               {}
func (*UpdateNotificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{125} }

func (m *UpdateNotificationResponse) GetData() *NotificationData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateNotificationResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateNotificationResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadNotificationRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadNotificationRequest) Reset()                    { *m = ReadNotificationRequest{} }
func (m *ReadNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadNotificationRequest) ProtoMessage()               {}
func (*ReadNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{126} }

func (m *ReadNotificationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadNotificationRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadNotificationRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadNotificationResponse struct {
	Data    *NotificationData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64             `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string            `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadNotificationResponse) Reset()                    { *m = ReadNotificationResponse{} }
func (m *ReadNotificationResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadNotificationResponse) ProtoMessage()               {}
func (*ReadNotificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{127} }

func (m *ReadNotificationResponse) GetData() *NotificationData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadNotificationResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadNotificationResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteNotificationRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteNotificationRequest) Reset()                    { *m = DeleteNotificationRequest{} }
func (m *DeleteNotificationRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteNotificationRequest) ProtoMessage()               {}
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{128} }

func (m *DeleteNotificationRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteNotificationRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteNotificationRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteNotificationResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteNotificationResponse) Reset()                    { *m = DeleteNotificationResponse{} }
func (m *DeleteNotificationResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteNotificationResponse) ProtoMessage()               {}
func (*DeleteNotificationResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{129} }

func (m *DeleteNotificationResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteNotificationResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllTrackerMethodsRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllTrackerMethodsRequest) Reset()                    { *m = AllTrackerMethodsRequest{} }
func (m *AllTrackerMethodsRequest) String() string            { return proto.CompactTextString(m) }
func (*AllTrackerMethodsRequest) ProtoMessage()               {}
func (*AllTrackerMethodsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{130} }

func (m *AllTrackerMethodsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllTrackerMethodsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllTrackerMethodsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllTrackerMethodsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllTrackerMethodsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllTrackerMethodsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllTrackerMethodsResponse struct {
	Data    *TrackerMethodArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                 `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllTrackerMethodsResponse) Reset()                    { *m = AllTrackerMethodsResponse{} }
func (m *AllTrackerMethodsResponse) String() string            { return proto.CompactTextString(m) }
func (*AllTrackerMethodsResponse) ProtoMessage()               {}
func (*AllTrackerMethodsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{131} }

func (m *AllTrackerMethodsResponse) GetData() *TrackerMethodArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllTrackerMethodsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllTrackerMethodsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateTrackerMethodRequest struct {
	TrackerMethod *TrackerMethod `protobuf:"bytes,1,opt,name=trackerMethod" json:"trackerMethod,omitempty"`
	OrgId         string         `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string         `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateTrackerMethodRequest) Reset()                    { *m = CreateTrackerMethodRequest{} }
func (m *CreateTrackerMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTrackerMethodRequest) ProtoMessage()               {}
func (*CreateTrackerMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{132} }

func (m *CreateTrackerMethodRequest) GetTrackerMethod() *TrackerMethod {
	if m != nil {
		return m.TrackerMethod
	}
	return nil
}

func (m *CreateTrackerMethodRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateTrackerMethodRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateTrackerMethodResponse struct {
	Data    *TrackerMethodData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateTrackerMethodResponse) Reset()                    { *m = CreateTrackerMethodResponse{} }
func (m *CreateTrackerMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTrackerMethodResponse) ProtoMessage()               {}
func (*CreateTrackerMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{133} }

func (m *CreateTrackerMethodResponse) GetData() *TrackerMethodData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateTrackerMethodResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateTrackerMethodResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateTrackerMethodRequest struct {
	TrackerMethod *TrackerMethod `protobuf:"bytes,1,opt,name=trackerMethod" json:"trackerMethod,omitempty"`
	OrgId         string         `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string         `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateTrackerMethodRequest) Reset()                    { *m = UpdateTrackerMethodRequest{} }
func (m *UpdateTrackerMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateTrackerMethodRequest) ProtoMessage()               {}
func (*UpdateTrackerMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{134} }

func (m *UpdateTrackerMethodRequest) GetTrackerMethod() *TrackerMethod {
	if m != nil {
		return m.TrackerMethod
	}
	return nil
}

func (m *UpdateTrackerMethodRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateTrackerMethodRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateTrackerMethodResponse struct {
	Data    *TrackerMethodData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateTrackerMethodResponse) Reset()                    { *m = UpdateTrackerMethodResponse{} }
func (m *UpdateTrackerMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateTrackerMethodResponse) ProtoMessage()               {}
func (*UpdateTrackerMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{135} }

func (m *UpdateTrackerMethodResponse) GetData() *TrackerMethodData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateTrackerMethodResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateTrackerMethodResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadTrackerMethodRequest struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	NameSlug string `protobuf:"bytes,4,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *ReadTrackerMethodRequest) Reset()                    { *m = ReadTrackerMethodRequest{} }
func (m *ReadTrackerMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadTrackerMethodRequest) ProtoMessage()               {}
func (*ReadTrackerMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{136} }

func (m *ReadTrackerMethodRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadTrackerMethodRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadTrackerMethodRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *ReadTrackerMethodRequest) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type ReadTrackerMethodResponse struct {
	Data    *TrackerMethodData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadTrackerMethodResponse) Reset()                    { *m = ReadTrackerMethodResponse{} }
func (m *ReadTrackerMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadTrackerMethodResponse) ProtoMessage()               {}
func (*ReadTrackerMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{137} }

func (m *ReadTrackerMethodResponse) GetData() *TrackerMethodData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadTrackerMethodResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadTrackerMethodResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteTrackerMethodRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteTrackerMethodRequest) Reset()                    { *m = DeleteTrackerMethodRequest{} }
func (m *DeleteTrackerMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTrackerMethodRequest) ProtoMessage()               {}
func (*DeleteTrackerMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{138} }

func (m *DeleteTrackerMethodRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteTrackerMethodRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteTrackerMethodRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteTrackerMethodResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteTrackerMethodResponse) Reset()                    { *m = DeleteTrackerMethodResponse{} }
func (m *DeleteTrackerMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteTrackerMethodResponse) ProtoMessage()               {}
func (*DeleteTrackerMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{139} }

func (m *DeleteTrackerMethodResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteTrackerMethodResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterTrackerMethodRequest struct {
	Markers       []string `protobuf:"bytes,1,rep,name=markers" json:"markers,omitempty"`
	OrgId         string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,5,opt,name=offset" json:"offset,omitempty"`
	SortParameter string   `protobuf:"bytes,6,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string   `protobuf:"bytes,7,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *FilterTrackerMethodRequest) Reset()                    { *m = FilterTrackerMethodRequest{} }
func (m *FilterTrackerMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterTrackerMethodRequest) ProtoMessage()               {}
func (*FilterTrackerMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{140} }

func (m *FilterTrackerMethodRequest) GetMarkers() []string {
	if m != nil {
		return m.Markers
	}
	return nil
}

func (m *FilterTrackerMethodRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterTrackerMethodRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterTrackerMethodRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterTrackerMethodRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterTrackerMethodRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterTrackerMethodRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type FilterTrackerMethodResponse struct {
	Data    *TrackerMethodArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                 `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterTrackerMethodResponse) Reset()                    { *m = FilterTrackerMethodResponse{} }
func (m *FilterTrackerMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterTrackerMethodResponse) ProtoMessage()               {}
func (*FilterTrackerMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{141} }

func (m *FilterTrackerMethodResponse) GetData() *TrackerMethodArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterTrackerMethodResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterTrackerMethodResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllBehaviourCategoryAimsRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllBehaviourCategoryAimsRequest) Reset()         { *m = AllBehaviourCategoryAimsRequest{} }
func (m *AllBehaviourCategoryAimsRequest) String() string { return proto.CompactTextString(m) }
func (*AllBehaviourCategoryAimsRequest) ProtoMessage()    {}
func (*AllBehaviourCategoryAimsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{142}
}

func (m *AllBehaviourCategoryAimsRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllBehaviourCategoryAimsRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllBehaviourCategoryAimsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllBehaviourCategoryAimsRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllBehaviourCategoryAimsRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllBehaviourCategoryAimsRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllBehaviourCategoryAimsResponse struct {
	Data    *BehaviourCategoryAimArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllBehaviourCategoryAimsResponse) Reset()         { *m = AllBehaviourCategoryAimsResponse{} }
func (m *AllBehaviourCategoryAimsResponse) String() string { return proto.CompactTextString(m) }
func (*AllBehaviourCategoryAimsResponse) ProtoMessage()    {}
func (*AllBehaviourCategoryAimsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{143}
}

func (m *AllBehaviourCategoryAimsResponse) GetData() *BehaviourCategoryAimArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllBehaviourCategoryAimsResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllBehaviourCategoryAimsResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateBehaviourCategoryAimRequest struct {
	BehaviourCategoryAim *BehaviourCategoryAim `protobuf:"bytes,1,opt,name=behaviourCategoryAim" json:"behaviourCategoryAim,omitempty"`
	OrgId                string                `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId               string                `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateBehaviourCategoryAimRequest) Reset()         { *m = CreateBehaviourCategoryAimRequest{} }
func (m *CreateBehaviourCategoryAimRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBehaviourCategoryAimRequest) ProtoMessage()    {}
func (*CreateBehaviourCategoryAimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{144}
}

func (m *CreateBehaviourCategoryAimRequest) GetBehaviourCategoryAim() *BehaviourCategoryAim {
	if m != nil {
		return m.BehaviourCategoryAim
	}
	return nil
}

func (m *CreateBehaviourCategoryAimRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateBehaviourCategoryAimRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateBehaviourCategoryAimResponse struct {
	Data    *BehaviourCategoryAimData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateBehaviourCategoryAimResponse) Reset()         { *m = CreateBehaviourCategoryAimResponse{} }
func (m *CreateBehaviourCategoryAimResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBehaviourCategoryAimResponse) ProtoMessage()    {}
func (*CreateBehaviourCategoryAimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{145}
}

func (m *CreateBehaviourCategoryAimResponse) GetData() *BehaviourCategoryAimData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateBehaviourCategoryAimResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateBehaviourCategoryAimResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateBehaviourCategoryAimRequest struct {
	BehaviourCategoryAim *BehaviourCategoryAim `protobuf:"bytes,1,opt,name=behaviourCategoryAim" json:"behaviourCategoryAim,omitempty"`
	OrgId                string                `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId               string                `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateBehaviourCategoryAimRequest) Reset()         { *m = UpdateBehaviourCategoryAimRequest{} }
func (m *UpdateBehaviourCategoryAimRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBehaviourCategoryAimRequest) ProtoMessage()    {}
func (*UpdateBehaviourCategoryAimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{146}
}

func (m *UpdateBehaviourCategoryAimRequest) GetBehaviourCategoryAim() *BehaviourCategoryAim {
	if m != nil {
		return m.BehaviourCategoryAim
	}
	return nil
}

func (m *UpdateBehaviourCategoryAimRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateBehaviourCategoryAimRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateBehaviourCategoryAimResponse struct {
	Data    *BehaviourCategoryAimData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateBehaviourCategoryAimResponse) Reset()         { *m = UpdateBehaviourCategoryAimResponse{} }
func (m *UpdateBehaviourCategoryAimResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBehaviourCategoryAimResponse) ProtoMessage()    {}
func (*UpdateBehaviourCategoryAimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{147}
}

func (m *UpdateBehaviourCategoryAimResponse) GetData() *BehaviourCategoryAimData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateBehaviourCategoryAimResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateBehaviourCategoryAimResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadBehaviourCategoryAimRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadBehaviourCategoryAimRequest) Reset()         { *m = ReadBehaviourCategoryAimRequest{} }
func (m *ReadBehaviourCategoryAimRequest) String() string { return proto.CompactTextString(m) }
func (*ReadBehaviourCategoryAimRequest) ProtoMessage()    {}
func (*ReadBehaviourCategoryAimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{148}
}

func (m *ReadBehaviourCategoryAimRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadBehaviourCategoryAimRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadBehaviourCategoryAimRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadBehaviourCategoryAimResponse struct {
	Data    *BehaviourCategoryAimData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadBehaviourCategoryAimResponse) Reset()         { *m = ReadBehaviourCategoryAimResponse{} }
func (m *ReadBehaviourCategoryAimResponse) String() string { return proto.CompactTextString(m) }
func (*ReadBehaviourCategoryAimResponse) ProtoMessage()    {}
func (*ReadBehaviourCategoryAimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{149}
}

func (m *ReadBehaviourCategoryAimResponse) GetData() *BehaviourCategoryAimData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadBehaviourCategoryAimResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadBehaviourCategoryAimResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteBehaviourCategoryAimRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteBehaviourCategoryAimRequest) Reset()         { *m = DeleteBehaviourCategoryAimRequest{} }
func (m *DeleteBehaviourCategoryAimRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBehaviourCategoryAimRequest) ProtoMessage()    {}
func (*DeleteBehaviourCategoryAimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{150}
}

func (m *DeleteBehaviourCategoryAimRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteBehaviourCategoryAimRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteBehaviourCategoryAimRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteBehaviourCategoryAimResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteBehaviourCategoryAimResponse) Reset()         { *m = DeleteBehaviourCategoryAimResponse{} }
func (m *DeleteBehaviourCategoryAimResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteBehaviourCategoryAimResponse) ProtoMessage()    {}
func (*DeleteBehaviourCategoryAimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{151}
}

func (m *DeleteBehaviourCategoryAimResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteBehaviourCategoryAimResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllContentParentCategoriesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllContentParentCategoriesRequest) Reset()         { *m = AllContentParentCategoriesRequest{} }
func (m *AllContentParentCategoriesRequest) String() string { return proto.CompactTextString(m) }
func (*AllContentParentCategoriesRequest) ProtoMessage()    {}
func (*AllContentParentCategoriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{152}
}

func (m *AllContentParentCategoriesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllContentParentCategoriesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllContentParentCategoriesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllContentParentCategoriesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllContentParentCategoriesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllContentParentCategoriesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllContentParentCategoriesResponse struct {
	Data    *ContentParentCategoryArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllContentParentCategoriesResponse) Reset()         { *m = AllContentParentCategoriesResponse{} }
func (m *AllContentParentCategoriesResponse) String() string { return proto.CompactTextString(m) }
func (*AllContentParentCategoriesResponse) ProtoMessage()    {}
func (*AllContentParentCategoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{153}
}

func (m *AllContentParentCategoriesResponse) GetData() *ContentParentCategoryArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllContentParentCategoriesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllContentParentCategoriesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateContentParentCategoryRequest struct {
	ContentParentCategory *ContentParentCategory `protobuf:"bytes,1,opt,name=contentParentCategory" json:"contentParentCategory,omitempty"`
	OrgId                 string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId                string                 `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateContentParentCategoryRequest) Reset()         { *m = CreateContentParentCategoryRequest{} }
func (m *CreateContentParentCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContentParentCategoryRequest) ProtoMessage()    {}
func (*CreateContentParentCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{154}
}

func (m *CreateContentParentCategoryRequest) GetContentParentCategory() *ContentParentCategory {
	if m != nil {
		return m.ContentParentCategory
	}
	return nil
}

func (m *CreateContentParentCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateContentParentCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentParentCategoryResponse struct {
	Data    *ContentParentCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                      `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateContentParentCategoryResponse) Reset()         { *m = CreateContentParentCategoryResponse{} }
func (m *CreateContentParentCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateContentParentCategoryResponse) ProtoMessage()    {}
func (*CreateContentParentCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{155}
}

func (m *CreateContentParentCategoryResponse) GetData() *ContentParentCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateContentParentCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateContentParentCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateContentParentCategoryRequest struct {
	ContentParentCategory *ContentParentCategory `protobuf:"bytes,1,opt,name=contentParentCategory" json:"contentParentCategory,omitempty"`
	OrgId                 string                 `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId                string                 `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateContentParentCategoryRequest) Reset()         { *m = UpdateContentParentCategoryRequest{} }
func (m *UpdateContentParentCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateContentParentCategoryRequest) ProtoMessage()    {}
func (*UpdateContentParentCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{156}
}

func (m *UpdateContentParentCategoryRequest) GetContentParentCategory() *ContentParentCategory {
	if m != nil {
		return m.ContentParentCategory
	}
	return nil
}

func (m *UpdateContentParentCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateContentParentCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateContentParentCategoryResponse struct {
	Data    *ContentParentCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                      `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateContentParentCategoryResponse) Reset()         { *m = UpdateContentParentCategoryResponse{} }
func (m *UpdateContentParentCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateContentParentCategoryResponse) ProtoMessage()    {}
func (*UpdateContentParentCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{157}
}

func (m *UpdateContentParentCategoryResponse) GetData() *ContentParentCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateContentParentCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateContentParentCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadContentParentCategoryRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadContentParentCategoryRequest) Reset()         { *m = ReadContentParentCategoryRequest{} }
func (m *ReadContentParentCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*ReadContentParentCategoryRequest) ProtoMessage()    {}
func (*ReadContentParentCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{158}
}

func (m *ReadContentParentCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadContentParentCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadContentParentCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadContentParentCategoryResponse struct {
	Data    *ContentParentCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                      `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadContentParentCategoryResponse) Reset()         { *m = ReadContentParentCategoryResponse{} }
func (m *ReadContentParentCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*ReadContentParentCategoryResponse) ProtoMessage()    {}
func (*ReadContentParentCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{159}
}

func (m *ReadContentParentCategoryResponse) GetData() *ContentParentCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadContentParentCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadContentParentCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteContentParentCategoryRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteContentParentCategoryRequest) Reset()         { *m = DeleteContentParentCategoryRequest{} }
func (m *DeleteContentParentCategoryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteContentParentCategoryRequest) ProtoMessage()    {}
func (*DeleteContentParentCategoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{160}
}

func (m *DeleteContentParentCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteContentParentCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteContentParentCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteContentParentCategoryResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteContentParentCategoryResponse) Reset()         { *m = DeleteContentParentCategoryResponse{} }
func (m *DeleteContentParentCategoryResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteContentParentCategoryResponse) ProtoMessage()    {}
func (*DeleteContentParentCategoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{161}
}

func (m *DeleteContentParentCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteContentParentCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllContentCategoriesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllContentCategoriesRequest) Reset()                    { *m = AllContentCategoriesRequest{} }
func (m *AllContentCategoriesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllContentCategoriesRequest) ProtoMessage()               {}
func (*AllContentCategoriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{162} }

func (m *AllContentCategoriesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllContentCategoriesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllContentCategoriesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllContentCategoriesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllContentCategoriesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllContentCategoriesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllContentCategoriesResponse struct {
	Data    *ContentCategoryArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllContentCategoriesResponse) Reset()                    { *m = AllContentCategoriesResponse{} }
func (m *AllContentCategoriesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllContentCategoriesResponse) ProtoMessage()               {}
func (*AllContentCategoriesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{163} }

func (m *AllContentCategoriesResponse) GetData() *ContentCategoryArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllContentCategoriesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllContentCategoriesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateContentCategoryRequest struct {
	ContentCategory *ContentCategory `protobuf:"bytes,1,opt,name=contentCategory" json:"contentCategory,omitempty"`
	OrgId           string           `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId          string           `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateContentCategoryRequest) Reset()                    { *m = CreateContentCategoryRequest{} }
func (m *CreateContentCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateContentCategoryRequest) ProtoMessage()               {}
func (*CreateContentCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{164} }

func (m *CreateContentCategoryRequest) GetContentCategory() *ContentCategory {
	if m != nil {
		return m.ContentCategory
	}
	return nil
}

func (m *CreateContentCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateContentCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentCategoryResponse struct {
	Data    *ContentCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateContentCategoryResponse) Reset()                    { *m = CreateContentCategoryResponse{} }
func (m *CreateContentCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateContentCategoryResponse) ProtoMessage()               {}
func (*CreateContentCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{165} }

func (m *CreateContentCategoryResponse) GetData() *ContentCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateContentCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateContentCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateContentCategoryRequest struct {
	ContentCategory *ContentCategory `protobuf:"bytes,1,opt,name=contentCategory" json:"contentCategory,omitempty"`
	OrgId           string           `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId          string           `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateContentCategoryRequest) Reset()                    { *m = UpdateContentCategoryRequest{} }
func (m *UpdateContentCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateContentCategoryRequest) ProtoMessage()               {}
func (*UpdateContentCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{166} }

func (m *UpdateContentCategoryRequest) GetContentCategory() *ContentCategory {
	if m != nil {
		return m.ContentCategory
	}
	return nil
}

func (m *UpdateContentCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateContentCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateContentCategoryResponse struct {
	Data    *ContentCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateContentCategoryResponse) Reset()                    { *m = UpdateContentCategoryResponse{} }
func (m *UpdateContentCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateContentCategoryResponse) ProtoMessage()               {}
func (*UpdateContentCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{167} }

func (m *UpdateContentCategoryResponse) GetData() *ContentCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateContentCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateContentCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadContentCategoryRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadContentCategoryRequest) Reset()                    { *m = ReadContentCategoryRequest{} }
func (m *ReadContentCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadContentCategoryRequest) ProtoMessage()               {}
func (*ReadContentCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{168} }

func (m *ReadContentCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadContentCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadContentCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadContentCategoryResponse struct {
	Data    *ContentCategoryData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadContentCategoryResponse) Reset()                    { *m = ReadContentCategoryResponse{} }
func (m *ReadContentCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadContentCategoryResponse) ProtoMessage()               {}
func (*ReadContentCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{169} }

func (m *ReadContentCategoryResponse) GetData() *ContentCategoryData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadContentCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadContentCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteContentCategoryRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteContentCategoryRequest) Reset()                    { *m = DeleteContentCategoryRequest{} }
func (m *DeleteContentCategoryRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteContentCategoryRequest) ProtoMessage()               {}
func (*DeleteContentCategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{170} }

func (m *DeleteContentCategoryRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteContentCategoryRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteContentCategoryRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteContentCategoryResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteContentCategoryResponse) Reset()                    { *m = DeleteContentCategoryResponse{} }
func (m *DeleteContentCategoryResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteContentCategoryResponse) ProtoMessage()               {}
func (*DeleteContentCategoryResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{171} }

func (m *DeleteContentCategoryResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteContentCategoryResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllContentTypesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllContentTypesRequest) Reset()                    { *m = AllContentTypesRequest{} }
func (m *AllContentTypesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllContentTypesRequest) ProtoMessage()               {}
func (*AllContentTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{172} }

func (m *AllContentTypesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllContentTypesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllContentTypesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllContentTypesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllContentTypesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllContentTypesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllContentTypesResponse struct {
	Data    *ContentTypeArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64               `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllContentTypesResponse) Reset()                    { *m = AllContentTypesResponse{} }
func (m *AllContentTypesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllContentTypesResponse) ProtoMessage()               {}
func (*AllContentTypesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{173} }

func (m *AllContentTypesResponse) GetData() *ContentTypeArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllContentTypesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllContentTypesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateContentTypeRequest struct {
	ContentType *ContentType `protobuf:"bytes,1,opt,name=contentType" json:"contentType,omitempty"`
	OrgId       string       `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId      string       `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateContentTypeRequest) Reset()                    { *m = CreateContentTypeRequest{} }
func (m *CreateContentTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateContentTypeRequest) ProtoMessage()               {}
func (*CreateContentTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{174} }

func (m *CreateContentTypeRequest) GetContentType() *ContentType {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *CreateContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentTypeResponse struct {
	Data    *ContentTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateContentTypeResponse) Reset()                    { *m = CreateContentTypeResponse{} }
func (m *CreateContentTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateContentTypeResponse) ProtoMessage()               {}
func (*CreateContentTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{175} }

func (m *CreateContentTypeResponse) GetData() *ContentTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateContentTypeRequest struct {
	ContentType *ContentType `protobuf:"bytes,1,opt,name=contentType" json:"contentType,omitempty"`
	OrgId       string       `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId      string       `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateContentTypeRequest) Reset()                    { *m = UpdateContentTypeRequest{} }
func (m *UpdateContentTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateContentTypeRequest) ProtoMessage()               {}
func (*UpdateContentTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{176} }

func (m *UpdateContentTypeRequest) GetContentType() *ContentType {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *UpdateContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateContentTypeResponse struct {
	Data    *ContentTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateContentTypeResponse) Reset()                    { *m = UpdateContentTypeResponse{} }
func (m *UpdateContentTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateContentTypeResponse) ProtoMessage()               {}
func (*UpdateContentTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{177} }

func (m *UpdateContentTypeResponse) GetData() *ContentTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadContentTypeRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadContentTypeRequest) Reset()                    { *m = ReadContentTypeRequest{} }
func (m *ReadContentTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadContentTypeRequest) ProtoMessage()               {}
func (*ReadContentTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{178} }

func (m *ReadContentTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadContentTypeResponse struct {
	Data    *ContentTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64            `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string           `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadContentTypeResponse) Reset()                    { *m = ReadContentTypeResponse{} }
func (m *ReadContentTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadContentTypeResponse) ProtoMessage()               {}
func (*ReadContentTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{179} }

func (m *ReadContentTypeResponse) GetData() *ContentTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteContentTypeRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteContentTypeRequest) Reset()                    { *m = DeleteContentTypeRequest{} }
func (m *DeleteContentTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteContentTypeRequest) ProtoMessage()               {}
func (*DeleteContentTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{180} }

func (m *DeleteContentTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteContentTypeResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteContentTypeResponse) Reset()                    { *m = DeleteContentTypeResponse{} }
func (m *DeleteContentTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteContentTypeResponse) ProtoMessage()               {}
func (*DeleteContentTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{181} }

func (m *DeleteContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllContentSourceTypesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllContentSourceTypesRequest) Reset()                    { *m = AllContentSourceTypesRequest{} }
func (m *AllContentSourceTypesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllContentSourceTypesRequest) ProtoMessage()               {}
func (*AllContentSourceTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{182} }

func (m *AllContentSourceTypesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllContentSourceTypesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllContentSourceTypesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllContentSourceTypesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllContentSourceTypesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllContentSourceTypesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllContentSourceTypesResponse struct {
	Data    *ContentSourceTypeArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllContentSourceTypesResponse) Reset()                    { *m = AllContentSourceTypesResponse{} }
func (m *AllContentSourceTypesResponse) String() string            { return proto.CompactTextString(m) }
func (*AllContentSourceTypesResponse) ProtoMessage()               {}
func (*AllContentSourceTypesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{183} }

func (m *AllContentSourceTypesResponse) GetData() *ContentSourceTypeArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllContentSourceTypesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllContentSourceTypesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateContentSourceTypeRequest struct {
	ContentSourceType *ContentSourceType `protobuf:"bytes,1,opt,name=contentSourceType" json:"contentSourceType,omitempty"`
	OrgId             string             `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId            string             `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateContentSourceTypeRequest) Reset()         { *m = CreateContentSourceTypeRequest{} }
func (m *CreateContentSourceTypeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateContentSourceTypeRequest) ProtoMessage()    {}
func (*CreateContentSourceTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{184}
}

func (m *CreateContentSourceTypeRequest) GetContentSourceType() *ContentSourceType {
	if m != nil {
		return m.ContentSourceType
	}
	return nil
}

func (m *CreateContentSourceTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateContentSourceTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateContentSourceTypeResponse struct {
	Data    *ContentSourceTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateContentSourceTypeResponse) Reset()         { *m = CreateContentSourceTypeResponse{} }
func (m *CreateContentSourceTypeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateContentSourceTypeResponse) ProtoMessage()    {}
func (*CreateContentSourceTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{185}
}

func (m *CreateContentSourceTypeResponse) GetData() *ContentSourceTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateContentSourceTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateContentSourceTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateContentSourceTypeRequest struct {
	ContentSourceType *ContentSourceType `protobuf:"bytes,1,opt,name=contentSourceType" json:"contentSourceType,omitempty"`
	OrgId             string             `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId            string             `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateContentSourceTypeRequest) Reset()         { *m = UpdateContentSourceTypeRequest{} }
func (m *UpdateContentSourceTypeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateContentSourceTypeRequest) ProtoMessage()    {}
func (*UpdateContentSourceTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{186}
}

func (m *UpdateContentSourceTypeRequest) GetContentSourceType() *ContentSourceType {
	if m != nil {
		return m.ContentSourceType
	}
	return nil
}

func (m *UpdateContentSourceTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateContentSourceTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateContentSourceTypeResponse struct {
	Data    *ContentSourceTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateContentSourceTypeResponse) Reset()         { *m = UpdateContentSourceTypeResponse{} }
func (m *UpdateContentSourceTypeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateContentSourceTypeResponse) ProtoMessage()    {}
func (*UpdateContentSourceTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{187}
}

func (m *UpdateContentSourceTypeResponse) GetData() *ContentSourceTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateContentSourceTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateContentSourceTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadContentSourceTypeRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadContentSourceTypeRequest) Reset()                    { *m = ReadContentSourceTypeRequest{} }
func (m *ReadContentSourceTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadContentSourceTypeRequest) ProtoMessage()               {}
func (*ReadContentSourceTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{188} }

func (m *ReadContentSourceTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadContentSourceTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadContentSourceTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadContentSourceTypeResponse struct {
	Data    *ContentSourceTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                  `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadContentSourceTypeResponse) Reset()                    { *m = ReadContentSourceTypeResponse{} }
func (m *ReadContentSourceTypeResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadContentSourceTypeResponse) ProtoMessage()               {}
func (*ReadContentSourceTypeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{189} }

func (m *ReadContentSourceTypeResponse) GetData() *ContentSourceTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadContentSourceTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadContentSourceTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteContentSourceTypeRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteContentSourceTypeRequest) Reset()         { *m = DeleteContentSourceTypeRequest{} }
func (m *DeleteContentSourceTypeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteContentSourceTypeRequest) ProtoMessage()    {}
func (*DeleteContentSourceTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{190}
}

func (m *DeleteContentSourceTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteContentSourceTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteContentSourceTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteContentSourceTypeResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteContentSourceTypeResponse) Reset()         { *m = DeleteContentSourceTypeResponse{} }
func (m *DeleteContentSourceTypeResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteContentSourceTypeResponse) ProtoMessage()    {}
func (*DeleteContentSourceTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{191}
}

func (m *DeleteContentSourceTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteContentSourceTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllModuleTriggersRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllModuleTriggersRequest) Reset()                    { *m = AllModuleTriggersRequest{} }
func (m *AllModuleTriggersRequest) String() string            { return proto.CompactTextString(m) }
func (*AllModuleTriggersRequest) ProtoMessage()               {}
func (*AllModuleTriggersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{192} }

func (m *AllModuleTriggersRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllModuleTriggersRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllModuleTriggersRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllModuleTriggersRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllModuleTriggersRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllModuleTriggersRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllModuleTriggersResponse struct {
	Data    *ModuleTriggerArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                 `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllModuleTriggersResponse) Reset()                    { *m = AllModuleTriggersResponse{} }
func (m *AllModuleTriggersResponse) String() string            { return proto.CompactTextString(m) }
func (*AllModuleTriggersResponse) ProtoMessage()               {}
func (*AllModuleTriggersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{193} }

func (m *AllModuleTriggersResponse) GetData() *ModuleTriggerArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllModuleTriggersResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllModuleTriggersResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateModuleTriggerRequest struct {
	ModuleTrigger *ModuleTrigger `protobuf:"bytes,1,opt,name=moduleTrigger" json:"moduleTrigger,omitempty"`
	OrgId         string         `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string         `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateModuleTriggerRequest) Reset()                    { *m = CreateModuleTriggerRequest{} }
func (m *CreateModuleTriggerRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateModuleTriggerRequest) ProtoMessage()               {}
func (*CreateModuleTriggerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{194} }

func (m *CreateModuleTriggerRequest) GetModuleTrigger() *ModuleTrigger {
	if m != nil {
		return m.ModuleTrigger
	}
	return nil
}

func (m *CreateModuleTriggerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateModuleTriggerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateModuleTriggerResponse struct {
	Data    *ModuleTriggerData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateModuleTriggerResponse) Reset()                    { *m = CreateModuleTriggerResponse{} }
func (m *CreateModuleTriggerResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateModuleTriggerResponse) ProtoMessage()               {}
func (*CreateModuleTriggerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{195} }

func (m *CreateModuleTriggerResponse) GetData() *ModuleTriggerData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateModuleTriggerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateModuleTriggerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateModuleTriggerRequest struct {
	ModuleTrigger *ModuleTrigger `protobuf:"bytes,1,opt,name=moduleTrigger" json:"moduleTrigger,omitempty"`
	OrgId         string         `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string         `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateModuleTriggerRequest) Reset()                    { *m = UpdateModuleTriggerRequest{} }
func (m *UpdateModuleTriggerRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateModuleTriggerRequest) ProtoMessage()               {}
func (*UpdateModuleTriggerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{196} }

func (m *UpdateModuleTriggerRequest) GetModuleTrigger() *ModuleTrigger {
	if m != nil {
		return m.ModuleTrigger
	}
	return nil
}

func (m *UpdateModuleTriggerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateModuleTriggerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateModuleTriggerResponse struct {
	Data    *ModuleTriggerData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateModuleTriggerResponse) Reset()                    { *m = UpdateModuleTriggerResponse{} }
func (m *UpdateModuleTriggerResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateModuleTriggerResponse) ProtoMessage()               {}
func (*UpdateModuleTriggerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{197} }

func (m *UpdateModuleTriggerResponse) GetData() *ModuleTriggerData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateModuleTriggerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateModuleTriggerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadModuleTriggerRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadModuleTriggerRequest) Reset()                    { *m = ReadModuleTriggerRequest{} }
func (m *ReadModuleTriggerRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadModuleTriggerRequest) ProtoMessage()               {}
func (*ReadModuleTriggerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{198} }

func (m *ReadModuleTriggerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadModuleTriggerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadModuleTriggerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadModuleTriggerResponse struct {
	Data    *ModuleTriggerData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64              `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string             `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadModuleTriggerResponse) Reset()                    { *m = ReadModuleTriggerResponse{} }
func (m *ReadModuleTriggerResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadModuleTriggerResponse) ProtoMessage()               {}
func (*ReadModuleTriggerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{199} }

func (m *ReadModuleTriggerResponse) GetData() *ModuleTriggerData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadModuleTriggerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadModuleTriggerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteModuleTriggerRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteModuleTriggerRequest) Reset()                    { *m = DeleteModuleTriggerRequest{} }
func (m *DeleteModuleTriggerRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteModuleTriggerRequest) ProtoMessage()               {}
func (*DeleteModuleTriggerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{200} }

func (m *DeleteModuleTriggerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteModuleTriggerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteModuleTriggerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteModuleTriggerResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteModuleTriggerResponse) Reset()                    { *m = DeleteModuleTriggerResponse{} }
func (m *DeleteModuleTriggerResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteModuleTriggerResponse) ProtoMessage()               {}
func (*DeleteModuleTriggerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{201} }

func (m *DeleteModuleTriggerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteModuleTriggerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterModuleTriggerRequest struct {
	OrgId         string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	Module        []string `protobuf:"bytes,5,rep,name=module" json:"module,omitempty"`
	TriggerType   []int64  `protobuf:"varint,6,rep,packed,name=triggerType" json:"triggerType,omitempty"`
	SortParameter string   `protobuf:"bytes,7,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string   `protobuf:"bytes,8,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *FilterModuleTriggerRequest) Reset()                    { *m = FilterModuleTriggerRequest{} }
func (m *FilterModuleTriggerRequest) String() string            { return proto.CompactTextString(m) }
func (*FilterModuleTriggerRequest) ProtoMessage()               {}
func (*FilterModuleTriggerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{202} }

func (m *FilterModuleTriggerRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterModuleTriggerRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterModuleTriggerRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterModuleTriggerRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterModuleTriggerRequest) GetModule() []string {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *FilterModuleTriggerRequest) GetTriggerType() []int64 {
	if m != nil {
		return m.TriggerType
	}
	return nil
}

func (m *FilterModuleTriggerRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterModuleTriggerRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type FilterModuleTriggerResponse struct {
	Data    *ModuleTriggerArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                 `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterModuleTriggerResponse) Reset()                    { *m = FilterModuleTriggerResponse{} }
func (m *FilterModuleTriggerResponse) String() string            { return proto.CompactTextString(m) }
func (*FilterModuleTriggerResponse) ProtoMessage()               {}
func (*FilterModuleTriggerResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{203} }

func (m *FilterModuleTriggerResponse) GetData() *ModuleTriggerArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterModuleTriggerResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterModuleTriggerResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AllTriggerContentTypesRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllTriggerContentTypesRequest) Reset()                    { *m = AllTriggerContentTypesRequest{} }
func (m *AllTriggerContentTypesRequest) String() string            { return proto.CompactTextString(m) }
func (*AllTriggerContentTypesRequest) ProtoMessage()               {}
func (*AllTriggerContentTypesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{204} }

func (m *AllTriggerContentTypesRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllTriggerContentTypesRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllTriggerContentTypesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllTriggerContentTypesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllTriggerContentTypesRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllTriggerContentTypesRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllTriggerContentTypesResponse struct {
	Data    *TriggerContentTypeArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                      `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllTriggerContentTypesResponse) Reset()         { *m = AllTriggerContentTypesResponse{} }
func (m *AllTriggerContentTypesResponse) String() string { return proto.CompactTextString(m) }
func (*AllTriggerContentTypesResponse) ProtoMessage()    {}
func (*AllTriggerContentTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{205}
}

func (m *AllTriggerContentTypesResponse) GetData() *TriggerContentTypeArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllTriggerContentTypesResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllTriggerContentTypesResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateTriggerContentTypeRequest struct {
	TriggerContentType *TriggerContentType `protobuf:"bytes,1,opt,name=triggerContentType" json:"triggerContentType,omitempty"`
	OrgId              string              `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId             string              `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateTriggerContentTypeRequest) Reset()         { *m = CreateTriggerContentTypeRequest{} }
func (m *CreateTriggerContentTypeRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTriggerContentTypeRequest) ProtoMessage()    {}
func (*CreateTriggerContentTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{206}
}

func (m *CreateTriggerContentTypeRequest) GetTriggerContentType() *TriggerContentType {
	if m != nil {
		return m.TriggerContentType
	}
	return nil
}

func (m *CreateTriggerContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateTriggerContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateTriggerContentTypeResponse struct {
	Data    *TriggerContentTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateTriggerContentTypeResponse) Reset()         { *m = CreateTriggerContentTypeResponse{} }
func (m *CreateTriggerContentTypeResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTriggerContentTypeResponse) ProtoMessage()    {}
func (*CreateTriggerContentTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{207}
}

func (m *CreateTriggerContentTypeResponse) GetData() *TriggerContentTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateTriggerContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateTriggerContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateTriggerContentTypeRequest struct {
	TriggerContentType *TriggerContentType `protobuf:"bytes,1,opt,name=triggerContentType" json:"triggerContentType,omitempty"`
	OrgId              string              `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId             string              `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateTriggerContentTypeRequest) Reset()         { *m = UpdateTriggerContentTypeRequest{} }
func (m *UpdateTriggerContentTypeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTriggerContentTypeRequest) ProtoMessage()    {}
func (*UpdateTriggerContentTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{208}
}

func (m *UpdateTriggerContentTypeRequest) GetTriggerContentType() *TriggerContentType {
	if m != nil {
		return m.TriggerContentType
	}
	return nil
}

func (m *UpdateTriggerContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateTriggerContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateTriggerContentTypeResponse struct {
	Data    *TriggerContentTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateTriggerContentTypeResponse) Reset()         { *m = UpdateTriggerContentTypeResponse{} }
func (m *UpdateTriggerContentTypeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTriggerContentTypeResponse) ProtoMessage()    {}
func (*UpdateTriggerContentTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{209}
}

func (m *UpdateTriggerContentTypeResponse) GetData() *TriggerContentTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateTriggerContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateTriggerContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadTriggerContentTypeRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadTriggerContentTypeRequest) Reset()                    { *m = ReadTriggerContentTypeRequest{} }
func (m *ReadTriggerContentTypeRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadTriggerContentTypeRequest) ProtoMessage()               {}
func (*ReadTriggerContentTypeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{210} }

func (m *ReadTriggerContentTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadTriggerContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadTriggerContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadTriggerContentTypeResponse struct {
	Data    *TriggerContentTypeData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                   `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadTriggerContentTypeResponse) Reset()         { *m = ReadTriggerContentTypeResponse{} }
func (m *ReadTriggerContentTypeResponse) String() string { return proto.CompactTextString(m) }
func (*ReadTriggerContentTypeResponse) ProtoMessage()    {}
func (*ReadTriggerContentTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{211}
}

func (m *ReadTriggerContentTypeResponse) GetData() *TriggerContentTypeData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadTriggerContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadTriggerContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteTriggerContentTypeRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteTriggerContentTypeRequest) Reset()         { *m = DeleteTriggerContentTypeRequest{} }
func (m *DeleteTriggerContentTypeRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTriggerContentTypeRequest) ProtoMessage()    {}
func (*DeleteTriggerContentTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{212}
}

func (m *DeleteTriggerContentTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteTriggerContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteTriggerContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteTriggerContentTypeResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteTriggerContentTypeResponse) Reset()         { *m = DeleteTriggerContentTypeResponse{} }
func (m *DeleteTriggerContentTypeResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTriggerContentTypeResponse) ProtoMessage()    {}
func (*DeleteTriggerContentTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{213}
}

func (m *DeleteTriggerContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteTriggerContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type FilterTriggerContentTypeRequest struct {
	OrgId         string   `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string   `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64    `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64    `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	ModuleTrigger []string `protobuf:"bytes,5,rep,name=module_trigger,json=moduleTrigger" json:"module_trigger,omitempty"`
	SortParameter string   `protobuf:"bytes,6,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string   `protobuf:"bytes,7,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *FilterTriggerContentTypeRequest) Reset()         { *m = FilterTriggerContentTypeRequest{} }
func (m *FilterTriggerContentTypeRequest) String() string { return proto.CompactTextString(m) }
func (*FilterTriggerContentTypeRequest) ProtoMessage()    {}
func (*FilterTriggerContentTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{214}
}

func (m *FilterTriggerContentTypeRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *FilterTriggerContentTypeRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *FilterTriggerContentTypeRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FilterTriggerContentTypeRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FilterTriggerContentTypeRequest) GetModuleTrigger() []string {
	if m != nil {
		return m.ModuleTrigger
	}
	return nil
}

func (m *FilterTriggerContentTypeRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *FilterTriggerContentTypeRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type FilterTriggerContentTypeResponse struct {
	Data    *TriggerContentTypeArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                      `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                     `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *FilterTriggerContentTypeResponse) Reset()         { *m = FilterTriggerContentTypeResponse{} }
func (m *FilterTriggerContentTypeResponse) String() string { return proto.CompactTextString(m) }
func (*FilterTriggerContentTypeResponse) ProtoMessage()    {}
func (*FilterTriggerContentTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{215}
}

func (m *FilterTriggerContentTypeResponse) GetData() *TriggerContentTypeArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FilterTriggerContentTypeResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *FilterTriggerContentTypeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateRoleRequest struct {
	Role *Role `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
}

func (m *CreateRoleRequest) Reset()                    { *m = CreateRoleRequest{} }
func (m *CreateRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRoleRequest) ProtoMessage()               {}
func (*CreateRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{216} }

func (m *CreateRoleRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type CreateRoleResponse struct {
	Data    *RoleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateRoleResponse) Reset()                    { *m = CreateRoleResponse{} }
func (m *CreateRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRoleResponse) ProtoMessage()               {}
func (*CreateRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{217} }

func (m *CreateRoleResponse) GetData() *RoleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateRoleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateRoleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateRoleRequest struct {
	Role *Role `protobuf:"bytes,1,opt,name=role" json:"role,omitempty"`
}

func (m *UpdateRoleRequest) Reset()                    { *m = UpdateRoleRequest{} }
func (m *UpdateRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRoleRequest) ProtoMessage()               {}
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{218} }

func (m *UpdateRoleRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type UpdateRoleResponse struct {
	Data    *RoleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateRoleResponse) Reset()                    { *m = UpdateRoleResponse{} }
func (m *UpdateRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateRoleResponse) ProtoMessage()               {}
func (*UpdateRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{219} }

func (m *UpdateRoleResponse) GetData() *RoleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateRoleResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateRoleResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadRoleByNameslugRequest struct {
	NameSlug string `protobuf:"bytes,1,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *ReadRoleByNameslugRequest) Reset()                    { *m = ReadRoleByNameslugRequest{} }
func (m *ReadRoleByNameslugRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRoleByNameslugRequest) ProtoMessage()               {}
func (*ReadRoleByNameslugRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{220} }

func (m *ReadRoleByNameslugRequest) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type ReadRoleByNameslugResponse struct {
	Data    *RoleData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadRoleByNameslugResponse) Reset()                    { *m = ReadRoleByNameslugResponse{} }
func (m *ReadRoleByNameslugResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadRoleByNameslugResponse) ProtoMessage()               {}
func (*ReadRoleByNameslugResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{221} }

func (m *ReadRoleByNameslugResponse) GetData() *RoleData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadRoleByNameslugResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadRoleByNameslugResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UploadRequest struct {
	UploadFile string `protobuf:"bytes,1,opt,name=upload_file,json=uploadFile" json:"upload_file,omitempty"`
	OrgId      string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId     string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UploadRequest) Reset()                    { *m = UploadRequest{} }
func (m *UploadRequest) String() string            { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()               {}
func (*UploadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{222} }

func (m *UploadRequest) GetUploadFile() string {
	if m != nil {
		return m.UploadFile
	}
	return ""
}

func (m *UploadRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UploadRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UploadResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *UploadResponse) Reset()                    { *m = UploadResponse{} }
func (m *UploadResponse) String() string            { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()               {}
func (*UploadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{223} }

func (m *UploadResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UploadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type SetbackData struct {
	Setback *Setback `protobuf:"bytes,1,opt,name=setback" json:"setback,omitempty"`
}

func (m *SetbackData) Reset()                    { *m = SetbackData{} }
func (m *SetbackData) String() string            { return proto.CompactTextString(m) }
func (*SetbackData) ProtoMessage()               {}
func (*SetbackData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{224} }

func (m *SetbackData) GetSetback() *Setback {
	if m != nil {
		return m.Setback
	}
	return nil
}

type SetbackArrData struct {
	Setbacks []*Setback `protobuf:"bytes,1,rep,name=setbacks" json:"setbacks,omitempty"`
}

func (m *SetbackArrData) Reset()                    { *m = SetbackArrData{} }
func (m *SetbackArrData) String() string            { return proto.CompactTextString(m) }
func (*SetbackArrData) ProtoMessage()               {}
func (*SetbackArrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{225} }

func (m *SetbackArrData) GetSetbacks() []*Setback {
	if m != nil {
		return m.Setbacks
	}
	return nil
}

type AllSetbacksRequest struct {
	OrgId         string `protobuf:"bytes,1,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId        string `protobuf:"bytes,2,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Limit         int64  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	Offset        int64  `protobuf:"varint,4,opt,name=offset" json:"offset,omitempty"`
	SortParameter string `protobuf:"bytes,5,opt,name=sort_parameter,json=sortParameter" json:"sort_parameter,omitempty"`
	SortDirection string `protobuf:"bytes,6,opt,name=sort_direction,json=sortDirection" json:"sort_direction,omitempty"`
}

func (m *AllSetbacksRequest) Reset()                    { *m = AllSetbacksRequest{} }
func (m *AllSetbacksRequest) String() string            { return proto.CompactTextString(m) }
func (*AllSetbacksRequest) ProtoMessage()               {}
func (*AllSetbacksRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{226} }

func (m *AllSetbacksRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AllSetbacksRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *AllSetbacksRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *AllSetbacksRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *AllSetbacksRequest) GetSortParameter() string {
	if m != nil {
		return m.SortParameter
	}
	return ""
}

func (m *AllSetbacksRequest) GetSortDirection() string {
	if m != nil {
		return m.SortDirection
	}
	return ""
}

type AllSetbacksResponse struct {
	Data    *SetbackArrData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64           `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string          `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *AllSetbacksResponse) Reset()                    { *m = AllSetbacksResponse{} }
func (m *AllSetbacksResponse) String() string            { return proto.CompactTextString(m) }
func (*AllSetbacksResponse) ProtoMessage()               {}
func (*AllSetbacksResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{227} }

func (m *AllSetbacksResponse) GetData() *SetbackArrData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *AllSetbacksResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AllSetbacksResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateSetbackRequest struct {
	Setback *Setback `protobuf:"bytes,1,opt,name=setback" json:"setback,omitempty"`
	OrgId   string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId  string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *CreateSetbackRequest) Reset()                    { *m = CreateSetbackRequest{} }
func (m *CreateSetbackRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateSetbackRequest) ProtoMessage()               {}
func (*CreateSetbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{228} }

func (m *CreateSetbackRequest) GetSetback() *Setback {
	if m != nil {
		return m.Setback
	}
	return nil
}

func (m *CreateSetbackRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *CreateSetbackRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type CreateSetbackResponse struct {
	Data    *SetbackData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *CreateSetbackResponse) Reset()                    { *m = CreateSetbackResponse{} }
func (m *CreateSetbackResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateSetbackResponse) ProtoMessage()               {}
func (*CreateSetbackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{229} }

func (m *CreateSetbackResponse) GetData() *SetbackData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CreateSetbackResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *CreateSetbackResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateSetbackRequest struct {
	Setback *Setback `protobuf:"bytes,1,opt,name=setback" json:"setback,omitempty"`
	OrgId   string   `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId  string   `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *UpdateSetbackRequest) Reset()                    { *m = UpdateSetbackRequest{} }
func (m *UpdateSetbackRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateSetbackRequest) ProtoMessage()               {}
func (*UpdateSetbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{230} }

func (m *UpdateSetbackRequest) GetSetback() *Setback {
	if m != nil {
		return m.Setback
	}
	return nil
}

func (m *UpdateSetbackRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *UpdateSetbackRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type UpdateSetbackResponse struct {
	Data    *SetbackData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateSetbackResponse) Reset()                    { *m = UpdateSetbackResponse{} }
func (m *UpdateSetbackResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateSetbackResponse) ProtoMessage()               {}
func (*UpdateSetbackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{231} }

func (m *UpdateSetbackResponse) GetData() *SetbackData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateSetbackResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateSetbackResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadSetbackRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *ReadSetbackRequest) Reset()                    { *m = ReadSetbackRequest{} }
func (m *ReadSetbackRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadSetbackRequest) ProtoMessage()               {}
func (*ReadSetbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{232} }

func (m *ReadSetbackRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadSetbackRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ReadSetbackRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type ReadSetbackResponse struct {
	Data    *SetbackData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadSetbackResponse) Reset()                    { *m = ReadSetbackResponse{} }
func (m *ReadSetbackResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadSetbackResponse) ProtoMessage()               {}
func (*ReadSetbackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{233} }

func (m *ReadSetbackResponse) GetData() *SetbackData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadSetbackResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadSetbackResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DeleteSetbackRequest struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *DeleteSetbackRequest) Reset()                    { *m = DeleteSetbackRequest{} }
func (m *DeleteSetbackRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSetbackRequest) ProtoMessage()               {}
func (*DeleteSetbackRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{234} }

func (m *DeleteSetbackRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DeleteSetbackRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *DeleteSetbackRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type DeleteSetbackResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *DeleteSetbackResponse) Reset()                    { *m = DeleteSetbackResponse{} }
func (m *DeleteSetbackResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteSetbackResponse) ProtoMessage()               {}
func (*DeleteSetbackResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{235} }

func (m *DeleteSetbackResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DeleteSetbackResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type AutocompleteSetbackSearchRequest struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *AutocompleteSetbackSearchRequest) Reset()         { *m = AutocompleteSetbackSearchRequest{} }
func (m *AutocompleteSetbackSearchRequest) String() string { return proto.CompactTextString(m) }
func (*AutocompleteSetbackSearchRequest) ProtoMessage()    {}
func (*AutocompleteSetbackSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{236}
}

func (m *AutocompleteSetbackSearchRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type ReadByNameslugRequest struct {
	NameSlug string `protobuf:"bytes,1,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *ReadByNameslugRequest) Reset()                    { *m = ReadByNameslugRequest{} }
func (m *ReadByNameslugRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadByNameslugRequest) ProtoMessage()               {}
func (*ReadByNameslugRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{237} }

func (m *ReadByNameslugRequest) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type App struct {
	Id          string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Summary     string      `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description string      `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconSlug    string      `protobuf:"bytes,5,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Created     int64       `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Updated     int64       `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	Image       string      `protobuf:"bytes,8,opt,name=image" json:"image,omitempty"`
	Tags        []string    `protobuf:"bytes,9,rep,name=tags" json:"tags,omitempty"`
	Platforms   []*Platform `protobuf:"bytes,10,rep,name=platforms" json:"platforms,omitempty"`
	NameSlug    string      `protobuf:"bytes,11,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *App) Reset()                    { *m = App{} }
func (m *App) String() string            { return proto.CompactTextString(m) }
func (*App) ProtoMessage()               {}
func (*App) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{238} }

func (m *App) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *App) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *App) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *App) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *App) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *App) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *App) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *App) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *App) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *App) GetPlatforms() []*Platform {
	if m != nil {
		return m.Platforms
	}
	return nil
}

func (m *App) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type Platform struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameSlug string `protobuf:"bytes,3,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	IconSlug string `protobuf:"bytes,4,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Url      string `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	Created  int64  `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Updated  int64  `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
}

func (m *Platform) Reset()                    { *m = Platform{} }
func (m *Platform) String() string            { return proto.CompactTextString(m) }
func (*Platform) ProtoMessage()               {}
func (*Platform) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{239} }

func (m *Platform) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Platform) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Platform) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *Platform) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *Platform) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Platform) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Platform) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type Wearable struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Summary     string   `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconSlug    string   `protobuf:"bytes,5,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Created     int64    `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Updated     int64    `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	Image       string   `protobuf:"bytes,8,opt,name=image" json:"image,omitempty"`
	Url         string   `protobuf:"bytes,9,opt,name=url" json:"url,omitempty"`
	Tags        []string `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	NameSlug    string   `protobuf:"bytes,11,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *Wearable) Reset()                    { *m = Wearable{} }
func (m *Wearable) String() string            { return proto.CompactTextString(m) }
func (*Wearable) ProtoMessage()               {}
func (*Wearable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{240} }

func (m *Wearable) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Wearable) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Wearable) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Wearable) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Wearable) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *Wearable) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Wearable) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Wearable) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Wearable) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Wearable) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Wearable) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type Device struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Summary     string   `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconSlug    string   `protobuf:"bytes,5,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Created     int64    `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Updated     int64    `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	Image       string   `protobuf:"bytes,8,opt,name=image" json:"image,omitempty"`
	Url         string   `protobuf:"bytes,9,opt,name=url" json:"url,omitempty"`
	Tags        []string `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	NameSlug    string   `protobuf:"bytes,11,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{241} }

func (m *Device) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Device) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Device) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *Device) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Device) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Device) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Device) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Device) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Device) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type Marker struct {
	Id             string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name           string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Summary        string           `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description    string           `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconSlug       string           `protobuf:"bytes,5,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	OrgId          string           `protobuf:"bytes,6,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created        int64            `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	Updated        int64            `protobuf:"varint,8,opt,name=updated" json:"updated,omitempty"`
	Unit           []string         `protobuf:"bytes,9,rep,name=unit" json:"unit,omitempty"`
	Apps           []*App           `protobuf:"bytes,10,rep,name=apps" json:"apps,omitempty"`
	Wearables      []*Wearable      `protobuf:"bytes,11,rep,name=wearables" json:"wearables,omitempty"`
	Devices        []*Device        `protobuf:"bytes,12,rep,name=devices" json:"devices,omitempty"`
	TrackerMethods []*TrackerMethod `protobuf:"bytes,13,rep,name=trackerMethods" json:"trackerMethods,omitempty"`
	NameSlug       string           `protobuf:"bytes,14,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *Marker) Reset()                    { *m = Marker{} }
func (m *Marker) String() string            { return proto.CompactTextString(m) }
func (*Marker) ProtoMessage()               {}
func (*Marker) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{242} }

func (m *Marker) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Marker) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Marker) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Marker) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Marker) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *Marker) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Marker) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Marker) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Marker) GetUnit() []string {
	if m != nil {
		return m.Unit
	}
	return nil
}

func (m *Marker) GetApps() []*App {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *Marker) GetWearables() []*Wearable {
	if m != nil {
		return m.Wearables
	}
	return nil
}

func (m *Marker) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

func (m *Marker) GetTrackerMethods() []*TrackerMethod {
	if m != nil {
		return m.TrackerMethods
	}
	return nil
}

func (m *Marker) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type Module struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Summary     string `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconSlug    string `protobuf:"bytes,5,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	NameSlug    string `protobuf:"bytes,6,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	Created     int64  `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	Updated     int64  `protobuf:"varint,8,opt,name=updated" json:"updated,omitempty"`
	Settings    string `protobuf:"bytes,9,opt,name=settings" json:"settings,omitempty"`
	DisplayName string `protobuf:"bytes,10,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Path        string `protobuf:"bytes,11,opt,name=path" json:"path,omitempty"`
}

func (m *Module) Reset()                    { *m = Module{} }
func (m *Module) String() string            { return proto.CompactTextString(m) }
func (*Module) ProtoMessage()               {}
func (*Module) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{243} }

func (m *Module) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Module) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Module) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Module) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Module) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *Module) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *Module) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Module) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Module) GetSettings() string {
	if m != nil {
		return m.Settings
	}
	return ""
}

func (m *Module) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Module) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type Social struct {
	Type          *SocialType `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	CustomMessage string      `protobuf:"bytes,2,opt,name=customMessage" json:"customMessage,omitempty"`
}

func (m *Social) Reset()                    { *m = Social{} }
func (m *Social) String() string            { return proto.CompactTextString(m) }
func (*Social) ProtoMessage()               {}
func (*Social) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{244} }

func (m *Social) GetType() *SocialType {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Social) GetCustomMessage() string {
	if m != nil {
		return m.CustomMessage
	}
	return ""
}

// this needs to be changed in code for survey-sry, plan-srv, response-srv, behaviour-srv
type SocialType struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Url      string `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	NameSlug string `protobuf:"bytes,4,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	Created  int64  `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Updated  int64  `protobuf:"varint,6,opt,name=updated" json:"updated,omitempty"`
}

func (m *SocialType) Reset()                    { *m = SocialType{} }
func (m *SocialType) String() string            { return proto.CompactTextString(m) }
func (*SocialType) ProtoMessage()               {}
func (*SocialType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{245} }

func (m *SocialType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SocialType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SocialType) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *SocialType) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *SocialType) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *SocialType) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

// this needs to be changed in code for survey-sry, plan-srv, response-srv, behaviour-srv
type Notification struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ModuleId             string             `protobuf:"bytes,2,opt,name=module_id,json=moduleId" json:"module_id,omitempty"`
	Name                 string             `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Description          string             `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	Target               NotificationTarget `protobuf:"varint,5,opt,name=target,enum=go.micro.srv.static.NotificationTarget" json:"target,omitempty"`
	NameSlug             string             `protobuf:"bytes,6,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	IconSlug             string             `protobuf:"bytes,7,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Created              int64              `protobuf:"varint,8,opt,name=created" json:"created,omitempty"`
	Updated              int64              `protobuf:"varint,9,opt,name=updated" json:"updated,omitempty"`
	NotificationReminder int64              `protobuf:"varint,10,opt,name=notificationReminder" json:"notificationReminder,omitempty"`
	Unit                 string             `protobuf:"bytes,11,opt,name=unit" json:"unit,omitempty"`
}

func (m *Notification) Reset()                    { *m = Notification{} }
func (m *Notification) String() string            { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()               {}
func (*Notification) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{246} }

func (m *Notification) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Notification) GetModuleId() string {
	if m != nil {
		return m.ModuleId
	}
	return ""
}

func (m *Notification) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Notification) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Notification) GetTarget() NotificationTarget {
	if m != nil {
		return m.Target
	}
	return NotificationTarget_NotificationTarget_NONE
}

func (m *Notification) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *Notification) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *Notification) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Notification) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Notification) GetNotificationReminder() int64 {
	if m != nil {
		return m.NotificationReminder
	}
	return 0
}

func (m *Notification) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

// this needs to be changed in code for behaviour-srv
type TrackerMethod struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameSlug string `protobuf:"bytes,3,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	IconSlug string `protobuf:"bytes,4,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Created  int64  `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Updated  int64  `protobuf:"varint,6,opt,name=updated" json:"updated,omitempty"`
}

func (m *TrackerMethod) Reset()                    { *m = TrackerMethod{} }
func (m *TrackerMethod) String() string            { return proto.CompactTextString(m) }
func (*TrackerMethod) ProtoMessage()               {}
func (*TrackerMethod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{247} }

func (m *TrackerMethod) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TrackerMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrackerMethod) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *TrackerMethod) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *TrackerMethod) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *TrackerMethod) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

// this needs to be changed in code for behaviour-srv (make appropriate change in behaviour-srv GoalCategoryAims  to BehaviourCategoryAims)
type BehaviourCategoryAim struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameSlug string `protobuf:"bytes,3,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	IconSlug string `protobuf:"bytes,4,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Created  int64  `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Updated  int64  `protobuf:"varint,6,opt,name=updated" json:"updated,omitempty"`
}

func (m *BehaviourCategoryAim) Reset()                    { *m = BehaviourCategoryAim{} }
func (m *BehaviourCategoryAim) String() string            { return proto.CompactTextString(m) }
func (*BehaviourCategoryAim) ProtoMessage()               {}
func (*BehaviourCategoryAim) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{248} }

func (m *BehaviourCategoryAim) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BehaviourCategoryAim) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BehaviourCategoryAim) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *BehaviourCategoryAim) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *BehaviourCategoryAim) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *BehaviourCategoryAim) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type BehaviourCategory struct {
	Id            string                  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name          string                  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Summary       string                  `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description   string                  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconSlug      string                  `protobuf:"bytes,5,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	OrgId         string                  `protobuf:"bytes,6,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created       int64                   `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	Updated       int64                   `protobuf:"varint,8,opt,name=updated" json:"updated,omitempty"`
	Tags          []string                `protobuf:"bytes,9,rep,name=tags" json:"tags,omitempty"`
	Aims          []*BehaviourCategoryAim `protobuf:"bytes,10,rep,name=aims" json:"aims,omitempty"`
	MarkerDefault *Marker                 `protobuf:"bytes,11,opt,name=markerDefault" json:"markerDefault,omitempty"`
	MarkerOptions []*Marker               `protobuf:"bytes,12,rep,name=markerOptions" json:"markerOptions,omitempty"`
}

func (m *BehaviourCategory) Reset()                    { *m = BehaviourCategory{} }
func (m *BehaviourCategory) String() string            { return proto.CompactTextString(m) }
func (*BehaviourCategory) ProtoMessage()               {}
func (*BehaviourCategory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{249} }

func (m *BehaviourCategory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *BehaviourCategory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BehaviourCategory) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *BehaviourCategory) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *BehaviourCategory) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *BehaviourCategory) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *BehaviourCategory) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *BehaviourCategory) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *BehaviourCategory) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *BehaviourCategory) GetAims() []*BehaviourCategoryAim {
	if m != nil {
		return m.Aims
	}
	return nil
}

func (m *BehaviourCategory) GetMarkerDefault() *Marker {
	if m != nil {
		return m.MarkerDefault
	}
	return nil
}

func (m *BehaviourCategory) GetMarkerOptions() []*Marker {
	if m != nil {
		return m.MarkerOptions
	}
	return nil
}

type ContentParentCategory struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Summary     string   `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconSlug    string   `protobuf:"bytes,5,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	OrgId       string   `protobuf:"bytes,6,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created     int64    `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	Updated     int64    `protobuf:"varint,8,opt,name=updated" json:"updated,omitempty"`
	Tags        []string `protobuf:"bytes,9,rep,name=tags" json:"tags,omitempty"`
}

func (m *ContentParentCategory) Reset()                    { *m = ContentParentCategory{} }
func (m *ContentParentCategory) String() string            { return proto.CompactTextString(m) }
func (*ContentParentCategory) ProtoMessage()               {}
func (*ContentParentCategory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{250} }

func (m *ContentParentCategory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContentParentCategory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContentParentCategory) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ContentParentCategory) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ContentParentCategory) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *ContentParentCategory) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ContentParentCategory) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ContentParentCategory) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ContentParentCategory) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type ContentCategory struct {
	Id             string                   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name           string                   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameSlug       string                   `protobuf:"bytes,3,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	Summary        string                   `protobuf:"bytes,4,opt,name=summary" json:"summary,omitempty"`
	Description    string                   `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	IconSlug       string                   `protobuf:"bytes,6,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	OrgId          string                   `protobuf:"bytes,7,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Parent         []*ContentParentCategory `protobuf:"bytes,8,rep,name=parent" json:"parent,omitempty"`
	Actions        []*Action                `protobuf:"bytes,9,rep,name=actions" json:"actions,omitempty"`
	Created        int64                    `protobuf:"varint,10,opt,name=created" json:"created,omitempty"`
	Updated        int64                    `protobuf:"varint,11,opt,name=updated" json:"updated,omitempty"`
	Tags           []string                 `protobuf:"bytes,12,rep,name=tags" json:"tags,omitempty"`
	TrackerMethods []*TrackerMethod         `protobuf:"bytes,13,rep,name=trackerMethods" json:"trackerMethods,omitempty"`
}

func (m *ContentCategory) Reset()                    { *m = ContentCategory{} }
func (m *ContentCategory) String() string            { return proto.CompactTextString(m) }
func (*ContentCategory) ProtoMessage()               {}
func (*ContentCategory) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{251} }

func (m *ContentCategory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContentCategory) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContentCategory) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *ContentCategory) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ContentCategory) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ContentCategory) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *ContentCategory) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ContentCategory) GetParent() []*ContentParentCategory {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (m *ContentCategory) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *ContentCategory) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ContentCategory) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ContentCategory) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ContentCategory) GetTrackerMethods() []*TrackerMethod {
	if m != nil {
		return m.TrackerMethods
	}
	return nil
}

type Action struct {
	Id          string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string       `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string       `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	IconSlug    string       `protobuf:"bytes,4,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	ActionSlug  string       `protobuf:"bytes,5,opt,name=action_slug,json=actionSlug" json:"action_slug,omitempty"`
	OrgId       string       `protobuf:"bytes,6,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created     int64        `protobuf:"varint,7,opt,name=created" json:"created,omitempty"`
	Updated     int64        `protobuf:"varint,8,opt,name=updated" json:"updated,omitempty"`
	Tags        []string     `protobuf:"bytes,9,rep,name=tags" json:"tags,omitempty"`
	Method      ActionMethod `protobuf:"varint,10,opt,name=method,enum=go.micro.srv.static.ActionMethod" json:"method,omitempty"`
	NameSlug    string       `protobuf:"bytes,11,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *Action) Reset()                    { *m = Action{} }
func (m *Action) String() string            { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()               {}
func (*Action) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{252} }

func (m *Action) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Action) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Action) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Action) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *Action) GetActionSlug() string {
	if m != nil {
		return m.ActionSlug
	}
	return ""
}

func (m *Action) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Action) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Action) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Action) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Action) GetMethod() ActionMethod {
	if m != nil {
		return m.Method
	}
	return ActionMethod_ActionMethod_NONE
}

func (m *Action) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

type ContentSourceType struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Created     int64    `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Updated     int64    `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
	Tags        []string `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	NameSlug    string   `protobuf:"bytes,7,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	IconSlug    string   `protobuf:"bytes,8,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
}

func (m *ContentSourceType) Reset()                    { *m = ContentSourceType{} }
func (m *ContentSourceType) String() string            { return proto.CompactTextString(m) }
func (*ContentSourceType) ProtoMessage()               {}
func (*ContentSourceType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{253} }

func (m *ContentSourceType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContentSourceType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContentSourceType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ContentSourceType) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ContentSourceType) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ContentSourceType) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ContentSourceType) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *ContentSourceType) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

type ContentType struct {
	Id                string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name              string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description       string   `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	ContentTypeString string   `protobuf:"bytes,4,opt,name=contentTypeString" json:"contentTypeString,omitempty"`
	Created           int64    `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Updated           int64    `protobuf:"varint,6,opt,name=updated" json:"updated,omitempty"`
	Tags              []string `protobuf:"bytes,7,rep,name=tags" json:"tags,omitempty"`
	NameSlug          string   `protobuf:"bytes,8,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	IconSlug          string   `protobuf:"bytes,9,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
}

func (m *ContentType) Reset()                    { *m = ContentType{} }
func (m *ContentType) String() string            { return proto.CompactTextString(m) }
func (*ContentType) ProtoMessage()               {}
func (*ContentType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{254} }

func (m *ContentType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContentType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContentType) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ContentType) GetContentTypeString() string {
	if m != nil {
		return m.ContentTypeString
	}
	return ""
}

func (m *ContentType) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ContentType) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ContentType) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ContentType) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *ContentType) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

type ModuleTrigger struct {
	Id           string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Summary      string                `protobuf:"bytes,3,opt,name=summary" json:"summary,omitempty"`
	Description  string                `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	IconSlug     string                `protobuf:"bytes,5,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Created      int64                 `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Updated      int64                 `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	Type         TriggerType           `protobuf:"varint,8,opt,name=type,enum=go.micro.srv.static.TriggerType" json:"type,omitempty"`
	Module       *Module               `protobuf:"bytes,9,opt,name=module" json:"module,omitempty"`
	Events       []*TriggerEvent       `protobuf:"bytes,10,rep,name=events" json:"events,omitempty"`
	Duration     []string              `protobuf:"bytes,11,rep,name=duration" json:"duration,omitempty"`
	Delay        string                `protobuf:"bytes,12,opt,name=delay" json:"delay,omitempty"`
	ContentTypes []*TriggerContentType `protobuf:"bytes,13,rep,name=contentTypes" json:"contentTypes,omitempty"`
	ActioMethod  ActionMethod          `protobuf:"varint,14,opt,name=actioMethod,enum=go.micro.srv.static.ActionMethod" json:"actioMethod,omitempty"`
}

func (m *ModuleTrigger) Reset()                    { *m = ModuleTrigger{} }
func (m *ModuleTrigger) String() string            { return proto.CompactTextString(m) }
func (*ModuleTrigger) ProtoMessage()               {}
func (*ModuleTrigger) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{255} }

func (m *ModuleTrigger) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ModuleTrigger) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModuleTrigger) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ModuleTrigger) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ModuleTrigger) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *ModuleTrigger) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ModuleTrigger) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ModuleTrigger) GetType() TriggerType {
	if m != nil {
		return m.Type
	}
	return TriggerType_TriggerType_NONE
}

func (m *ModuleTrigger) GetModule() *Module {
	if m != nil {
		return m.Module
	}
	return nil
}

func (m *ModuleTrigger) GetEvents() []*TriggerEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *ModuleTrigger) GetDuration() []string {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *ModuleTrigger) GetDelay() string {
	if m != nil {
		return m.Delay
	}
	return ""
}

func (m *ModuleTrigger) GetContentTypes() []*TriggerContentType {
	if m != nil {
		return m.ContentTypes
	}
	return nil
}

func (m *ModuleTrigger) GetActioMethod() ActionMethod {
	if m != nil {
		return m.ActioMethod
	}
	return ActionMethod_ActionMethod_NONE
}

type Schedule struct {
	RRule string `protobuf:"bytes,1,opt,name=RRule" json:"RRule,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{256} }

func (m *Schedule) GetRRule() string {
	if m != nil {
		return m.RRule
	}
	return ""
}

type TriggerContentType struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameSlug string `protobuf:"bytes,3,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	Created  int64  `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Updated  int64  `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
}

func (m *TriggerContentType) Reset()                    { *m = TriggerContentType{} }
func (m *TriggerContentType) String() string            { return proto.CompactTextString(m) }
func (*TriggerContentType) ProtoMessage()               {}
func (*TriggerContentType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{257} }

func (m *TriggerContentType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TriggerContentType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TriggerContentType) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *TriggerContentType) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *TriggerContentType) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type TriggerEvent struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameSlug string `protobuf:"bytes,3,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	OrgId    string `protobuf:"bytes,4,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created  int64  `protobuf:"varint,5,opt,name=created" json:"created,omitempty"`
	Updated  int64  `protobuf:"varint,6,opt,name=updated" json:"updated,omitempty"`
}

func (m *TriggerEvent) Reset()                    { *m = TriggerEvent{} }
func (m *TriggerEvent) String() string            { return proto.CompactTextString(m) }
func (*TriggerEvent) ProtoMessage()               {}
func (*TriggerEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{258} }

func (m *TriggerEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TriggerEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TriggerEvent) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *TriggerEvent) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *TriggerEvent) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *TriggerEvent) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type Address struct {
	Type            string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	AddressLocality string `protobuf:"bytes,2,opt,name=addressLocality" json:"addressLocality,omitempty"`
	AddressRegion   string `protobuf:"bytes,3,opt,name=addressRegion" json:"addressRegion,omitempty"`
	PostalCode      string `protobuf:"bytes,4,opt,name=postalCode" json:"postalCode,omitempty"`
	StreetAddress   string `protobuf:"bytes,5,opt,name=streetAddress" json:"streetAddress,omitempty"`
	Address1        string `protobuf:"bytes,6,opt,name=address1" json:"address1,omitempty"`
	Address2        string `protobuf:"bytes,7,opt,name=address2" json:"address2,omitempty"`
	City            string `protobuf:"bytes,8,opt,name=city" json:"city,omitempty"`
	County          string `protobuf:"bytes,9,opt,name=county" json:"county,omitempty"`
	Country         string `protobuf:"bytes,10,opt,name=country" json:"country,omitempty"`
	Postcode        string `protobuf:"bytes,11,opt,name=postcode" json:"postcode,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{259} }

func (m *Address) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Address) GetAddressLocality() string {
	if m != nil {
		return m.AddressLocality
	}
	return ""
}

func (m *Address) GetAddressRegion() string {
	if m != nil {
		return m.AddressRegion
	}
	return ""
}

func (m *Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Address) GetStreetAddress() string {
	if m != nil {
		return m.StreetAddress
	}
	return ""
}

func (m *Address) GetAddress1() string {
	if m != nil {
		return m.Address1
	}
	return ""
}

func (m *Address) GetAddress2() string {
	if m != nil {
		return m.Address2
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetCounty() string {
	if m != nil {
		return m.County
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

type Role struct {
	Id          string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId       string       `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created     int64        `protobuf:"varint,3,opt,name=created" json:"created,omitempty"`
	Updated     int64        `protobuf:"varint,4,opt,name=updated" json:"updated,omitempty"`
	Summary     string       `protobuf:"bytes,5,opt,name=summary" json:"summary,omitempty"`
	Name        string       `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	NameSlug    string       `protobuf:"bytes,7,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	Description string       `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
	Permissions []Permission `protobuf:"varint,9,rep,packed,name=permissions,enum=go.micro.srv.static.Permission" json:"permissions,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{260} }

func (m *Role) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Role) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Role) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Role) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Role) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *Role) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Role) GetPermissions() []Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

type AutocompleteResponse struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
}

func (m *AutocompleteResponse) Reset()                    { *m = AutocompleteResponse{} }
func (m *AutocompleteResponse) String() string            { return proto.CompactTextString(m) }
func (*AutocompleteResponse) ProtoMessage()               {}
func (*AutocompleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{261} }

func (m *AutocompleteResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AutocompleteResponse) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AutocompleteResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type Target struct {
	Aim         *BehaviourCategoryAim `protobuf:"bytes,1,opt,name=aim" json:"aim,omitempty"`
	Marker      *Marker               `protobuf:"bytes,2,opt,name=marker" json:"marker,omitempty"`
	TargetValue int64                 `protobuf:"varint,4,opt,name=targetValue" json:"targetValue,omitempty"`
	Unit        string                `protobuf:"bytes,5,opt,name=unit" json:"unit,omitempty"`
	Recurrence  []*Recurrence         `protobuf:"bytes,6,rep,name=recurrence" json:"recurrence,omitempty"`
}

func (m *Target) Reset()                    { *m = Target{} }
func (m *Target) String() string            { return proto.CompactTextString(m) }
func (*Target) ProtoMessage()               {}
func (*Target) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{262} }

func (m *Target) GetAim() *BehaviourCategoryAim {
	if m != nil {
		return m.Aim
	}
	return nil
}

func (m *Target) GetMarker() *Marker {
	if m != nil {
		return m.Marker
	}
	return nil
}

func (m *Target) GetTargetValue() int64 {
	if m != nil {
		return m.TargetValue
	}
	return 0
}

func (m *Target) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *Target) GetRecurrence() []*Recurrence {
	if m != nil {
		return m.Recurrence
	}
	return nil
}

type Recurrence struct {
	RRule string `protobuf:"bytes,1,opt,name=RRule" json:"RRule,omitempty"`
}

func (m *Recurrence) Reset()                    { *m = Recurrence{} }
func (m *Recurrence) String() string            { return proto.CompactTextString(m) }
func (*Recurrence) ProtoMessage()               {}
func (*Recurrence) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{263} }

func (m *Recurrence) GetRRule() string {
	if m != nil {
		return m.RRule
	}
	return ""
}

// which classification taxonmy is being used for this content
type Taxonomy struct {
	Id          string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ShortName   string   `protobuf:"bytes,3,opt,name=short_name,json=shortName" json:"short_name,omitempty"`
	Description string   `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	OrgId       string   `protobuf:"bytes,5,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created     int64    `protobuf:"varint,6,opt,name=created" json:"created,omitempty"`
	Updated     int64    `protobuf:"varint,7,opt,name=updated" json:"updated,omitempty"`
	Tags        []string `protobuf:"bytes,8,rep,name=tags" json:"tags,omitempty"`
	Weight      int64    `protobuf:"varint,9,opt,name=weight" json:"weight,omitempty"`
	Priority    int64    `protobuf:"varint,10,opt,name=priority" json:"priority,omitempty"`
	NameSlug    string   `protobuf:"bytes,11,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
}

func (m *Taxonomy) Reset()                    { *m = Taxonomy{} }
func (m *Taxonomy) String() string            { return proto.CompactTextString(m) }
func (*Taxonomy) ProtoMessage()               {}
func (*Taxonomy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{264} }

func (m *Taxonomy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Taxonomy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Taxonomy) GetShortName() string {
	if m != nil {
		return m.ShortName
	}
	return ""
}

func (m *Taxonomy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Taxonomy) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Taxonomy) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Taxonomy) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Taxonomy) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Taxonomy) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Taxonomy) GetPriority() int64 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *Taxonomy) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

// different category item
type ContentCategoryItem struct {
	Id          string           `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	NameSlug    string           `protobuf:"bytes,3,opt,name=name_slug,json=nameSlug" json:"name_slug,omitempty"`
	IconSlug    string           `protobuf:"bytes,4,opt,name=icon_slug,json=iconSlug" json:"icon_slug,omitempty"`
	Summary     string           `protobuf:"bytes,5,opt,name=summary" json:"summary,omitempty"`
	Description string           `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	OrgId       string           `protobuf:"bytes,7,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created     int64            `protobuf:"varint,8,opt,name=created" json:"created,omitempty"`
	Updated     int64            `protobuf:"varint,9,opt,name=updated" json:"updated,omitempty"`
	Tags        []string         `protobuf:"bytes,10,rep,name=tags" json:"tags,omitempty"`
	Taxonomy    *Taxonomy        `protobuf:"bytes,11,opt,name=taxonomy" json:"taxonomy,omitempty"`
	Weight      int64            `protobuf:"varint,12,opt,name=weight" json:"weight,omitempty"`
	Priority    int64            `protobuf:"varint,13,opt,name=priority" json:"priority,omitempty"`
	Category    *ContentCategory `protobuf:"bytes,14,opt,name=category" json:"category,omitempty"`
}

func (m *ContentCategoryItem) Reset()                    { *m = ContentCategoryItem{} }
func (m *ContentCategoryItem) String() string            { return proto.CompactTextString(m) }
func (*ContentCategoryItem) ProtoMessage()               {}
func (*ContentCategoryItem) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{265} }

func (m *ContentCategoryItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ContentCategoryItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContentCategoryItem) GetNameSlug() string {
	if m != nil {
		return m.NameSlug
	}
	return ""
}

func (m *ContentCategoryItem) GetIconSlug() string {
	if m != nil {
		return m.IconSlug
	}
	return ""
}

func (m *ContentCategoryItem) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *ContentCategoryItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ContentCategoryItem) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ContentCategoryItem) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *ContentCategoryItem) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *ContentCategoryItem) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ContentCategoryItem) GetTaxonomy() *Taxonomy {
	if m != nil {
		return m.Taxonomy
	}
	return nil
}

func (m *ContentCategoryItem) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *ContentCategoryItem) GetPriority() int64 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *ContentCategoryItem) GetCategory() *ContentCategory {
	if m != nil {
		return m.Category
	}
	return nil
}

type Setback struct {
	Id          string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	OrgId       string  `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Name        string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Created     int64   `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Updated     int64   `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
	Description string  `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	Action      *Action `protobuf:"bytes,7,opt,name=action" json:"action,omitempty"`
}

func (m *Setback) Reset()                    { *m = Setback{} }
func (m *Setback) String() string            { return proto.CompactTextString(m) }
func (*Setback) ProtoMessage()               {}
func (*Setback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{266} }

func (m *Setback) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Setback) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Setback) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Setback) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Setback) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Setback) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Setback) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

type Setting struct {
	Visibility             Visibility      `protobuf:"varint,1,opt,name=visibility,enum=go.micro.srv.static.Visibility" json:"visibility,omitempty"`
	Notifications          []*Notification `protobuf:"bytes,2,rep,name=notifications" json:"notifications,omitempty"`
	Social                 []*Social       `protobuf:"bytes,3,rep,name=social" json:"social,omitempty"`
	LinkSharingEnabled     bool            `protobuf:"varint,4,opt,name=linkSharingEnabled" json:"linkSharingEnabled,omitempty"`
	EmbeddingEnabled       bool            `protobuf:"varint,5,opt,name=embeddingEnabled" json:"embeddingEnabled,omitempty"`
	ShareableLink          string          `protobuf:"bytes,6,opt,name=shareableLink" json:"shareableLink,omitempty"`
	AuthenticationRequired bool            `protobuf:"varint,7,opt,name=authenticationRequired" json:"authenticationRequired,omitempty"`
	ShowCaptcha            bool            `protobuf:"varint,8,opt,name=showCaptcha" json:"showCaptcha,omitempty"`
}

func (m *Setting) Reset()                    { *m = Setting{} }
func (m *Setting) String() string            { return proto.CompactTextString(m) }
func (*Setting) ProtoMessage()               {}
func (*Setting) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{267} }

func (m *Setting) GetVisibility() Visibility {
	if m != nil {
		return m.Visibility
	}
	return Visibility_Visibility_NONE
}

func (m *Setting) GetNotifications() []*Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

func (m *Setting) GetSocial() []*Social {
	if m != nil {
		return m.Social
	}
	return nil
}

func (m *Setting) GetLinkSharingEnabled() bool {
	if m != nil {
		return m.LinkSharingEnabled
	}
	return false
}

func (m *Setting) GetEmbeddingEnabled() bool {
	if m != nil {
		return m.EmbeddingEnabled
	}
	return false
}

func (m *Setting) GetShareableLink() string {
	if m != nil {
		return m.ShareableLink
	}
	return ""
}

func (m *Setting) GetAuthenticationRequired() bool {
	if m != nil {
		return m.AuthenticationRequired
	}
	return false
}

func (m *Setting) GetShowCaptcha() bool {
	if m != nil {
		return m.ShowCaptcha
	}
	return false
}

type Batch struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	OrgId   string `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Created int64  `protobuf:"varint,4,opt,name=created" json:"created,omitempty"`
	Updated int64  `protobuf:"varint,5,opt,name=updated" json:"updated,omitempty"`
}

func (m *Batch) Reset()                    { *m = Batch{} }
func (m *Batch) String() string            { return proto.CompactTextString(m) }
func (*Batch) ProtoMessage()               {}
func (*Batch) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{268} }

func (m *Batch) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Batch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Batch) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *Batch) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Batch) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

type SharedUserId struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *SharedUserId) Reset()                    { *m = SharedUserId{} }
func (m *SharedUserId) String() string            { return proto.CompactTextString(m) }
func (*SharedUserId) ProtoMessage()               {}
func (*SharedUserId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{269} }

func (m *SharedUserId) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterType((*AppData)(nil), "go.micro.srv.static.AppData")
	proto.RegisterType((*AppArrData)(nil), "go.micro.srv.static.AppArrData")
	proto.RegisterType((*PlatformData)(nil), "go.micro.srv.static.PlatformData")
	proto.RegisterType((*PlatformArrData)(nil), "go.micro.srv.static.PlatformArrData")
	proto.RegisterType((*DeviceData)(nil), "go.micro.srv.static.DeviceData")
	proto.RegisterType((*DeviceArrData)(nil), "go.micro.srv.static.DeviceArrData")
	proto.RegisterType((*WearableData)(nil), "go.micro.srv.static.WearableData")
	proto.RegisterType((*WearableArrData)(nil), "go.micro.srv.static.WearableArrData")
	proto.RegisterType((*MarkerData)(nil), "go.micro.srv.static.MarkerData")
	proto.RegisterType((*MarkerArrData)(nil), "go.micro.srv.static.MarkerArrData")
	proto.RegisterType((*ModuleData)(nil), "go.micro.srv.static.ModuleData")
	proto.RegisterType((*ModuleArrData)(nil), "go.micro.srv.static.ModuleArrData")
	proto.RegisterType((*BehaviourCategoryData)(nil), "go.micro.srv.static.BehaviourCategoryData")
	proto.RegisterType((*BehaviourCategoryArrData)(nil), "go.micro.srv.static.BehaviourCategoryArrData")
	proto.RegisterType((*SocialTypeData)(nil), "go.micro.srv.static.SocialTypeData")
	proto.RegisterType((*SocialTypeArrData)(nil), "go.micro.srv.static.SocialTypeArrData")
	proto.RegisterType((*NotificationData)(nil), "go.micro.srv.static.NotificationData")
	proto.RegisterType((*NotificationArrData)(nil), "go.micro.srv.static.NotificationArrData")
	proto.RegisterType((*TrackerMethodData)(nil), "go.micro.srv.static.TrackerMethodData")
	proto.RegisterType((*TrackerMethodArrData)(nil), "go.micro.srv.static.TrackerMethodArrData")
	proto.RegisterType((*BehaviourCategoryAimData)(nil), "go.micro.srv.static.BehaviourCategoryAimData")
	proto.RegisterType((*BehaviourCategoryAimArrData)(nil), "go.micro.srv.static.BehaviourCategoryAimArrData")
	proto.RegisterType((*ContentParentCategoryData)(nil), "go.micro.srv.static.ContentParentCategoryData")
	proto.RegisterType((*ContentParentCategoryArrData)(nil), "go.micro.srv.static.ContentParentCategoryArrData")
	proto.RegisterType((*ContentCategoryData)(nil), "go.micro.srv.static.ContentCategoryData")
	proto.RegisterType((*ContentCategoryArrData)(nil), "go.micro.srv.static.ContentCategoryArrData")
	proto.RegisterType((*ContentTypeData)(nil), "go.micro.srv.static.ContentTypeData")
	proto.RegisterType((*ContentTypeArrData)(nil), "go.micro.srv.static.ContentTypeArrData")
	proto.RegisterType((*ContentSourceTypeData)(nil), "go.micro.srv.static.ContentSourceTypeData")
	proto.RegisterType((*ContentSourceTypeArrData)(nil), "go.micro.srv.static.ContentSourceTypeArrData")
	proto.RegisterType((*ModuleTriggerData)(nil), "go.micro.srv.static.ModuleTriggerData")
	proto.RegisterType((*ModuleTriggerArrData)(nil), "go.micro.srv.static.ModuleTriggerArrData")
	proto.RegisterType((*TriggerContentTypeData)(nil), "go.micro.srv.static.TriggerContentTypeData")
	proto.RegisterType((*TriggerContentTypeArrData)(nil), "go.micro.srv.static.TriggerContentTypeArrData")
	proto.RegisterType((*RoleData)(nil), "go.micro.srv.static.RoleData")
	proto.RegisterType((*RoleArrData)(nil), "go.micro.srv.static.RoleArrData")
	proto.RegisterType((*AllAppsRequest)(nil), "go.micro.srv.static.AllAppsRequest")
	proto.RegisterType((*AllAppsResponse)(nil), "go.micro.srv.static.AllAppsResponse")
	proto.RegisterType((*CreateAppRequest)(nil), "go.micro.srv.static.CreateAppRequest")
	proto.RegisterType((*CreateAppResponse)(nil), "go.micro.srv.static.CreateAppResponse")
	proto.RegisterType((*UpdateAppRequest)(nil), "go.micro.srv.static.UpdateAppRequest")
	proto.RegisterType((*UpdateAppResponse)(nil), "go.micro.srv.static.UpdateAppResponse")
	proto.RegisterType((*ReadAppRequest)(nil), "go.micro.srv.static.ReadAppRequest")
	proto.RegisterType((*ReadAppResponse)(nil), "go.micro.srv.static.ReadAppResponse")
	proto.RegisterType((*DeleteAppRequest)(nil), "go.micro.srv.static.DeleteAppRequest")
	proto.RegisterType((*DeleteAppResponse)(nil), "go.micro.srv.static.DeleteAppResponse")
	proto.RegisterType((*AllPlatformsRequest)(nil), "go.micro.srv.static.AllPlatformsRequest")
	proto.RegisterType((*AllPlatformsResponse)(nil), "go.micro.srv.static.AllPlatformsResponse")
	proto.RegisterType((*CreatePlatformRequest)(nil), "go.micro.srv.static.CreatePlatformRequest")
	proto.RegisterType((*CreatePlatformResponse)(nil), "go.micro.srv.static.CreatePlatformResponse")
	proto.RegisterType((*UpdatePlatformRequest)(nil), "go.micro.srv.static.UpdatePlatformRequest")
	proto.RegisterType((*UpdatePlatformResponse)(nil), "go.micro.srv.static.UpdatePlatformResponse")
	proto.RegisterType((*ReadPlatformRequest)(nil), "go.micro.srv.static.ReadPlatformRequest")
	proto.RegisterType((*ReadPlatformResponse)(nil), "go.micro.srv.static.ReadPlatformResponse")
	proto.RegisterType((*DeletePlatformRequest)(nil), "go.micro.srv.static.DeletePlatformRequest")
	proto.RegisterType((*DeletePlatformResponse)(nil), "go.micro.srv.static.DeletePlatformResponse")
	proto.RegisterType((*AllDevicesRequest)(nil), "go.micro.srv.static.AllDevicesRequest")
	proto.RegisterType((*AllDevicesResponse)(nil), "go.micro.srv.static.AllDevicesResponse")
	proto.RegisterType((*CreateDeviceRequest)(nil), "go.micro.srv.static.CreateDeviceRequest")
	proto.RegisterType((*CreateDeviceResponse)(nil), "go.micro.srv.static.CreateDeviceResponse")
	proto.RegisterType((*UpdateDeviceRequest)(nil), "go.micro.srv.static.UpdateDeviceRequest")
	proto.RegisterType((*UpdateDeviceResponse)(nil), "go.micro.srv.static.UpdateDeviceResponse")
	proto.RegisterType((*ReadDeviceRequest)(nil), "go.micro.srv.static.ReadDeviceRequest")
	proto.RegisterType((*ReadDeviceResponse)(nil), "go.micro.srv.static.ReadDeviceResponse")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "go.micro.srv.static.DeleteDeviceRequest")
	proto.RegisterType((*DeleteDeviceResponse)(nil), "go.micro.srv.static.DeleteDeviceResponse")
	proto.RegisterType((*AllWearablesRequest)(nil), "go.micro.srv.static.AllWearablesRequest")
	proto.RegisterType((*AllWearablesResponse)(nil), "go.micro.srv.static.AllWearablesResponse")
	proto.RegisterType((*CreateWearableRequest)(nil), "go.micro.srv.static.CreateWearableRequest")
	proto.RegisterType((*CreateWearableResponse)(nil), "go.micro.srv.static.CreateWearableResponse")
	proto.RegisterType((*UpdateWearableRequest)(nil), "go.micro.srv.static.UpdateWearableRequest")
	proto.RegisterType((*UpdateWearableResponse)(nil), "go.micro.srv.static.UpdateWearableResponse")
	proto.RegisterType((*ReadWearableRequest)(nil), "go.micro.srv.static.ReadWearableRequest")
	proto.RegisterType((*ReadWearableResponse)(nil), "go.micro.srv.static.ReadWearableResponse")
	proto.RegisterType((*DeleteWearableRequest)(nil), "go.micro.srv.static.DeleteWearableRequest")
	proto.RegisterType((*DeleteWearableResponse)(nil), "go.micro.srv.static.DeleteWearableResponse")
	proto.RegisterType((*AllMarkersRequest)(nil), "go.micro.srv.static.AllMarkersRequest")
	proto.RegisterType((*AllMarkersResponse)(nil), "go.micro.srv.static.AllMarkersResponse")
	proto.RegisterType((*CreateMarkerRequest)(nil), "go.micro.srv.static.CreateMarkerRequest")
	proto.RegisterType((*CreateMarkerResponse)(nil), "go.micro.srv.static.CreateMarkerResponse")
	proto.RegisterType((*UpdateMarkerRequest)(nil), "go.micro.srv.static.UpdateMarkerRequest")
	proto.RegisterType((*UpdateMarkerResponse)(nil), "go.micro.srv.static.UpdateMarkerResponse")
	proto.RegisterType((*ReadMarkerRequest)(nil), "go.micro.srv.static.ReadMarkerRequest")
	proto.RegisterType((*ReadMarkerResponse)(nil), "go.micro.srv.static.ReadMarkerResponse")
	proto.RegisterType((*DeleteMarkerRequest)(nil), "go.micro.srv.static.DeleteMarkerRequest")
	proto.RegisterType((*DeleteMarkerResponse)(nil), "go.micro.srv.static.DeleteMarkerResponse")
	proto.RegisterType((*FilterMarkerRequest)(nil), "go.micro.srv.static.FilterMarkerRequest")
	proto.RegisterType((*FilterMarkerResponse)(nil), "go.micro.srv.static.FilterMarkerResponse")
	proto.RegisterType((*AllModulesRequest)(nil), "go.micro.srv.static.AllModulesRequest")
	proto.RegisterType((*AllModulesResponse)(nil), "go.micro.srv.static.AllModulesResponse")
	proto.RegisterType((*CreateModuleRequest)(nil), "go.micro.srv.static.CreateModuleRequest")
	proto.RegisterType((*CreateModuleResponse)(nil), "go.micro.srv.static.CreateModuleResponse")
	proto.RegisterType((*UpdateModuleRequest)(nil), "go.micro.srv.static.UpdateModuleRequest")
	proto.RegisterType((*UpdateModuleResponse)(nil), "go.micro.srv.static.UpdateModuleResponse")
	proto.RegisterType((*ReadModuleRequest)(nil), "go.micro.srv.static.ReadModuleRequest")
	proto.RegisterType((*ReadModuleResponse)(nil), "go.micro.srv.static.ReadModuleResponse")
	proto.RegisterType((*DeleteModuleRequest)(nil), "go.micro.srv.static.DeleteModuleRequest")
	proto.RegisterType((*DeleteModuleResponse)(nil), "go.micro.srv.static.DeleteModuleResponse")
	proto.RegisterType((*AllBehaviourCategoriesRequest)(nil), "go.micro.srv.static.AllBehaviourCategoriesRequest")
	proto.RegisterType((*AllBehaviourCategoriesResponse)(nil), "go.micro.srv.static.AllBehaviourCategoriesResponse")
	proto.RegisterType((*CreateBehaviourCategoryRequest)(nil), "go.micro.srv.static.CreateBehaviourCategoryRequest")
	proto.RegisterType((*CreateBehaviourCategoryResponse)(nil), "go.micro.srv.static.CreateBehaviourCategoryResponse")
	proto.RegisterType((*UpdateBehaviourCategoryRequest)(nil), "go.micro.srv.static.UpdateBehaviourCategoryRequest")
	proto.RegisterType((*UpdateBehaviourCategoryResponse)(nil), "go.micro.srv.static.UpdateBehaviourCategoryResponse")
	proto.RegisterType((*ReadBehaviourCategoryRequest)(nil), "go.micro.srv.static.ReadBehaviourCategoryRequest")
	proto.RegisterType((*ReadBehaviourCategoryResponse)(nil), "go.micro.srv.static.ReadBehaviourCategoryResponse")
	proto.RegisterType((*DeleteBehaviourCategoryRequest)(nil), "go.micro.srv.static.DeleteBehaviourCategoryRequest")
	proto.RegisterType((*DeleteBehaviourCategoryResponse)(nil), "go.micro.srv.static.DeleteBehaviourCategoryResponse")
	proto.RegisterType((*FilterBehaviourCategoryRequest)(nil), "go.micro.srv.static.FilterBehaviourCategoryRequest")
	proto.RegisterType((*FilterBehaviourCategoryResponse)(nil), "go.micro.srv.static.FilterBehaviourCategoryResponse")
	proto.RegisterType((*AllSocialTypesRequest)(nil), "go.micro.srv.static.AllSocialTypesRequest")
	proto.RegisterType((*AllSocialTypesResponse)(nil), "go.micro.srv.static.AllSocialTypesResponse")
	proto.RegisterType((*CreateSocialTypeRequest)(nil), "go.micro.srv.static.CreateSocialTypeRequest")
	proto.RegisterType((*CreateSocialTypeResponse)(nil), "go.micro.srv.static.CreateSocialTypeResponse")
	proto.RegisterType((*UpdateSocialTypeRequest)(nil), "go.micro.srv.static.UpdateSocialTypeRequest")
	proto.RegisterType((*UpdateSocialTypeResponse)(nil), "go.micro.srv.static.UpdateSocialTypeResponse")
	proto.RegisterType((*ReadSocialTypeRequest)(nil), "go.micro.srv.static.ReadSocialTypeRequest")
	proto.RegisterType((*ReadSocialTypeResponse)(nil), "go.micro.srv.static.ReadSocialTypeResponse")
	proto.RegisterType((*DeleteSocialTypeRequest)(nil), "go.micro.srv.static.DeleteSocialTypeRequest")
	proto.RegisterType((*DeleteSocialTypeResponse)(nil), "go.micro.srv.static.DeleteSocialTypeResponse")
	proto.RegisterType((*AllNotificationsRequest)(nil), "go.micro.srv.static.AllNotificationsRequest")
	proto.RegisterType((*AllNotificationsResponse)(nil), "go.micro.srv.static.AllNotificationsResponse")
	proto.RegisterType((*CreateNotificationRequest)(nil), "go.micro.srv.static.CreateNotificationRequest")
	proto.RegisterType((*CreateNotificationResponse)(nil), "go.micro.srv.static.CreateNotificationResponse")
	proto.RegisterType((*UpdateNotificationRequest)(nil), "go.micro.srv.static.UpdateNotificationRequest")
	proto.RegisterType((*UpdateNotificationResponse)(nil), "go.micro.srv.static.UpdateNotificationResponse")
	proto.RegisterType((*ReadNotificationRequest)(nil), "go.micro.srv.static.ReadNotificationRequest")
	proto.RegisterType((*ReadNotificationResponse)(nil), "go.micro.srv.static.ReadNotificationResponse")
	proto.RegisterType((*DeleteNotificationRequest)(nil), "go.micro.srv.static.DeleteNotificationRequest")
	proto.RegisterType((*DeleteNotificationResponse)(nil), "go.micro.srv.static.DeleteNotificationResponse")
	proto.RegisterType((*AllTrackerMethodsRequest)(nil), "go.micro.srv.static.AllTrackerMethodsRequest")
	proto.RegisterType((*AllTrackerMethodsResponse)(nil), "go.micro.srv.static.AllTrackerMethodsResponse")
	proto.RegisterType((*CreateTrackerMethodRequest)(nil), "go.micro.srv.static.CreateTrackerMethodRequest")
	proto.RegisterType((*CreateTrackerMethodResponse)(nil), "go.micro.srv.static.CreateTrackerMethodResponse")
	proto.RegisterType((*UpdateTrackerMethodRequest)(nil), "go.micro.srv.static.UpdateTrackerMethodRequest")
	proto.RegisterType((*UpdateTrackerMethodResponse)(nil), "go.micro.srv.static.UpdateTrackerMethodResponse")
	proto.RegisterType((*ReadTrackerMethodRequest)(nil), "go.micro.srv.static.ReadTrackerMethodRequest")
	proto.RegisterType((*ReadTrackerMethodResponse)(nil), "go.micro.srv.static.ReadTrackerMethodResponse")
	proto.RegisterType((*DeleteTrackerMethodRequest)(nil), "go.micro.srv.static.DeleteTrackerMethodRequest")
	proto.RegisterType((*DeleteTrackerMethodResponse)(nil), "go.micro.srv.static.DeleteTrackerMethodResponse")
	proto.RegisterType((*FilterTrackerMethodRequest)(nil), "go.micro.srv.static.FilterTrackerMethodRequest")
	proto.RegisterType((*FilterTrackerMethodResponse)(nil), "go.micro.srv.static.FilterTrackerMethodResponse")
	proto.RegisterType((*AllBehaviourCategoryAimsRequest)(nil), "go.micro.srv.static.AllBehaviourCategoryAimsRequest")
	proto.RegisterType((*AllBehaviourCategoryAimsResponse)(nil), "go.micro.srv.static.AllBehaviourCategoryAimsResponse")
	proto.RegisterType((*CreateBehaviourCategoryAimRequest)(nil), "go.micro.srv.static.CreateBehaviourCategoryAimRequest")
	proto.RegisterType((*CreateBehaviourCategoryAimResponse)(nil), "go.micro.srv.static.CreateBehaviourCategoryAimResponse")
	proto.RegisterType((*UpdateBehaviourCategoryAimRequest)(nil), "go.micro.srv.static.UpdateBehaviourCategoryAimRequest")
	proto.RegisterType((*UpdateBehaviourCategoryAimResponse)(nil), "go.micro.srv.static.UpdateBehaviourCategoryAimResponse")
	proto.RegisterType((*ReadBehaviourCategoryAimRequest)(nil), "go.micro.srv.static.ReadBehaviourCategoryAimRequest")
	proto.RegisterType((*ReadBehaviourCategoryAimResponse)(nil), "go.micro.srv.static.ReadBehaviourCategoryAimResponse")
	proto.RegisterType((*DeleteBehaviourCategoryAimRequest)(nil), "go.micro.srv.static.DeleteBehaviourCategoryAimRequest")
	proto.RegisterType((*DeleteBehaviourCategoryAimResponse)(nil), "go.micro.srv.static.DeleteBehaviourCategoryAimResponse")
	proto.RegisterType((*AllContentParentCategoriesRequest)(nil), "go.micro.srv.static.AllContentParentCategoriesRequest")
	proto.RegisterType((*AllContentParentCategoriesResponse)(nil), "go.micro.srv.static.AllContentParentCategoriesResponse")
	proto.RegisterType((*CreateContentParentCategoryRequest)(nil), "go.micro.srv.static.CreateContentParentCategoryRequest")
	proto.RegisterType((*CreateContentParentCategoryResponse)(nil), "go.micro.srv.static.CreateContentParentCategoryResponse")
	proto.RegisterType((*UpdateContentParentCategoryRequest)(nil), "go.micro.srv.static.UpdateContentParentCategoryRequest")
	proto.RegisterType((*UpdateContentParentCategoryResponse)(nil), "go.micro.srv.static.UpdateContentParentCategoryResponse")
	proto.RegisterType((*ReadContentParentCategoryRequest)(nil), "go.micro.srv.static.ReadContentParentCategoryRequest")
	proto.RegisterType((*ReadContentParentCategoryResponse)(nil), "go.micro.srv.static.ReadContentParentCategoryResponse")
	proto.RegisterType((*DeleteContentParentCategoryRequest)(nil), "go.micro.srv.static.DeleteContentParentCategoryRequest")
	proto.RegisterType((*DeleteContentParentCategoryResponse)(nil), "go.micro.srv.static.DeleteContentParentCategoryResponse")
	proto.RegisterType((*AllContentCategoriesRequest)(nil), "go.micro.srv.static.AllContentCategoriesRequest")
	proto.RegisterType((*AllContentCategoriesResponse)(nil), "go.micro.srv.static.AllContentCategoriesResponse")
	proto.RegisterType((*CreateContentCategoryRequest)(nil), "go.micro.srv.static.CreateContentCategoryRequest")
	proto.RegisterType((*CreateContentCategoryResponse)(nil), "go.micro.srv.static.CreateContentCategoryResponse")
	proto.RegisterType((*UpdateContentCategoryRequest)(nil), "go.micro.srv.static.UpdateContentCategoryRequest")
	proto.RegisterType((*UpdateContentCategoryResponse)(nil), "go.micro.srv.static.UpdateContentCategoryResponse")
	proto.RegisterType((*ReadContentCategoryRequest)(nil), "go.micro.srv.static.ReadContentCategoryRequest")
	proto.RegisterType((*ReadContentCategoryResponse)(nil), "go.micro.srv.static.ReadContentCategoryResponse")
	proto.RegisterType((*DeleteContentCategoryRequest)(nil), "go.micro.srv.static.DeleteContentCategoryRequest")
	proto.RegisterType((*DeleteContentCategoryResponse)(nil), "go.micro.srv.static.DeleteContentCategoryResponse")
	proto.RegisterType((*AllContentTypesRequest)(nil), "go.micro.srv.static.AllContentTypesRequest")
	proto.RegisterType((*AllContentTypesResponse)(nil), "go.micro.srv.static.AllContentTypesResponse")
	proto.RegisterType((*CreateContentTypeRequest)(nil), "go.micro.srv.static.CreateContentTypeRequest")
	proto.RegisterType((*CreateContentTypeResponse)(nil), "go.micro.srv.static.CreateContentTypeResponse")
	proto.RegisterType((*UpdateContentTypeRequest)(nil), "go.micro.srv.static.UpdateContentTypeRequest")
	proto.RegisterType((*UpdateContentTypeResponse)(nil), "go.micro.srv.static.UpdateContentTypeResponse")
	proto.RegisterType((*ReadContentTypeRequest)(nil), "go.micro.srv.static.ReadContentTypeRequest")
	proto.RegisterType((*ReadContentTypeResponse)(nil), "go.micro.srv.static.ReadContentTypeResponse")
	proto.RegisterType((*DeleteContentTypeRequest)(nil), "go.micro.srv.static.DeleteContentTypeRequest")
	proto.RegisterType((*DeleteContentTypeResponse)(nil), "go.micro.srv.static.DeleteContentTypeResponse")
	proto.RegisterType((*AllContentSourceTypesRequest)(nil), "go.micro.srv.static.AllContentSourceTypesRequest")
	proto.RegisterType((*AllContentSourceTypesResponse)(nil), "go.micro.srv.static.AllContentSourceTypesResponse")
	proto.RegisterType((*CreateContentSourceTypeRequest)(nil), "go.micro.srv.static.CreateContentSourceTypeRequest")
	proto.RegisterType((*CreateContentSourceTypeResponse)(nil), "go.micro.srv.static.CreateContentSourceTypeResponse")
	proto.RegisterType((*UpdateContentSourceTypeRequest)(nil), "go.micro.srv.static.UpdateContentSourceTypeRequest")
	proto.RegisterType((*UpdateContentSourceTypeResponse)(nil), "go.micro.srv.static.UpdateContentSourceTypeResponse")
	proto.RegisterType((*ReadContentSourceTypeRequest)(nil), "go.micro.srv.static.ReadContentSourceTypeRequest")
	proto.RegisterType((*ReadContentSourceTypeResponse)(nil), "go.micro.srv.static.ReadContentSourceTypeResponse")
	proto.RegisterType((*DeleteContentSourceTypeRequest)(nil), "go.micro.srv.static.DeleteContentSourceTypeRequest")
	proto.RegisterType((*DeleteContentSourceTypeResponse)(nil), "go.micro.srv.static.DeleteContentSourceTypeResponse")
	proto.RegisterType((*AllModuleTriggersRequest)(nil), "go.micro.srv.static.AllModuleTriggersRequest")
	proto.RegisterType((*AllModuleTriggersResponse)(nil), "go.micro.srv.static.AllModuleTriggersResponse")
	proto.RegisterType((*CreateModuleTriggerRequest)(nil), "go.micro.srv.static.CreateModuleTriggerRequest")
	proto.RegisterType((*CreateModuleTriggerResponse)(nil), "go.micro.srv.static.CreateModuleTriggerResponse")
	proto.RegisterType((*UpdateModuleTriggerRequest)(nil), "go.micro.srv.static.UpdateModuleTriggerRequest")
	proto.RegisterType((*UpdateModuleTriggerResponse)(nil), "go.micro.srv.static.UpdateModuleTriggerResponse")
	proto.RegisterType((*ReadModuleTriggerRequest)(nil), "go.micro.srv.static.ReadModuleTriggerRequest")
	proto.RegisterType((*ReadModuleTriggerResponse)(nil), "go.micro.srv.static.ReadModuleTriggerResponse")
	proto.RegisterType((*DeleteModuleTriggerRequest)(nil), "go.micro.srv.static.DeleteModuleTriggerRequest")
	proto.RegisterType((*DeleteModuleTriggerResponse)(nil), "go.micro.srv.static.DeleteModuleTriggerResponse")
	proto.RegisterType((*FilterModuleTriggerRequest)(nil), "go.micro.srv.static.FilterModuleTriggerRequest")
	proto.RegisterType((*FilterModuleTriggerResponse)(nil), "go.micro.srv.static.FilterModuleTriggerResponse")
	proto.RegisterType((*AllTriggerContentTypesRequest)(nil), "go.micro.srv.static.AllTriggerContentTypesRequest")
	proto.RegisterType((*AllTriggerContentTypesResponse)(nil), "go.micro.srv.static.AllTriggerContentTypesResponse")
	proto.RegisterType((*CreateTriggerContentTypeRequest)(nil), "go.micro.srv.static.CreateTriggerContentTypeRequest")
	proto.RegisterType((*CreateTriggerContentTypeResponse)(nil), "go.micro.srv.static.CreateTriggerContentTypeResponse")
	proto.RegisterType((*UpdateTriggerContentTypeRequest)(nil), "go.micro.srv.static.UpdateTriggerContentTypeRequest")
	proto.RegisterType((*UpdateTriggerContentTypeResponse)(nil), "go.micro.srv.static.UpdateTriggerContentTypeResponse")
	proto.RegisterType((*ReadTriggerContentTypeRequest)(nil), "go.micro.srv.static.ReadTriggerContentTypeRequest")
	proto.RegisterType((*ReadTriggerContentTypeResponse)(nil), "go.micro.srv.static.ReadTriggerContentTypeResponse")
	proto.RegisterType((*DeleteTriggerContentTypeRequest)(nil), "go.micro.srv.static.DeleteTriggerContentTypeRequest")
	proto.RegisterType((*DeleteTriggerContentTypeResponse)(nil), "go.micro.srv.static.DeleteTriggerContentTypeResponse")
	proto.RegisterType((*FilterTriggerContentTypeRequest)(nil), "go.micro.srv.static.FilterTriggerContentTypeRequest")
	proto.RegisterType((*FilterTriggerContentTypeResponse)(nil), "go.micro.srv.static.FilterTriggerContentTypeResponse")
	proto.RegisterType((*CreateRoleRequest)(nil), "go.micro.srv.static.CreateRoleRequest")
	proto.RegisterType((*CreateRoleResponse)(nil), "go.micro.srv.static.CreateRoleResponse")
	proto.RegisterType((*UpdateRoleRequest)(nil), "go.micro.srv.static.UpdateRoleRequest")
	proto.RegisterType((*UpdateRoleResponse)(nil), "go.micro.srv.static.UpdateRoleResponse")
	proto.RegisterType((*ReadRoleByNameslugRequest)(nil), "go.micro.srv.static.ReadRoleByNameslugRequest")
	proto.RegisterType((*ReadRoleByNameslugResponse)(nil), "go.micro.srv.static.ReadRoleByNameslugResponse")
	proto.RegisterType((*UploadRequest)(nil), "go.micro.srv.static.UploadRequest")
	proto.RegisterType((*UploadResponse)(nil), "go.micro.srv.static.UploadResponse")
	proto.RegisterType((*SetbackData)(nil), "go.micro.srv.static.SetbackData")
	proto.RegisterType((*SetbackArrData)(nil), "go.micro.srv.static.SetbackArrData")
	proto.RegisterType((*AllSetbacksRequest)(nil), "go.micro.srv.static.AllSetbacksRequest")
	proto.RegisterType((*AllSetbacksResponse)(nil), "go.micro.srv.static.AllSetbacksResponse")
	proto.RegisterType((*CreateSetbackRequest)(nil), "go.micro.srv.static.CreateSetbackRequest")
	proto.RegisterType((*CreateSetbackResponse)(nil), "go.micro.srv.static.CreateSetbackResponse")
	proto.RegisterType((*UpdateSetbackRequest)(nil), "go.micro.srv.static.UpdateSetbackRequest")
	proto.RegisterType((*UpdateSetbackResponse)(nil), "go.micro.srv.static.UpdateSetbackResponse")
	proto.RegisterType((*ReadSetbackRequest)(nil), "go.micro.srv.static.ReadSetbackRequest")
	proto.RegisterType((*ReadSetbackResponse)(nil), "go.micro.srv.static.ReadSetbackResponse")
	proto.RegisterType((*DeleteSetbackRequest)(nil), "go.micro.srv.static.DeleteSetbackRequest")
	proto.RegisterType((*DeleteSetbackResponse)(nil), "go.micro.srv.static.DeleteSetbackResponse")
	proto.RegisterType((*AutocompleteSetbackSearchRequest)(nil), "go.micro.srv.static.AutocompleteSetbackSearchRequest")
	proto.RegisterType((*ReadByNameslugRequest)(nil), "go.micro.srv.static.ReadByNameslugRequest")
	proto.RegisterType((*App)(nil), "go.micro.srv.static.App")
	proto.RegisterType((*Platform)(nil), "go.micro.srv.static.Platform")
	proto.RegisterType((*Wearable)(nil), "go.micro.srv.static.Wearable")
	proto.RegisterType((*Device)(nil), "go.micro.srv.static.Device")
	proto.RegisterType((*Marker)(nil), "go.micro.srv.static.Marker")
	proto.RegisterType((*Module)(nil), "go.micro.srv.static.Module")
	proto.RegisterType((*Social)(nil), "go.micro.srv.static.Social")
	proto.RegisterType((*SocialType)(nil), "go.micro.srv.static.SocialType")
	proto.RegisterType((*Notification)(nil), "go.micro.srv.static.Notification")
	proto.RegisterType((*TrackerMethod)(nil), "go.micro.srv.static.TrackerMethod")
	proto.RegisterType((*BehaviourCategoryAim)(nil), "go.micro.srv.static.BehaviourCategoryAim")
	proto.RegisterType((*BehaviourCategory)(nil), "go.micro.srv.static.BehaviourCategory")
	proto.RegisterType((*ContentParentCategory)(nil), "go.micro.srv.static.ContentParentCategory")
	proto.RegisterType((*ContentCategory)(nil), "go.micro.srv.static.ContentCategory")
	proto.RegisterType((*Action)(nil), "go.micro.srv.static.Action")
	proto.RegisterType((*ContentSourceType)(nil), "go.micro.srv.static.ContentSourceType")
	proto.RegisterType((*ContentType)(nil), "go.micro.srv.static.ContentType")
	proto.RegisterType((*ModuleTrigger)(nil), "go.micro.srv.static.ModuleTrigger")
	proto.RegisterType((*Schedule)(nil), "go.micro.srv.static.Schedule")
	proto.RegisterType((*TriggerContentType)(nil), "go.micro.srv.static.TriggerContentType")
	proto.RegisterType((*TriggerEvent)(nil), "go.micro.srv.static.TriggerEvent")
	proto.RegisterType((*Address)(nil), "go.micro.srv.static.Address")
	proto.RegisterType((*Role)(nil), "go.micro.srv.static.Role")
	proto.RegisterType((*AutocompleteResponse)(nil), "go.micro.srv.static.AutocompleteResponse")
	proto.RegisterType((*Target)(nil), "go.micro.srv.static.Target")
	proto.RegisterType((*Recurrence)(nil), "go.micro.srv.static.Recurrence")
	proto.RegisterType((*Taxonomy)(nil), "go.micro.srv.static.Taxonomy")
	proto.RegisterType((*ContentCategoryItem)(nil), "go.micro.srv.static.ContentCategoryItem")
	proto.RegisterType((*Setback)(nil), "go.micro.srv.static.Setback")
	proto.RegisterType((*Setting)(nil), "go.micro.srv.static.Setting")
	proto.RegisterType((*Batch)(nil), "go.micro.srv.static.Batch")
	proto.RegisterType((*SharedUserId)(nil), "go.micro.srv.static.SharedUserId")
	proto.RegisterEnum("go.micro.srv.static.NotificationTarget", NotificationTarget_name, NotificationTarget_value)
	proto.RegisterEnum("go.micro.srv.static.TriggerType", TriggerType_name, TriggerType_value)
	proto.RegisterEnum("go.micro.srv.static.Permission", Permission_name, Permission_value)
	proto.RegisterEnum("go.micro.srv.static.ShareStatus", ShareStatus_name, ShareStatus_value)
	proto.RegisterEnum("go.micro.srv.static.Visibility", Visibility_name, Visibility_value)
	proto.RegisterEnum("go.micro.srv.static.ActionMethod", ActionMethod_name, ActionMethod_value)
	proto.RegisterEnum("go.micro.srv.static.Gender", Gender_name, Gender_value)
	proto.RegisterEnum("go.micro.srv.static.ExpectedProgressType", ExpectedProgressType_name, ExpectedProgressType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for StaticService service

type StaticServiceClient interface {
	AllApps(ctx context.Context, in *AllAppsRequest, opts ...client.CallOption) (*AllAppsResponse, error)
	CreateApp(ctx context.Context, in *CreateAppRequest, opts ...client.CallOption) (*CreateAppResponse, error)
	UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...client.CallOption) (*UpdateAppResponse, error)
	ReadApp(ctx context.Context, in *ReadAppRequest, opts ...client.CallOption) (*ReadAppResponse, error)
	DeleteApp(ctx context.Context, in *DeleteAppRequest, opts ...client.CallOption) (*DeleteAppResponse, error)
	AllPlatforms(ctx context.Context, in *AllPlatformsRequest, opts ...client.CallOption) (*AllPlatformsResponse, error)
	CreatePlatform(ctx context.Context, in *CreatePlatformRequest, opts ...client.CallOption) (*CreatePlatformResponse, error)
	UpdatePlatform(ctx context.Context, in *UpdatePlatformRequest, opts ...client.CallOption) (*UpdatePlatformResponse, error)
	ReadPlatform(ctx context.Context, in *ReadPlatformRequest, opts ...client.CallOption) (*ReadPlatformResponse, error)
	DeletePlatform(ctx context.Context, in *DeletePlatformRequest, opts ...client.CallOption) (*DeletePlatformResponse, error)
	AllDevices(ctx context.Context, in *AllDevicesRequest, opts ...client.CallOption) (*AllDevicesResponse, error)
	CreateDevice(ctx context.Context, in *CreateDeviceRequest, opts ...client.CallOption) (*CreateDeviceResponse, error)
	UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...client.CallOption) (*UpdateDeviceResponse, error)
	ReadDevice(ctx context.Context, in *ReadDeviceRequest, opts ...client.CallOption) (*ReadDeviceResponse, error)
	DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, opts ...client.CallOption) (*DeleteDeviceResponse, error)
	AllWearables(ctx context.Context, in *AllWearablesRequest, opts ...client.CallOption) (*AllWearablesResponse, error)
	CreateWearable(ctx context.Context, in *CreateWearableRequest, opts ...client.CallOption) (*CreateWearableResponse, error)
	UpdateWearable(ctx context.Context, in *UpdateWearableRequest, opts ...client.CallOption) (*UpdateWearableResponse, error)
	ReadWearable(ctx context.Context, in *ReadWearableRequest, opts ...client.CallOption) (*ReadWearableResponse, error)
	DeleteWearable(ctx context.Context, in *DeleteWearableRequest, opts ...client.CallOption) (*DeleteWearableResponse, error)
	AllMarkers(ctx context.Context, in *AllMarkersRequest, opts ...client.CallOption) (*AllMarkersResponse, error)
	CreateMarker(ctx context.Context, in *CreateMarkerRequest, opts ...client.CallOption) (*CreateMarkerResponse, error)
	UpdateMarker(ctx context.Context, in *UpdateMarkerRequest, opts ...client.CallOption) (*UpdateMarkerResponse, error)
	ReadMarker(ctx context.Context, in *ReadMarkerRequest, opts ...client.CallOption) (*ReadMarkerResponse, error)
	DeleteMarker(ctx context.Context, in *DeleteMarkerRequest, opts ...client.CallOption) (*DeleteMarkerResponse, error)
	FilterMarker(ctx context.Context, in *FilterMarkerRequest, opts ...client.CallOption) (*FilterMarkerResponse, error)
	AllModules(ctx context.Context, in *AllModulesRequest, opts ...client.CallOption) (*AllModulesResponse, error)
	CreateModule(ctx context.Context, in *CreateModuleRequest, opts ...client.CallOption) (*CreateModuleResponse, error)
	UpdateModule(ctx context.Context, in *UpdateModuleRequest, opts ...client.CallOption) (*UpdateModuleResponse, error)
	ReadModule(ctx context.Context, in *ReadModuleRequest, opts ...client.CallOption) (*ReadModuleResponse, error)
	DeleteModule(ctx context.Context, in *DeleteModuleRequest, opts ...client.CallOption) (*DeleteModuleResponse, error)
	AllBehaviourCategories(ctx context.Context, in *AllBehaviourCategoriesRequest, opts ...client.CallOption) (*AllBehaviourCategoriesResponse, error)
	ReadBehaviourCategory(ctx context.Context, in *ReadBehaviourCategoryRequest, opts ...client.CallOption) (*ReadBehaviourCategoryResponse, error)
	CreateBehaviourCategory(ctx context.Context, in *CreateBehaviourCategoryRequest, opts ...client.CallOption) (*CreateBehaviourCategoryResponse, error)
	UpdateBehaviourCategory(ctx context.Context, in *UpdateBehaviourCategoryRequest, opts ...client.CallOption) (*UpdateBehaviourCategoryResponse, error)
	DeleteBehaviourCategory(ctx context.Context, in *DeleteBehaviourCategoryRequest, opts ...client.CallOption) (*DeleteBehaviourCategoryResponse, error)
	FilterBehaviourCategory(ctx context.Context, in *FilterBehaviourCategoryRequest, opts ...client.CallOption) (*FilterBehaviourCategoryResponse, error)
	AllSocialTypes(ctx context.Context, in *AllSocialTypesRequest, opts ...client.CallOption) (*AllSocialTypesResponse, error)
	CreateSocialType(ctx context.Context, in *CreateSocialTypeRequest, opts ...client.CallOption) (*CreateSocialTypeResponse, error)
	UpdateSocialType(ctx context.Context, in *UpdateSocialTypeRequest, opts ...client.CallOption) (*UpdateSocialTypeResponse, error)
	ReadSocialType(ctx context.Context, in *ReadSocialTypeRequest, opts ...client.CallOption) (*ReadSocialTypeResponse, error)
	DeleteSocialType(ctx context.Context, in *DeleteSocialTypeRequest, opts ...client.CallOption) (*DeleteSocialTypeResponse, error)
	AllNotifications(ctx context.Context, in *AllNotificationsRequest, opts ...client.CallOption) (*AllNotificationsResponse, error)
	CreateNotification(ctx context.Context, in *CreateNotificationRequest, opts ...client.CallOption) (*CreateNotificationResponse, error)
	UpdateNotification(ctx context.Context, in *UpdateNotificationRequest, opts ...client.CallOption) (*UpdateNotificationResponse, error)
	ReadNotification(ctx context.Context, in *ReadNotificationRequest, opts ...client.CallOption) (*ReadNotificationResponse, error)
	DeleteNotification(ctx context.Context, in *DeleteNotificationRequest, opts ...client.CallOption) (*DeleteNotificationResponse, error)
	AllTrackerMethods(ctx context.Context, in *AllTrackerMethodsRequest, opts ...client.CallOption) (*AllTrackerMethodsResponse, error)
	CreateTrackerMethod(ctx context.Context, in *CreateTrackerMethodRequest, opts ...client.CallOption) (*CreateTrackerMethodResponse, error)
	UpdateTrackerMethod(ctx context.Context, in *UpdateTrackerMethodRequest, opts ...client.CallOption) (*UpdateTrackerMethodResponse, error)
	ReadTrackerMethod(ctx context.Context, in *ReadTrackerMethodRequest, opts ...client.CallOption) (*ReadTrackerMethodResponse, error)
	DeleteTrackerMethod(ctx context.Context, in *DeleteTrackerMethodRequest, opts ...client.CallOption) (*DeleteTrackerMethodResponse, error)
	FilterTrackerMethod(ctx context.Context, in *FilterTrackerMethodRequest, opts ...client.CallOption) (*FilterTrackerMethodResponse, error)
	AllBehaviourCategoryAims(ctx context.Context, in *AllBehaviourCategoryAimsRequest, opts ...client.CallOption) (*AllBehaviourCategoryAimsResponse, error)
	CreateBehaviourCategoryAim(ctx context.Context, in *CreateBehaviourCategoryAimRequest, opts ...client.CallOption) (*CreateBehaviourCategoryAimResponse, error)
	UpdateBehaviourCategoryAim(ctx context.Context, in *UpdateBehaviourCategoryAimRequest, opts ...client.CallOption) (*UpdateBehaviourCategoryAimResponse, error)
	ReadBehaviourCategoryAim(ctx context.Context, in *ReadBehaviourCategoryAimRequest, opts ...client.CallOption) (*ReadBehaviourCategoryAimResponse, error)
	DeleteBehaviourCategoryAim(ctx context.Context, in *DeleteBehaviourCategoryAimRequest, opts ...client.CallOption) (*DeleteBehaviourCategoryAimResponse, error)
	AllContentParentCategories(ctx context.Context, in *AllContentParentCategoriesRequest, opts ...client.CallOption) (*AllContentParentCategoriesResponse, error)
	CreateContentParentCategory(ctx context.Context, in *CreateContentParentCategoryRequest, opts ...client.CallOption) (*CreateContentParentCategoryResponse, error)
	UpdateContentParentCategory(ctx context.Context, in *UpdateContentParentCategoryRequest, opts ...client.CallOption) (*UpdateContentParentCategoryResponse, error)
	ReadContentParentCategory(ctx context.Context, in *ReadContentParentCategoryRequest, opts ...client.CallOption) (*ReadContentParentCategoryResponse, error)
	DeleteContentParentCategory(ctx context.Context, in *DeleteContentParentCategoryRequest, opts ...client.CallOption) (*DeleteContentParentCategoryResponse, error)
	AllContentCategories(ctx context.Context, in *AllContentCategoriesRequest, opts ...client.CallOption) (*AllContentCategoriesResponse, error)
	CreateContentCategory(ctx context.Context, in *CreateContentCategoryRequest, opts ...client.CallOption) (*CreateContentCategoryResponse, error)
	UpdateContentCategory(ctx context.Context, in *UpdateContentCategoryRequest, opts ...client.CallOption) (*UpdateContentCategoryResponse, error)
	ReadContentCategory(ctx context.Context, in *ReadContentCategoryRequest, opts ...client.CallOption) (*ReadContentCategoryResponse, error)
	DeleteContentCategory(ctx context.Context, in *DeleteContentCategoryRequest, opts ...client.CallOption) (*DeleteContentCategoryResponse, error)
	ReadContentCategoryByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadContentCategoryResponse, error)
	ReadContentCategoryByNameslugOrCreate(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadContentCategoryResponse, error)
	AllContentTypes(ctx context.Context, in *AllContentTypesRequest, opts ...client.CallOption) (*AllContentTypesResponse, error)
	CreateContentType(ctx context.Context, in *CreateContentTypeRequest, opts ...client.CallOption) (*CreateContentTypeResponse, error)
	UpdateContentType(ctx context.Context, in *UpdateContentTypeRequest, opts ...client.CallOption) (*UpdateContentTypeResponse, error)
	ReadContentType(ctx context.Context, in *ReadContentTypeRequest, opts ...client.CallOption) (*ReadContentTypeResponse, error)
	DeleteContentType(ctx context.Context, in *DeleteContentTypeRequest, opts ...client.CallOption) (*DeleteContentTypeResponse, error)
	AllContentSourceTypes(ctx context.Context, in *AllContentSourceTypesRequest, opts ...client.CallOption) (*AllContentSourceTypesResponse, error)
	CreateContentSourceType(ctx context.Context, in *CreateContentSourceTypeRequest, opts ...client.CallOption) (*CreateContentSourceTypeResponse, error)
	UpdateContentSourceType(ctx context.Context, in *UpdateContentSourceTypeRequest, opts ...client.CallOption) (*UpdateContentSourceTypeResponse, error)
	ReadContentSourceType(ctx context.Context, in *ReadContentSourceTypeRequest, opts ...client.CallOption) (*ReadContentSourceTypeResponse, error)
	DeleteContentSourceType(ctx context.Context, in *DeleteContentSourceTypeRequest, opts ...client.CallOption) (*DeleteContentSourceTypeResponse, error)
	AllModuleTriggers(ctx context.Context, in *AllModuleTriggersRequest, opts ...client.CallOption) (*AllModuleTriggersResponse, error)
	CreateModuleTrigger(ctx context.Context, in *CreateModuleTriggerRequest, opts ...client.CallOption) (*CreateModuleTriggerResponse, error)
	UpdateModuleTrigger(ctx context.Context, in *UpdateModuleTriggerRequest, opts ...client.CallOption) (*UpdateModuleTriggerResponse, error)
	ReadModuleTrigger(ctx context.Context, in *ReadModuleTriggerRequest, opts ...client.CallOption) (*ReadModuleTriggerResponse, error)
	DeleteModuleTrigger(ctx context.Context, in *DeleteModuleTriggerRequest, opts ...client.CallOption) (*DeleteModuleTriggerResponse, error)
	FilterModuleTrigger(ctx context.Context, in *FilterModuleTriggerRequest, opts ...client.CallOption) (*FilterModuleTriggerResponse, error)
	AllTriggerContentTypes(ctx context.Context, in *AllTriggerContentTypesRequest, opts ...client.CallOption) (*AllTriggerContentTypesResponse, error)
	CreateTriggerContentType(ctx context.Context, in *CreateTriggerContentTypeRequest, opts ...client.CallOption) (*CreateTriggerContentTypeResponse, error)
	UpdateTriggerContentType(ctx context.Context, in *UpdateTriggerContentTypeRequest, opts ...client.CallOption) (*UpdateTriggerContentTypeResponse, error)
	ReadTriggerContentType(ctx context.Context, in *ReadTriggerContentTypeRequest, opts ...client.CallOption) (*ReadTriggerContentTypeResponse, error)
	DeleteTriggerContentType(ctx context.Context, in *DeleteTriggerContentTypeRequest, opts ...client.CallOption) (*DeleteTriggerContentTypeResponse, error)
	FilterTriggerContentType(ctx context.Context, in *FilterTriggerContentTypeRequest, opts ...client.CallOption) (*FilterTriggerContentTypeResponse, error)
	CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...client.CallOption) (*CreateRoleResponse, error)
	UpdateRole(ctx context.Context, in *UpdateRoleRequest, opts ...client.CallOption) (*UpdateRoleResponse, error)
	ReadRoleByNameslug(ctx context.Context, in *ReadRoleByNameslugRequest, opts ...client.CallOption) (*ReadRoleByNameslugResponse, error)
	AllSetbacks(ctx context.Context, in *AllSetbacksRequest, opts ...client.CallOption) (*AllSetbacksResponse, error)
	CreateSetback(ctx context.Context, in *CreateSetbackRequest, opts ...client.CallOption) (*CreateSetbackResponse, error)
	UpdateSetback(ctx context.Context, in *UpdateSetbackRequest, opts ...client.CallOption) (*UpdateSetbackResponse, error)
	ReadSetback(ctx context.Context, in *ReadSetbackRequest, opts ...client.CallOption) (*ReadSetbackResponse, error)
	DeleteSetback(ctx context.Context, in *DeleteSetbackRequest, opts ...client.CallOption) (*DeleteSetbackResponse, error)
	AutocompleteSetbackSearch(ctx context.Context, in *AutocompleteSetbackSearchRequest, opts ...client.CallOption) (*AllSetbacksResponse, error)
	ReadMarkerByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadMarkerResponse, error)
	ReadBehaviourCategoryAimByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadBehaviourCategoryAimResponse, error)
	ReadTrackerMethodByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadTrackerMethodResponse, error)
	ReadAppByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadAppResponse, error)
	ReadWearableByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadWearableResponse, error)
	ReadDeviceByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadDeviceResponse, error)
	UploadBehaviourCategoryAim(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error)
	UploadContentCategory(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error)
	UploadMarker(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error)
	UploadBehaviourCategory(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error)
	UploadContentCategoryItem(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error)
	UploadTrackerMethod(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error)
}

type staticServiceClient struct {
	c           client.Client
	serviceName string
}

func NewStaticServiceClient(serviceName string, c client.Client) StaticServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.static"
	}
	return &staticServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *staticServiceClient) AllApps(ctx context.Context, in *AllAppsRequest, opts ...client.CallOption) (*AllAppsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllApps", in)
	out := new(AllAppsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateApp(ctx context.Context, in *CreateAppRequest, opts ...client.CallOption) (*CreateAppResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateApp", in)
	out := new(CreateAppResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateApp(ctx context.Context, in *UpdateAppRequest, opts ...client.CallOption) (*UpdateAppResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateApp", in)
	out := new(UpdateAppResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadApp(ctx context.Context, in *ReadAppRequest, opts ...client.CallOption) (*ReadAppResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadApp", in)
	out := new(ReadAppResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteApp(ctx context.Context, in *DeleteAppRequest, opts ...client.CallOption) (*DeleteAppResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteApp", in)
	out := new(DeleteAppResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllPlatforms(ctx context.Context, in *AllPlatformsRequest, opts ...client.CallOption) (*AllPlatformsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllPlatforms", in)
	out := new(AllPlatformsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreatePlatform(ctx context.Context, in *CreatePlatformRequest, opts ...client.CallOption) (*CreatePlatformResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreatePlatform", in)
	out := new(CreatePlatformResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdatePlatform(ctx context.Context, in *UpdatePlatformRequest, opts ...client.CallOption) (*UpdatePlatformResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdatePlatform", in)
	out := new(UpdatePlatformResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadPlatform(ctx context.Context, in *ReadPlatformRequest, opts ...client.CallOption) (*ReadPlatformResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadPlatform", in)
	out := new(ReadPlatformResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeletePlatform(ctx context.Context, in *DeletePlatformRequest, opts ...client.CallOption) (*DeletePlatformResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeletePlatform", in)
	out := new(DeletePlatformResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllDevices(ctx context.Context, in *AllDevicesRequest, opts ...client.CallOption) (*AllDevicesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllDevices", in)
	out := new(AllDevicesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateDevice(ctx context.Context, in *CreateDeviceRequest, opts ...client.CallOption) (*CreateDeviceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateDevice", in)
	out := new(CreateDeviceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, opts ...client.CallOption) (*UpdateDeviceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateDevice", in)
	out := new(UpdateDeviceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadDevice(ctx context.Context, in *ReadDeviceRequest, opts ...client.CallOption) (*ReadDeviceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadDevice", in)
	out := new(ReadDeviceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, opts ...client.CallOption) (*DeleteDeviceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteDevice", in)
	out := new(DeleteDeviceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllWearables(ctx context.Context, in *AllWearablesRequest, opts ...client.CallOption) (*AllWearablesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllWearables", in)
	out := new(AllWearablesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateWearable(ctx context.Context, in *CreateWearableRequest, opts ...client.CallOption) (*CreateWearableResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateWearable", in)
	out := new(CreateWearableResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateWearable(ctx context.Context, in *UpdateWearableRequest, opts ...client.CallOption) (*UpdateWearableResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateWearable", in)
	out := new(UpdateWearableResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadWearable(ctx context.Context, in *ReadWearableRequest, opts ...client.CallOption) (*ReadWearableResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadWearable", in)
	out := new(ReadWearableResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteWearable(ctx context.Context, in *DeleteWearableRequest, opts ...client.CallOption) (*DeleteWearableResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteWearable", in)
	out := new(DeleteWearableResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllMarkers(ctx context.Context, in *AllMarkersRequest, opts ...client.CallOption) (*AllMarkersResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllMarkers", in)
	out := new(AllMarkersResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateMarker(ctx context.Context, in *CreateMarkerRequest, opts ...client.CallOption) (*CreateMarkerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateMarker", in)
	out := new(CreateMarkerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateMarker(ctx context.Context, in *UpdateMarkerRequest, opts ...client.CallOption) (*UpdateMarkerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateMarker", in)
	out := new(UpdateMarkerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadMarker(ctx context.Context, in *ReadMarkerRequest, opts ...client.CallOption) (*ReadMarkerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadMarker", in)
	out := new(ReadMarkerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteMarker(ctx context.Context, in *DeleteMarkerRequest, opts ...client.CallOption) (*DeleteMarkerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteMarker", in)
	out := new(DeleteMarkerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) FilterMarker(ctx context.Context, in *FilterMarkerRequest, opts ...client.CallOption) (*FilterMarkerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.FilterMarker", in)
	out := new(FilterMarkerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllModules(ctx context.Context, in *AllModulesRequest, opts ...client.CallOption) (*AllModulesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllModules", in)
	out := new(AllModulesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateModule(ctx context.Context, in *CreateModuleRequest, opts ...client.CallOption) (*CreateModuleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateModule", in)
	out := new(CreateModuleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateModule(ctx context.Context, in *UpdateModuleRequest, opts ...client.CallOption) (*UpdateModuleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateModule", in)
	out := new(UpdateModuleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadModule(ctx context.Context, in *ReadModuleRequest, opts ...client.CallOption) (*ReadModuleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadModule", in)
	out := new(ReadModuleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteModule(ctx context.Context, in *DeleteModuleRequest, opts ...client.CallOption) (*DeleteModuleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteModule", in)
	out := new(DeleteModuleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllBehaviourCategories(ctx context.Context, in *AllBehaviourCategoriesRequest, opts ...client.CallOption) (*AllBehaviourCategoriesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllBehaviourCategories", in)
	out := new(AllBehaviourCategoriesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadBehaviourCategory(ctx context.Context, in *ReadBehaviourCategoryRequest, opts ...client.CallOption) (*ReadBehaviourCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadBehaviourCategory", in)
	out := new(ReadBehaviourCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateBehaviourCategory(ctx context.Context, in *CreateBehaviourCategoryRequest, opts ...client.CallOption) (*CreateBehaviourCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateBehaviourCategory", in)
	out := new(CreateBehaviourCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateBehaviourCategory(ctx context.Context, in *UpdateBehaviourCategoryRequest, opts ...client.CallOption) (*UpdateBehaviourCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateBehaviourCategory", in)
	out := new(UpdateBehaviourCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteBehaviourCategory(ctx context.Context, in *DeleteBehaviourCategoryRequest, opts ...client.CallOption) (*DeleteBehaviourCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteBehaviourCategory", in)
	out := new(DeleteBehaviourCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) FilterBehaviourCategory(ctx context.Context, in *FilterBehaviourCategoryRequest, opts ...client.CallOption) (*FilterBehaviourCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.FilterBehaviourCategory", in)
	out := new(FilterBehaviourCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllSocialTypes(ctx context.Context, in *AllSocialTypesRequest, opts ...client.CallOption) (*AllSocialTypesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllSocialTypes", in)
	out := new(AllSocialTypesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateSocialType(ctx context.Context, in *CreateSocialTypeRequest, opts ...client.CallOption) (*CreateSocialTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateSocialType", in)
	out := new(CreateSocialTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateSocialType(ctx context.Context, in *UpdateSocialTypeRequest, opts ...client.CallOption) (*UpdateSocialTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateSocialType", in)
	out := new(UpdateSocialTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadSocialType(ctx context.Context, in *ReadSocialTypeRequest, opts ...client.CallOption) (*ReadSocialTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadSocialType", in)
	out := new(ReadSocialTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteSocialType(ctx context.Context, in *DeleteSocialTypeRequest, opts ...client.CallOption) (*DeleteSocialTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteSocialType", in)
	out := new(DeleteSocialTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllNotifications(ctx context.Context, in *AllNotificationsRequest, opts ...client.CallOption) (*AllNotificationsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllNotifications", in)
	out := new(AllNotificationsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateNotification(ctx context.Context, in *CreateNotificationRequest, opts ...client.CallOption) (*CreateNotificationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateNotification", in)
	out := new(CreateNotificationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateNotification(ctx context.Context, in *UpdateNotificationRequest, opts ...client.CallOption) (*UpdateNotificationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateNotification", in)
	out := new(UpdateNotificationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadNotification(ctx context.Context, in *ReadNotificationRequest, opts ...client.CallOption) (*ReadNotificationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadNotification", in)
	out := new(ReadNotificationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteNotification(ctx context.Context, in *DeleteNotificationRequest, opts ...client.CallOption) (*DeleteNotificationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteNotification", in)
	out := new(DeleteNotificationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllTrackerMethods(ctx context.Context, in *AllTrackerMethodsRequest, opts ...client.CallOption) (*AllTrackerMethodsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllTrackerMethods", in)
	out := new(AllTrackerMethodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateTrackerMethod(ctx context.Context, in *CreateTrackerMethodRequest, opts ...client.CallOption) (*CreateTrackerMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateTrackerMethod", in)
	out := new(CreateTrackerMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateTrackerMethod(ctx context.Context, in *UpdateTrackerMethodRequest, opts ...client.CallOption) (*UpdateTrackerMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateTrackerMethod", in)
	out := new(UpdateTrackerMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadTrackerMethod(ctx context.Context, in *ReadTrackerMethodRequest, opts ...client.CallOption) (*ReadTrackerMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadTrackerMethod", in)
	out := new(ReadTrackerMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteTrackerMethod(ctx context.Context, in *DeleteTrackerMethodRequest, opts ...client.CallOption) (*DeleteTrackerMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteTrackerMethod", in)
	out := new(DeleteTrackerMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) FilterTrackerMethod(ctx context.Context, in *FilterTrackerMethodRequest, opts ...client.CallOption) (*FilterTrackerMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.FilterTrackerMethod", in)
	out := new(FilterTrackerMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllBehaviourCategoryAims(ctx context.Context, in *AllBehaviourCategoryAimsRequest, opts ...client.CallOption) (*AllBehaviourCategoryAimsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllBehaviourCategoryAims", in)
	out := new(AllBehaviourCategoryAimsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateBehaviourCategoryAim(ctx context.Context, in *CreateBehaviourCategoryAimRequest, opts ...client.CallOption) (*CreateBehaviourCategoryAimResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateBehaviourCategoryAim", in)
	out := new(CreateBehaviourCategoryAimResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateBehaviourCategoryAim(ctx context.Context, in *UpdateBehaviourCategoryAimRequest, opts ...client.CallOption) (*UpdateBehaviourCategoryAimResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateBehaviourCategoryAim", in)
	out := new(UpdateBehaviourCategoryAimResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadBehaviourCategoryAim(ctx context.Context, in *ReadBehaviourCategoryAimRequest, opts ...client.CallOption) (*ReadBehaviourCategoryAimResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadBehaviourCategoryAim", in)
	out := new(ReadBehaviourCategoryAimResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteBehaviourCategoryAim(ctx context.Context, in *DeleteBehaviourCategoryAimRequest, opts ...client.CallOption) (*DeleteBehaviourCategoryAimResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteBehaviourCategoryAim", in)
	out := new(DeleteBehaviourCategoryAimResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllContentParentCategories(ctx context.Context, in *AllContentParentCategoriesRequest, opts ...client.CallOption) (*AllContentParentCategoriesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllContentParentCategories", in)
	out := new(AllContentParentCategoriesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateContentParentCategory(ctx context.Context, in *CreateContentParentCategoryRequest, opts ...client.CallOption) (*CreateContentParentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateContentParentCategory", in)
	out := new(CreateContentParentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateContentParentCategory(ctx context.Context, in *UpdateContentParentCategoryRequest, opts ...client.CallOption) (*UpdateContentParentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateContentParentCategory", in)
	out := new(UpdateContentParentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadContentParentCategory(ctx context.Context, in *ReadContentParentCategoryRequest, opts ...client.CallOption) (*ReadContentParentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadContentParentCategory", in)
	out := new(ReadContentParentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteContentParentCategory(ctx context.Context, in *DeleteContentParentCategoryRequest, opts ...client.CallOption) (*DeleteContentParentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteContentParentCategory", in)
	out := new(DeleteContentParentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllContentCategories(ctx context.Context, in *AllContentCategoriesRequest, opts ...client.CallOption) (*AllContentCategoriesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllContentCategories", in)
	out := new(AllContentCategoriesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateContentCategory(ctx context.Context, in *CreateContentCategoryRequest, opts ...client.CallOption) (*CreateContentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateContentCategory", in)
	out := new(CreateContentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateContentCategory(ctx context.Context, in *UpdateContentCategoryRequest, opts ...client.CallOption) (*UpdateContentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateContentCategory", in)
	out := new(UpdateContentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadContentCategory(ctx context.Context, in *ReadContentCategoryRequest, opts ...client.CallOption) (*ReadContentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadContentCategory", in)
	out := new(ReadContentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteContentCategory(ctx context.Context, in *DeleteContentCategoryRequest, opts ...client.CallOption) (*DeleteContentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteContentCategory", in)
	out := new(DeleteContentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadContentCategoryByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadContentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadContentCategoryByNameslug", in)
	out := new(ReadContentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadContentCategoryByNameslugOrCreate(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadContentCategoryResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadContentCategoryByNameslugOrCreate", in)
	out := new(ReadContentCategoryResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllContentTypes(ctx context.Context, in *AllContentTypesRequest, opts ...client.CallOption) (*AllContentTypesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllContentTypes", in)
	out := new(AllContentTypesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateContentType(ctx context.Context, in *CreateContentTypeRequest, opts ...client.CallOption) (*CreateContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateContentType", in)
	out := new(CreateContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateContentType(ctx context.Context, in *UpdateContentTypeRequest, opts ...client.CallOption) (*UpdateContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateContentType", in)
	out := new(UpdateContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadContentType(ctx context.Context, in *ReadContentTypeRequest, opts ...client.CallOption) (*ReadContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadContentType", in)
	out := new(ReadContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteContentType(ctx context.Context, in *DeleteContentTypeRequest, opts ...client.CallOption) (*DeleteContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteContentType", in)
	out := new(DeleteContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllContentSourceTypes(ctx context.Context, in *AllContentSourceTypesRequest, opts ...client.CallOption) (*AllContentSourceTypesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllContentSourceTypes", in)
	out := new(AllContentSourceTypesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateContentSourceType(ctx context.Context, in *CreateContentSourceTypeRequest, opts ...client.CallOption) (*CreateContentSourceTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateContentSourceType", in)
	out := new(CreateContentSourceTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateContentSourceType(ctx context.Context, in *UpdateContentSourceTypeRequest, opts ...client.CallOption) (*UpdateContentSourceTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateContentSourceType", in)
	out := new(UpdateContentSourceTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadContentSourceType(ctx context.Context, in *ReadContentSourceTypeRequest, opts ...client.CallOption) (*ReadContentSourceTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadContentSourceType", in)
	out := new(ReadContentSourceTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteContentSourceType(ctx context.Context, in *DeleteContentSourceTypeRequest, opts ...client.CallOption) (*DeleteContentSourceTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteContentSourceType", in)
	out := new(DeleteContentSourceTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllModuleTriggers(ctx context.Context, in *AllModuleTriggersRequest, opts ...client.CallOption) (*AllModuleTriggersResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllModuleTriggers", in)
	out := new(AllModuleTriggersResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateModuleTrigger(ctx context.Context, in *CreateModuleTriggerRequest, opts ...client.CallOption) (*CreateModuleTriggerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateModuleTrigger", in)
	out := new(CreateModuleTriggerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateModuleTrigger(ctx context.Context, in *UpdateModuleTriggerRequest, opts ...client.CallOption) (*UpdateModuleTriggerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateModuleTrigger", in)
	out := new(UpdateModuleTriggerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadModuleTrigger(ctx context.Context, in *ReadModuleTriggerRequest, opts ...client.CallOption) (*ReadModuleTriggerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadModuleTrigger", in)
	out := new(ReadModuleTriggerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteModuleTrigger(ctx context.Context, in *DeleteModuleTriggerRequest, opts ...client.CallOption) (*DeleteModuleTriggerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteModuleTrigger", in)
	out := new(DeleteModuleTriggerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) FilterModuleTrigger(ctx context.Context, in *FilterModuleTriggerRequest, opts ...client.CallOption) (*FilterModuleTriggerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.FilterModuleTrigger", in)
	out := new(FilterModuleTriggerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllTriggerContentTypes(ctx context.Context, in *AllTriggerContentTypesRequest, opts ...client.CallOption) (*AllTriggerContentTypesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllTriggerContentTypes", in)
	out := new(AllTriggerContentTypesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateTriggerContentType(ctx context.Context, in *CreateTriggerContentTypeRequest, opts ...client.CallOption) (*CreateTriggerContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateTriggerContentType", in)
	out := new(CreateTriggerContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateTriggerContentType(ctx context.Context, in *UpdateTriggerContentTypeRequest, opts ...client.CallOption) (*UpdateTriggerContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateTriggerContentType", in)
	out := new(UpdateTriggerContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadTriggerContentType(ctx context.Context, in *ReadTriggerContentTypeRequest, opts ...client.CallOption) (*ReadTriggerContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadTriggerContentType", in)
	out := new(ReadTriggerContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteTriggerContentType(ctx context.Context, in *DeleteTriggerContentTypeRequest, opts ...client.CallOption) (*DeleteTriggerContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteTriggerContentType", in)
	out := new(DeleteTriggerContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) FilterTriggerContentType(ctx context.Context, in *FilterTriggerContentTypeRequest, opts ...client.CallOption) (*FilterTriggerContentTypeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.FilterTriggerContentType", in)
	out := new(FilterTriggerContentTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateRole(ctx context.Context, in *CreateRoleRequest, opts ...client.CallOption) (*CreateRoleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateRole", in)
	out := new(CreateRoleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateRole(ctx context.Context, in *UpdateRoleRequest, opts ...client.CallOption) (*UpdateRoleResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateRole", in)
	out := new(UpdateRoleResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadRoleByNameslug(ctx context.Context, in *ReadRoleByNameslugRequest, opts ...client.CallOption) (*ReadRoleByNameslugResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadRoleByNameslug", in)
	out := new(ReadRoleByNameslugResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AllSetbacks(ctx context.Context, in *AllSetbacksRequest, opts ...client.CallOption) (*AllSetbacksResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AllSetbacks", in)
	out := new(AllSetbacksResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) CreateSetback(ctx context.Context, in *CreateSetbackRequest, opts ...client.CallOption) (*CreateSetbackResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.CreateSetback", in)
	out := new(CreateSetbackResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UpdateSetback(ctx context.Context, in *UpdateSetbackRequest, opts ...client.CallOption) (*UpdateSetbackResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UpdateSetback", in)
	out := new(UpdateSetbackResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadSetback(ctx context.Context, in *ReadSetbackRequest, opts ...client.CallOption) (*ReadSetbackResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadSetback", in)
	out := new(ReadSetbackResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) DeleteSetback(ctx context.Context, in *DeleteSetbackRequest, opts ...client.CallOption) (*DeleteSetbackResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.DeleteSetback", in)
	out := new(DeleteSetbackResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) AutocompleteSetbackSearch(ctx context.Context, in *AutocompleteSetbackSearchRequest, opts ...client.CallOption) (*AllSetbacksResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.AutocompleteSetbackSearch", in)
	out := new(AllSetbacksResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadMarkerByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadMarkerResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadMarkerByNameslug", in)
	out := new(ReadMarkerResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadBehaviourCategoryAimByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadBehaviourCategoryAimResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadBehaviourCategoryAimByNameslug", in)
	out := new(ReadBehaviourCategoryAimResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadTrackerMethodByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadTrackerMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadTrackerMethodByNameslug", in)
	out := new(ReadTrackerMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadAppByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadAppResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadAppByNameslug", in)
	out := new(ReadAppResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadWearableByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadWearableResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadWearableByNameslug", in)
	out := new(ReadWearableResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) ReadDeviceByNameslug(ctx context.Context, in *ReadByNameslugRequest, opts ...client.CallOption) (*ReadDeviceResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.ReadDeviceByNameslug", in)
	out := new(ReadDeviceResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UploadBehaviourCategoryAim(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UploadBehaviourCategoryAim", in)
	out := new(UploadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UploadContentCategory(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UploadContentCategory", in)
	out := new(UploadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UploadMarker(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UploadMarker", in)
	out := new(UploadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UploadBehaviourCategory(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UploadBehaviourCategory", in)
	out := new(UploadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UploadContentCategoryItem(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UploadContentCategoryItem", in)
	out := new(UploadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticServiceClient) UploadTrackerMethod(ctx context.Context, in *UploadRequest, opts ...client.CallOption) (*UploadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "StaticService.UploadTrackerMethod", in)
	out := new(UploadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for StaticService service

type StaticServiceHandler interface {
	AllApps(context.Context, *AllAppsRequest, *AllAppsResponse) error
	CreateApp(context.Context, *CreateAppRequest, *CreateAppResponse) error
	UpdateApp(context.Context, *UpdateAppRequest, *UpdateAppResponse) error
	ReadApp(context.Context, *ReadAppRequest, *ReadAppResponse) error
	DeleteApp(context.Context, *DeleteAppRequest, *DeleteAppResponse) error
	AllPlatforms(context.Context, *AllPlatformsRequest, *AllPlatformsResponse) error
	CreatePlatform(context.Context, *CreatePlatformRequest, *CreatePlatformResponse) error
	UpdatePlatform(context.Context, *UpdatePlatformRequest, *UpdatePlatformResponse) error
	ReadPlatform(context.Context, *ReadPlatformRequest, *ReadPlatformResponse) error
	DeletePlatform(context.Context, *DeletePlatformRequest, *DeletePlatformResponse) error
	AllDevices(context.Context, *AllDevicesRequest, *AllDevicesResponse) error
	CreateDevice(context.Context, *CreateDeviceRequest, *CreateDeviceResponse) error
	UpdateDevice(context.Context, *UpdateDeviceRequest, *UpdateDeviceResponse) error
	ReadDevice(context.Context, *ReadDeviceRequest, *ReadDeviceResponse) error
	DeleteDevice(context.Context, *DeleteDeviceRequest, *DeleteDeviceResponse) error
	AllWearables(context.Context, *AllWearablesRequest, *AllWearablesResponse) error
	CreateWearable(context.Context, *CreateWearableRequest, *CreateWearableResponse) error
	UpdateWearable(context.Context, *UpdateWearableRequest, *UpdateWearableResponse) error
	ReadWearable(context.Context, *ReadWearableRequest, *ReadWearableResponse) error
	DeleteWearable(context.Context, *DeleteWearableRequest, *DeleteWearableResponse) error
	AllMarkers(context.Context, *AllMarkersRequest, *AllMarkersResponse) error
	CreateMarker(context.Context, *CreateMarkerRequest, *CreateMarkerResponse) error
	UpdateMarker(context.Context, *UpdateMarkerRequest, *UpdateMarkerResponse) error
	ReadMarker(context.Context, *ReadMarkerRequest, *ReadMarkerResponse) error
	DeleteMarker(context.Context, *DeleteMarkerRequest, *DeleteMarkerResponse) error
	FilterMarker(context.Context, *FilterMarkerRequest, *FilterMarkerResponse) error
	AllModules(context.Context, *AllModulesRequest, *AllModulesResponse) error
	CreateModule(context.Context, *CreateModuleRequest, *CreateModuleResponse) error
	UpdateModule(context.Context, *UpdateModuleRequest, *UpdateModuleResponse) error
	ReadModule(context.Context, *ReadModuleRequest, *ReadModuleResponse) error
	DeleteModule(context.Context, *DeleteModuleRequest, *DeleteModuleResponse) error
	AllBehaviourCategories(context.Context, *AllBehaviourCategoriesRequest, *AllBehaviourCategoriesResponse) error
	ReadBehaviourCategory(context.Context, *ReadBehaviourCategoryRequest, *ReadBehaviourCategoryResponse) error
	CreateBehaviourCategory(context.Context, *CreateBehaviourCategoryRequest, *CreateBehaviourCategoryResponse) error
	UpdateBehaviourCategory(context.Context, *UpdateBehaviourCategoryRequest, *UpdateBehaviourCategoryResponse) error
	DeleteBehaviourCategory(context.Context, *DeleteBehaviourCategoryRequest, *DeleteBehaviourCategoryResponse) error
	FilterBehaviourCategory(context.Context, *FilterBehaviourCategoryRequest, *FilterBehaviourCategoryResponse) error
	AllSocialTypes(context.Context, *AllSocialTypesRequest, *AllSocialTypesResponse) error
	CreateSocialType(context.Context, *CreateSocialTypeRequest, *CreateSocialTypeResponse) error
	UpdateSocialType(context.Context, *UpdateSocialTypeRequest, *UpdateSocialTypeResponse) error
	ReadSocialType(context.Context, *ReadSocialTypeRequest, *ReadSocialTypeResponse) error
	DeleteSocialType(context.Context, *DeleteSocialTypeRequest, *DeleteSocialTypeResponse) error
	AllNotifications(context.Context, *AllNotificationsRequest, *AllNotificationsResponse) error
	CreateNotification(context.Context, *CreateNotificationRequest, *CreateNotificationResponse) error
	UpdateNotification(context.Context, *UpdateNotificationRequest, *UpdateNotificationResponse) error
	ReadNotification(context.Context, *ReadNotificationRequest, *ReadNotificationResponse) error
	DeleteNotification(context.Context, *DeleteNotificationRequest, *DeleteNotificationResponse) error
	AllTrackerMethods(context.Context, *AllTrackerMethodsRequest, *AllTrackerMethodsResponse) error
	CreateTrackerMethod(context.Context, *CreateTrackerMethodRequest, *CreateTrackerMethodResponse) error
	UpdateTrackerMethod(context.Context, *UpdateTrackerMethodRequest, *UpdateTrackerMethodResponse) error
	ReadTrackerMethod(context.Context, *ReadTrackerMethodRequest, *ReadTrackerMethodResponse) error
	DeleteTrackerMethod(context.Context, *DeleteTrackerMethodRequest, *DeleteTrackerMethodResponse) error
	FilterTrackerMethod(context.Context, *FilterTrackerMethodRequest, *FilterTrackerMethodResponse) error
	AllBehaviourCategoryAims(context.Context, *AllBehaviourCategoryAimsRequest, *AllBehaviourCategoryAimsResponse) error
	CreateBehaviourCategoryAim(context.Context, *CreateBehaviourCategoryAimRequest, *CreateBehaviourCategoryAimResponse) error
	UpdateBehaviourCategoryAim(context.Context, *UpdateBehaviourCategoryAimRequest, *UpdateBehaviourCategoryAimResponse) error
	ReadBehaviourCategoryAim(context.Context, *ReadBehaviourCategoryAimRequest, *ReadBehaviourCategoryAimResponse) error
	DeleteBehaviourCategoryAim(context.Context, *DeleteBehaviourCategoryAimRequest, *DeleteBehaviourCategoryAimResponse) error
	AllContentParentCategories(context.Context, *AllContentParentCategoriesRequest, *AllContentParentCategoriesResponse) error
	CreateContentParentCategory(context.Context, *CreateContentParentCategoryRequest, *CreateContentParentCategoryResponse) error
	UpdateContentParentCategory(context.Context, *UpdateContentParentCategoryRequest, *UpdateContentParentCategoryResponse) error
	ReadContentParentCategory(context.Context, *ReadContentParentCategoryRequest, *ReadContentParentCategoryResponse) error
	DeleteContentParentCategory(context.Context, *DeleteContentParentCategoryRequest, *DeleteContentParentCategoryResponse) error
	AllContentCategories(context.Context, *AllContentCategoriesRequest, *AllContentCategoriesResponse) error
	CreateContentCategory(context.Context, *CreateContentCategoryRequest, *CreateContentCategoryResponse) error
	UpdateContentCategory(context.Context, *UpdateContentCategoryRequest, *UpdateContentCategoryResponse) error
	ReadContentCategory(context.Context, *ReadContentCategoryRequest, *ReadContentCategoryResponse) error
	DeleteContentCategory(context.Context, *DeleteContentCategoryRequest, *DeleteContentCategoryResponse) error
	ReadContentCategoryByNameslug(context.Context, *ReadByNameslugRequest, *ReadContentCategoryResponse) error
	ReadContentCategoryByNameslugOrCreate(context.Context, *ReadByNameslugRequest, *ReadContentCategoryResponse) error
	AllContentTypes(context.Context, *AllContentTypesRequest, *AllContentTypesResponse) error
	CreateContentType(context.Context, *CreateContentTypeRequest, *CreateContentTypeResponse) error
	UpdateContentType(context.Context, *UpdateContentTypeRequest, *UpdateContentTypeResponse) error
	ReadContentType(context.Context, *ReadContentTypeRequest, *ReadContentTypeResponse) error
	DeleteContentType(context.Context, *DeleteContentTypeRequest, *DeleteContentTypeResponse) error
	AllContentSourceTypes(context.Context, *AllContentSourceTypesRequest, *AllContentSourceTypesResponse) error
	CreateContentSourceType(context.Context, *CreateContentSourceTypeRequest, *CreateContentSourceTypeResponse) error
	UpdateContentSourceType(context.Context, *UpdateContentSourceTypeRequest, *UpdateContentSourceTypeResponse) error
	ReadContentSourceType(context.Context, *ReadContentSourceTypeRequest, *ReadContentSourceTypeResponse) error
	DeleteContentSourceType(context.Context, *DeleteContentSourceTypeRequest, *DeleteContentSourceTypeResponse) error
	AllModuleTriggers(context.Context, *AllModuleTriggersRequest, *AllModuleTriggersResponse) error
	CreateModuleTrigger(context.Context, *CreateModuleTriggerRequest, *CreateModuleTriggerResponse) error
	UpdateModuleTrigger(context.Context, *UpdateModuleTriggerRequest, *UpdateModuleTriggerResponse) error
	ReadModuleTrigger(context.Context, *ReadModuleTriggerRequest, *ReadModuleTriggerResponse) error
	DeleteModuleTrigger(context.Context, *DeleteModuleTriggerRequest, *DeleteModuleTriggerResponse) error
	FilterModuleTrigger(context.Context, *FilterModuleTriggerRequest, *FilterModuleTriggerResponse) error
	AllTriggerContentTypes(context.Context, *AllTriggerContentTypesRequest, *AllTriggerContentTypesResponse) error
	CreateTriggerContentType(context.Context, *CreateTriggerContentTypeRequest, *CreateTriggerContentTypeResponse) error
	UpdateTriggerContentType(context.Context, *UpdateTriggerContentTypeRequest, *UpdateTriggerContentTypeResponse) error
	ReadTriggerContentType(context.Context, *ReadTriggerContentTypeRequest, *ReadTriggerContentTypeResponse) error
	DeleteTriggerContentType(context.Context, *DeleteTriggerContentTypeRequest, *DeleteTriggerContentTypeResponse) error
	FilterTriggerContentType(context.Context, *FilterTriggerContentTypeRequest, *FilterTriggerContentTypeResponse) error
	CreateRole(context.Context, *CreateRoleRequest, *CreateRoleResponse) error
	UpdateRole(context.Context, *UpdateRoleRequest, *UpdateRoleResponse) error
	ReadRoleByNameslug(context.Context, *ReadRoleByNameslugRequest, *ReadRoleByNameslugResponse) error
	AllSetbacks(context.Context, *AllSetbacksRequest, *AllSetbacksResponse) error
	CreateSetback(context.Context, *CreateSetbackRequest, *CreateSetbackResponse) error
	UpdateSetback(context.Context, *UpdateSetbackRequest, *UpdateSetbackResponse) error
	ReadSetback(context.Context, *ReadSetbackRequest, *ReadSetbackResponse) error
	DeleteSetback(context.Context, *DeleteSetbackRequest, *DeleteSetbackResponse) error
	AutocompleteSetbackSearch(context.Context, *AutocompleteSetbackSearchRequest, *AllSetbacksResponse) error
	ReadMarkerByNameslug(context.Context, *ReadByNameslugRequest, *ReadMarkerResponse) error
	ReadBehaviourCategoryAimByNameslug(context.Context, *ReadByNameslugRequest, *ReadBehaviourCategoryAimResponse) error
	ReadTrackerMethodByNameslug(context.Context, *ReadByNameslugRequest, *ReadTrackerMethodResponse) error
	ReadAppByNameslug(context.Context, *ReadByNameslugRequest, *ReadAppResponse) error
	ReadWearableByNameslug(context.Context, *ReadByNameslugRequest, *ReadWearableResponse) error
	ReadDeviceByNameslug(context.Context, *ReadByNameslugRequest, *ReadDeviceResponse) error
	UploadBehaviourCategoryAim(context.Context, *UploadRequest, *UploadResponse) error
	UploadContentCategory(context.Context, *UploadRequest, *UploadResponse) error
	UploadMarker(context.Context, *UploadRequest, *UploadResponse) error
	UploadBehaviourCategory(context.Context, *UploadRequest, *UploadResponse) error
	UploadContentCategoryItem(context.Context, *UploadRequest, *UploadResponse) error
	UploadTrackerMethod(context.Context, *UploadRequest, *UploadResponse) error
}

func RegisterStaticServiceHandler(s server.Server, hdlr StaticServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&StaticService{hdlr}, opts...))
}

type StaticService struct {
	StaticServiceHandler
}

func (h *StaticService) AllApps(ctx context.Context, in *AllAppsRequest, out *AllAppsResponse) error {
	return h.StaticServiceHandler.AllApps(ctx, in, out)
}

func (h *StaticService) CreateApp(ctx context.Context, in *CreateAppRequest, out *CreateAppResponse) error {
	return h.StaticServiceHandler.CreateApp(ctx, in, out)
}

func (h *StaticService) UpdateApp(ctx context.Context, in *UpdateAppRequest, out *UpdateAppResponse) error {
	return h.StaticServiceHandler.UpdateApp(ctx, in, out)
}

func (h *StaticService) ReadApp(ctx context.Context, in *ReadAppRequest, out *ReadAppResponse) error {
	return h.StaticServiceHandler.ReadApp(ctx, in, out)
}

func (h *StaticService) DeleteApp(ctx context.Context, in *DeleteAppRequest, out *DeleteAppResponse) error {
	return h.StaticServiceHandler.DeleteApp(ctx, in, out)
}

func (h *StaticService) AllPlatforms(ctx context.Context, in *AllPlatformsRequest, out *AllPlatformsResponse) error {
	return h.StaticServiceHandler.AllPlatforms(ctx, in, out)
}

func (h *StaticService) CreatePlatform(ctx context.Context, in *CreatePlatformRequest, out *CreatePlatformResponse) error {
	return h.StaticServiceHandler.CreatePlatform(ctx, in, out)
}

func (h *StaticService) UpdatePlatform(ctx context.Context, in *UpdatePlatformRequest, out *UpdatePlatformResponse) error {
	return h.StaticServiceHandler.UpdatePlatform(ctx, in, out)
}

func (h *StaticService) ReadPlatform(ctx context.Context, in *ReadPlatformRequest, out *ReadPlatformResponse) error {
	return h.StaticServiceHandler.ReadPlatform(ctx, in, out)
}

func (h *StaticService) DeletePlatform(ctx context.Context, in *DeletePlatformRequest, out *DeletePlatformResponse) error {
	return h.StaticServiceHandler.DeletePlatform(ctx, in, out)
}

func (h *StaticService) AllDevices(ctx context.Context, in *AllDevicesRequest, out *AllDevicesResponse) error {
	return h.StaticServiceHandler.AllDevices(ctx, in, out)
}

func (h *StaticService) CreateDevice(ctx context.Context, in *CreateDeviceRequest, out *CreateDeviceResponse) error {
	return h.StaticServiceHandler.CreateDevice(ctx, in, out)
}

func (h *StaticService) UpdateDevice(ctx context.Context, in *UpdateDeviceRequest, out *UpdateDeviceResponse) error {
	return h.StaticServiceHandler.UpdateDevice(ctx, in, out)
}

func (h *StaticService) ReadDevice(ctx context.Context, in *ReadDeviceRequest, out *ReadDeviceResponse) error {
	return h.StaticServiceHandler.ReadDevice(ctx, in, out)
}

func (h *StaticService) DeleteDevice(ctx context.Context, in *DeleteDeviceRequest, out *DeleteDeviceResponse) error {
	return h.StaticServiceHandler.DeleteDevice(ctx, in, out)
}

func (h *StaticService) AllWearables(ctx context.Context, in *AllWearablesRequest, out *AllWearablesResponse) error {
	return h.StaticServiceHandler.AllWearables(ctx, in, out)
}

func (h *StaticService) CreateWearable(ctx context.Context, in *CreateWearableRequest, out *CreateWearableResponse) error {
	return h.StaticServiceHandler.CreateWearable(ctx, in, out)
}

func (h *StaticService) UpdateWearable(ctx context.Context, in *UpdateWearableRequest, out *UpdateWearableResponse) error {
	return h.StaticServiceHandler.UpdateWearable(ctx, in, out)
}

func (h *StaticService) ReadWearable(ctx context.Context, in *ReadWearableRequest, out *ReadWearableResponse) error {
	return h.StaticServiceHandler.ReadWearable(ctx, in, out)
}

func (h *StaticService) DeleteWearable(ctx context.Context, in *DeleteWearableRequest, out *DeleteWearableResponse) error {
	return h.StaticServiceHandler.DeleteWearable(ctx, in, out)
}

func (h *StaticService) AllMarkers(ctx context.Context, in *AllMarkersRequest, out *AllMarkersResponse) error {
	return h.StaticServiceHandler.AllMarkers(ctx, in, out)
}

func (h *StaticService) CreateMarker(ctx context.Context, in *CreateMarkerRequest, out *CreateMarkerResponse) error {
	return h.StaticServiceHandler.CreateMarker(ctx, in, out)
}

func (h *StaticService) UpdateMarker(ctx context.Context, in *UpdateMarkerRequest, out *UpdateMarkerResponse) error {
	return h.StaticServiceHandler.UpdateMarker(ctx, in, out)
}

func (h *StaticService) ReadMarker(ctx context.Context, in *ReadMarkerRequest, out *ReadMarkerResponse) error {
	return h.StaticServiceHandler.ReadMarker(ctx, in, out)
}

func (h *StaticService) DeleteMarker(ctx context.Context, in *DeleteMarkerRequest, out *DeleteMarkerResponse) error {
	return h.StaticServiceHandler.DeleteMarker(ctx, in, out)
}

func (h *StaticService) FilterMarker(ctx context.Context, in *FilterMarkerRequest, out *FilterMarkerResponse) error {
	return h.StaticServiceHandler.FilterMarker(ctx, in, out)
}

func (h *StaticService) AllModules(ctx context.Context, in *AllModulesRequest, out *AllModulesResponse) error {
	return h.StaticServiceHandler.AllModules(ctx, in, out)
}

func (h *StaticService) CreateModule(ctx context.Context, in *CreateModuleRequest, out *CreateModuleResponse) error {
	return h.StaticServiceHandler.CreateModule(ctx, in, out)
}

func (h *StaticService) UpdateModule(ctx context.Context, in *UpdateModuleRequest, out *UpdateModuleResponse) error {
	return h.StaticServiceHandler.UpdateModule(ctx, in, out)
}

func (h *StaticService) ReadModule(ctx context.Context, in *ReadModuleRequest, out *ReadModuleResponse) error {
	return h.StaticServiceHandler.ReadModule(ctx, in, out)
}

func (h *StaticService) DeleteModule(ctx context.Context, in *DeleteModuleRequest, out *DeleteModuleResponse) error {
	return h.StaticServiceHandler.DeleteModule(ctx, in, out)
}

func (h *StaticService) AllBehaviourCategories(ctx context.Context, in *AllBehaviourCategoriesRequest, out *AllBehaviourCategoriesResponse) error {
	return h.StaticServiceHandler.AllBehaviourCategories(ctx, in, out)
}

func (h *StaticService) ReadBehaviourCategory(ctx context.Context, in *ReadBehaviourCategoryRequest, out *ReadBehaviourCategoryResponse) error {
	return h.StaticServiceHandler.ReadBehaviourCategory(ctx, in, out)
}

func (h *StaticService) CreateBehaviourCategory(ctx context.Context, in *CreateBehaviourCategoryRequest, out *CreateBehaviourCategoryResponse) error {
	return h.StaticServiceHandler.CreateBehaviourCategory(ctx, in, out)
}

func (h *StaticService) UpdateBehaviourCategory(ctx context.Context, in *UpdateBehaviourCategoryRequest, out *UpdateBehaviourCategoryResponse) error {
	return h.StaticServiceHandler.UpdateBehaviourCategory(ctx, in, out)
}

func (h *StaticService) DeleteBehaviourCategory(ctx context.Context, in *DeleteBehaviourCategoryRequest, out *DeleteBehaviourCategoryResponse) error {
	return h.StaticServiceHandler.DeleteBehaviourCategory(ctx, in, out)
}

func (h *StaticService) FilterBehaviourCategory(ctx context.Context, in *FilterBehaviourCategoryRequest, out *FilterBehaviourCategoryResponse) error {
	return h.StaticServiceHandler.FilterBehaviourCategory(ctx, in, out)
}

func (h *StaticService) AllSocialTypes(ctx context.Context, in *AllSocialTypesRequest, out *AllSocialTypesResponse) error {
	return h.StaticServiceHandler.AllSocialTypes(ctx, in, out)
}

func (h *StaticService) CreateSocialType(ctx context.Context, in *CreateSocialTypeRequest, out *CreateSocialTypeResponse) error {
	return h.StaticServiceHandler.CreateSocialType(ctx, in, out)
}

func (h *StaticService) UpdateSocialType(ctx context.Context, in *UpdateSocialTypeRequest, out *UpdateSocialTypeResponse) error {
	return h.StaticServiceHandler.UpdateSocialType(ctx, in, out)
}

func (h *StaticService) ReadSocialType(ctx context.Context, in *ReadSocialTypeRequest, out *ReadSocialTypeResponse) error {
	return h.StaticServiceHandler.ReadSocialType(ctx, in, out)
}

func (h *StaticService) DeleteSocialType(ctx context.Context, in *DeleteSocialTypeRequest, out *DeleteSocialTypeResponse) error {
	return h.StaticServiceHandler.DeleteSocialType(ctx, in, out)
}

func (h *StaticService) AllNotifications(ctx context.Context, in *AllNotificationsRequest, out *AllNotificationsResponse) error {
	return h.StaticServiceHandler.AllNotifications(ctx, in, out)
}

func (h *StaticService) CreateNotification(ctx context.Context, in *CreateNotificationRequest, out *CreateNotificationResponse) error {
	return h.StaticServiceHandler.CreateNotification(ctx, in, out)
}

func (h *StaticService) UpdateNotification(ctx context.Context, in *UpdateNotificationRequest, out *UpdateNotificationResponse) error {
	return h.StaticServiceHandler.UpdateNotification(ctx, in, out)
}

func (h *StaticService) ReadNotification(ctx context.Context, in *ReadNotificationRequest, out *ReadNotificationResponse) error {
	return h.StaticServiceHandler.ReadNotification(ctx, in, out)
}

func (h *StaticService) DeleteNotification(ctx context.Context, in *DeleteNotificationRequest, out *DeleteNotificationResponse) error {
	return h.StaticServiceHandler.DeleteNotification(ctx, in, out)
}

func (h *StaticService) AllTrackerMethods(ctx context.Context, in *AllTrackerMethodsRequest, out *AllTrackerMethodsResponse) error {
	return h.StaticServiceHandler.AllTrackerMethods(ctx, in, out)
}

func (h *StaticService) CreateTrackerMethod(ctx context.Context, in *CreateTrackerMethodRequest, out *CreateTrackerMethodResponse) error {
	return h.StaticServiceHandler.CreateTrackerMethod(ctx, in, out)
}

func (h *StaticService) UpdateTrackerMethod(ctx context.Context, in *UpdateTrackerMethodRequest, out *UpdateTrackerMethodResponse) error {
	return h.StaticServiceHandler.UpdateTrackerMethod(ctx, in, out)
}

func (h *StaticService) ReadTrackerMethod(ctx context.Context, in *ReadTrackerMethodRequest, out *ReadTrackerMethodResponse) error {
	return h.StaticServiceHandler.ReadTrackerMethod(ctx, in, out)
}

func (h *StaticService) DeleteTrackerMethod(ctx context.Context, in *DeleteTrackerMethodRequest, out *DeleteTrackerMethodResponse) error {
	return h.StaticServiceHandler.DeleteTrackerMethod(ctx, in, out)
}

func (h *StaticService) FilterTrackerMethod(ctx context.Context, in *FilterTrackerMethodRequest, out *FilterTrackerMethodResponse) error {
	return h.StaticServiceHandler.FilterTrackerMethod(ctx, in, out)
}

func (h *StaticService) AllBehaviourCategoryAims(ctx context.Context, in *AllBehaviourCategoryAimsRequest, out *AllBehaviourCategoryAimsResponse) error {
	return h.StaticServiceHandler.AllBehaviourCategoryAims(ctx, in, out)
}

func (h *StaticService) CreateBehaviourCategoryAim(ctx context.Context, in *CreateBehaviourCategoryAimRequest, out *CreateBehaviourCategoryAimResponse) error {
	return h.StaticServiceHandler.CreateBehaviourCategoryAim(ctx, in, out)
}

func (h *StaticService) UpdateBehaviourCategoryAim(ctx context.Context, in *UpdateBehaviourCategoryAimRequest, out *UpdateBehaviourCategoryAimResponse) error {
	return h.StaticServiceHandler.UpdateBehaviourCategoryAim(ctx, in, out)
}

func (h *StaticService) ReadBehaviourCategoryAim(ctx context.Context, in *ReadBehaviourCategoryAimRequest, out *ReadBehaviourCategoryAimResponse) error {
	return h.StaticServiceHandler.ReadBehaviourCategoryAim(ctx, in, out)
}

func (h *StaticService) DeleteBehaviourCategoryAim(ctx context.Context, in *DeleteBehaviourCategoryAimRequest, out *DeleteBehaviourCategoryAimResponse) error {
	return h.StaticServiceHandler.DeleteBehaviourCategoryAim(ctx, in, out)
}

func (h *StaticService) AllContentParentCategories(ctx context.Context, in *AllContentParentCategoriesRequest, out *AllContentParentCategoriesResponse) error {
	return h.StaticServiceHandler.AllContentParentCategories(ctx, in, out)
}

func (h *StaticService) CreateContentParentCategory(ctx context.Context, in *CreateContentParentCategoryRequest, out *CreateContentParentCategoryResponse) error {
	return h.StaticServiceHandler.CreateContentParentCategory(ctx, in, out)
}

func (h *StaticService) UpdateContentParentCategory(ctx context.Context, in *UpdateContentParentCategoryRequest, out *UpdateContentParentCategoryResponse) error {
	return h.StaticServiceHandler.UpdateContentParentCategory(ctx, in, out)
}

func (h *StaticService) ReadContentParentCategory(ctx context.Context, in *ReadContentParentCategoryRequest, out *ReadContentParentCategoryResponse) error {
	return h.StaticServiceHandler.ReadContentParentCategory(ctx, in, out)
}

func (h *StaticService) DeleteContentParentCategory(ctx context.Context, in *DeleteContentParentCategoryRequest, out *DeleteContentParentCategoryResponse) error {
	return h.StaticServiceHandler.DeleteContentParentCategory(ctx, in, out)
}

func (h *StaticService) AllContentCategories(ctx context.Context, in *AllContentCategoriesRequest, out *AllContentCategoriesResponse) error {
	return h.StaticServiceHandler.AllContentCategories(ctx, in, out)
}

func (h *StaticService) CreateContentCategory(ctx context.Context, in *CreateContentCategoryRequest, out *CreateContentCategoryResponse) error {
	return h.StaticServiceHandler.CreateContentCategory(ctx, in, out)
}

func (h *StaticService) UpdateContentCategory(ctx context.Context, in *UpdateContentCategoryRequest, out *UpdateContentCategoryResponse) error {
	return h.StaticServiceHandler.UpdateContentCategory(ctx, in, out)
}

func (h *StaticService) ReadContentCategory(ctx context.Context, in *ReadContentCategoryRequest, out *ReadContentCategoryResponse) error {
	return h.StaticServiceHandler.ReadContentCategory(ctx, in, out)
}

func (h *StaticService) DeleteContentCategory(ctx context.Context, in *DeleteContentCategoryRequest, out *DeleteContentCategoryResponse) error {
	return h.StaticServiceHandler.DeleteContentCategory(ctx, in, out)
}

func (h *StaticService) ReadContentCategoryByNameslug(ctx context.Context, in *ReadByNameslugRequest, out *ReadContentCategoryResponse) error {
	return h.StaticServiceHandler.ReadContentCategoryByNameslug(ctx, in, out)
}

func (h *StaticService) ReadContentCategoryByNameslugOrCreate(ctx context.Context, in *ReadByNameslugRequest, out *ReadContentCategoryResponse) error {
	return h.StaticServiceHandler.ReadContentCategoryByNameslugOrCreate(ctx, in, out)
}

func (h *StaticService) AllContentTypes(ctx context.Context, in *AllContentTypesRequest, out *AllContentTypesResponse) error {
	return h.StaticServiceHandler.AllContentTypes(ctx, in, out)
}

func (h *StaticService) CreateContentType(ctx context.Context, in *CreateContentTypeRequest, out *CreateContentTypeResponse) error {
	return h.StaticServiceHandler.CreateContentType(ctx, in, out)
}

func (h *StaticService) UpdateContentType(ctx context.Context, in *UpdateContentTypeRequest, out *UpdateContentTypeResponse) error {
	return h.StaticServiceHandler.UpdateContentType(ctx, in, out)
}

func (h *StaticService) ReadContentType(ctx context.Context, in *ReadContentTypeRequest, out *ReadContentTypeResponse) error {
	return h.StaticServiceHandler.ReadContentType(ctx, in, out)
}

func (h *StaticService) DeleteContentType(ctx context.Context, in *DeleteContentTypeRequest, out *DeleteContentTypeResponse) error {
	return h.StaticServiceHandler.DeleteContentType(ctx, in, out)
}

func (h *StaticService) AllContentSourceTypes(ctx context.Context, in *AllContentSourceTypesRequest, out *AllContentSourceTypesResponse) error {
	return h.StaticServiceHandler.AllContentSourceTypes(ctx, in, out)
}

func (h *StaticService) CreateContentSourceType(ctx context.Context, in *CreateContentSourceTypeRequest, out *CreateContentSourceTypeResponse) error {
	return h.StaticServiceHandler.CreateContentSourceType(ctx, in, out)
}

func (h *StaticService) UpdateContentSourceType(ctx context.Context, in *UpdateContentSourceTypeRequest, out *UpdateContentSourceTypeResponse) error {
	return h.StaticServiceHandler.UpdateContentSourceType(ctx, in, out)
}

func (h *StaticService) ReadContentSourceType(ctx context.Context, in *ReadContentSourceTypeRequest, out *ReadContentSourceTypeResponse) error {
	return h.StaticServiceHandler.ReadContentSourceType(ctx, in, out)
}

func (h *StaticService) DeleteContentSourceType(ctx context.Context, in *DeleteContentSourceTypeRequest, out *DeleteContentSourceTypeResponse) error {
	return h.StaticServiceHandler.DeleteContentSourceType(ctx, in, out)
}

func (h *StaticService) AllModuleTriggers(ctx context.Context, in *AllModuleTriggersRequest, out *AllModuleTriggersResponse) error {
	return h.StaticServiceHandler.AllModuleTriggers(ctx, in, out)
}

func (h *StaticService) CreateModuleTrigger(ctx context.Context, in *CreateModuleTriggerRequest, out *CreateModuleTriggerResponse) error {
	return h.StaticServiceHandler.CreateModuleTrigger(ctx, in, out)
}

func (h *StaticService) UpdateModuleTrigger(ctx context.Context, in *UpdateModuleTriggerRequest, out *UpdateModuleTriggerResponse) error {
	return h.StaticServiceHandler.UpdateModuleTrigger(ctx, in, out)
}

func (h *StaticService) ReadModuleTrigger(ctx context.Context, in *ReadModuleTriggerRequest, out *ReadModuleTriggerResponse) error {
	return h.StaticServiceHandler.ReadModuleTrigger(ctx, in, out)
}

func (h *StaticService) DeleteModuleTrigger(ctx context.Context, in *DeleteModuleTriggerRequest, out *DeleteModuleTriggerResponse) error {
	return h.StaticServiceHandler.DeleteModuleTrigger(ctx, in, out)
}

func (h *StaticService) FilterModuleTrigger(ctx context.Context, in *FilterModuleTriggerRequest, out *FilterModuleTriggerResponse) error {
	return h.StaticServiceHandler.FilterModuleTrigger(ctx, in, out)
}

func (h *StaticService) AllTriggerContentTypes(ctx context.Context, in *AllTriggerContentTypesRequest, out *AllTriggerContentTypesResponse) error {
	return h.StaticServiceHandler.AllTriggerContentTypes(ctx, in, out)
}

func (h *StaticService) CreateTriggerContentType(ctx context.Context, in *CreateTriggerContentTypeRequest, out *CreateTriggerContentTypeResponse) error {
	return h.StaticServiceHandler.CreateTriggerContentType(ctx, in, out)
}

func (h *StaticService) UpdateTriggerContentType(ctx context.Context, in *UpdateTriggerContentTypeRequest, out *UpdateTriggerContentTypeResponse) error {
	return h.StaticServiceHandler.UpdateTriggerContentType(ctx, in, out)
}

func (h *StaticService) ReadTriggerContentType(ctx context.Context, in *ReadTriggerContentTypeRequest, out *ReadTriggerContentTypeResponse) error {
	return h.StaticServiceHandler.ReadTriggerContentType(ctx, in, out)
}

func (h *StaticService) DeleteTriggerContentType(ctx context.Context, in *DeleteTriggerContentTypeRequest, out *DeleteTriggerContentTypeResponse) error {
	return h.StaticServiceHandler.DeleteTriggerContentType(ctx, in, out)
}

func (h *StaticService) FilterTriggerContentType(ctx context.Context, in *FilterTriggerContentTypeRequest, out *FilterTriggerContentTypeResponse) error {
	return h.StaticServiceHandler.FilterTriggerContentType(ctx, in, out)
}

func (h *StaticService) CreateRole(ctx context.Context, in *CreateRoleRequest, out *CreateRoleResponse) error {
	return h.StaticServiceHandler.CreateRole(ctx, in, out)
}

func (h *StaticService) UpdateRole(ctx context.Context, in *UpdateRoleRequest, out *UpdateRoleResponse) error {
	return h.StaticServiceHandler.UpdateRole(ctx, in, out)
}

func (h *StaticService) ReadRoleByNameslug(ctx context.Context, in *ReadRoleByNameslugRequest, out *ReadRoleByNameslugResponse) error {
	return h.StaticServiceHandler.ReadRoleByNameslug(ctx, in, out)
}

func (h *StaticService) AllSetbacks(ctx context.Context, in *AllSetbacksRequest, out *AllSetbacksResponse) error {
	return h.StaticServiceHandler.AllSetbacks(ctx, in, out)
}

func (h *StaticService) CreateSetback(ctx context.Context, in *CreateSetbackRequest, out *CreateSetbackResponse) error {
	return h.StaticServiceHandler.CreateSetback(ctx, in, out)
}

func (h *StaticService) UpdateSetback(ctx context.Context, in *UpdateSetbackRequest, out *UpdateSetbackResponse) error {
	return h.StaticServiceHandler.UpdateSetback(ctx, in, out)
}

func (h *StaticService) ReadSetback(ctx context.Context, in *ReadSetbackRequest, out *ReadSetbackResponse) error {
	return h.StaticServiceHandler.ReadSetback(ctx, in, out)
}

func (h *StaticService) DeleteSetback(ctx context.Context, in *DeleteSetbackRequest, out *DeleteSetbackResponse) error {
	return h.StaticServiceHandler.DeleteSetback(ctx, in, out)
}

func (h *StaticService) AutocompleteSetbackSearch(ctx context.Context, in *AutocompleteSetbackSearchRequest, out *AllSetbacksResponse) error {
	return h.StaticServiceHandler.AutocompleteSetbackSearch(ctx, in, out)
}

func (h *StaticService) ReadMarkerByNameslug(ctx context.Context, in *ReadByNameslugRequest, out *ReadMarkerResponse) error {
	return h.StaticServiceHandler.ReadMarkerByNameslug(ctx, in, out)
}

func (h *StaticService) ReadBehaviourCategoryAimByNameslug(ctx context.Context, in *ReadByNameslugRequest, out *ReadBehaviourCategoryAimResponse) error {
	return h.StaticServiceHandler.ReadBehaviourCategoryAimByNameslug(ctx, in, out)
}

func (h *StaticService) ReadTrackerMethodByNameslug(ctx context.Context, in *ReadByNameslugRequest, out *ReadTrackerMethodResponse) error {
	return h.StaticServiceHandler.ReadTrackerMethodByNameslug(ctx, in, out)
}

func (h *StaticService) ReadAppByNameslug(ctx context.Context, in *ReadByNameslugRequest, out *ReadAppResponse) error {
	return h.StaticServiceHandler.ReadAppByNameslug(ctx, in, out)
}

func (h *StaticService) ReadWearableByNameslug(ctx context.Context, in *ReadByNameslugRequest, out *ReadWearableResponse) error {
	return h.StaticServiceHandler.ReadWearableByNameslug(ctx, in, out)
}

func (h *StaticService) ReadDeviceByNameslug(ctx context.Context, in *ReadByNameslugRequest, out *ReadDeviceResponse) error {
	return h.StaticServiceHandler.ReadDeviceByNameslug(ctx, in, out)
}

func (h *StaticService) UploadBehaviourCategoryAim(ctx context.Context, in *UploadRequest, out *UploadResponse) error {
	return h.StaticServiceHandler.UploadBehaviourCategoryAim(ctx, in, out)
}

func (h *StaticService) UploadContentCategory(ctx context.Context, in *UploadRequest, out *UploadResponse) error {
	return h.StaticServiceHandler.UploadContentCategory(ctx, in, out)
}

func (h *StaticService) UploadMarker(ctx context.Context, in *UploadRequest, out *UploadResponse) error {
	return h.StaticServiceHandler.UploadMarker(ctx, in, out)
}

func (h *StaticService) UploadBehaviourCategory(ctx context.Context, in *UploadRequest, out *UploadResponse) error {
	return h.StaticServiceHandler.UploadBehaviourCategory(ctx, in, out)
}

func (h *StaticService) UploadContentCategoryItem(ctx context.Context, in *UploadRequest, out *UploadResponse) error {
	return h.StaticServiceHandler.UploadContentCategoryItem(ctx, in, out)
}

func (h *StaticService) UploadTrackerMethod(ctx context.Context, in *UploadRequest, out *UploadResponse) error {
	return h.StaticServiceHandler.UploadTrackerMethod(ctx, in, out)
}

func init() { proto.RegisterFile("server/static-srv/proto/static/static.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 6816 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7d, 0xcf, 0x73, 0x1c, 0xc7,
	0x75, 0x3f, 0x67, 0x77, 0xb1, 0x58, 0x3c, 0xfc, 0xe0, 0x72, 0x00, 0x90, 0x20, 0xf8, 0x0b, 0x1c,
	0xc9, 0x24, 0x05, 0x89, 0xa0, 0xf8, 0x43, 0x32, 0x29, 0x7f, 0x6d, 0x7d, 0x97, 0xc0, 0x52, 0x84,
	0x0c, 0x82, 0xc8, 0x00, 0x24, 0x2d, 0x59, 0x16, 0x34, 0xdc, 0x1d, 0x02, 0x5b, 0xdc, 0xc5, 0xae,
	0x66, 0x67, 0x49, 0x43, 0xb6, 0xe4, 0x58, 0x72, 0xec, 0xc8, 0x89, 0xa3, 0x48, 0x96, 0x9d, 0x4a,
	0x0e, 0x49, 0xa5, 0x2a, 0x95, 0x4a, 0x7c, 0xc8, 0x21, 0x95, 0xca, 0x21, 0x95, 0x2a, 0x27, 0xe5,
	0x24, 0x55, 0x49, 0xca, 0xe5, 0xca, 0x39, 0xb7, 0x1c, 0x52, 0xc9, 0x29, 0x49, 0x25, 0x7f, 0x40,
	0x6a, 0xa6, 0xbb, 0x67, 0xba, 0x67, 0xba, 0x7b, 0x66, 0x76, 0x16, 0xbb, 0x84, 0x2a, 0xa7, 0xdd,
	0xe9, 0x79, 0xdd, 0xef, 0xbd, 0x4f, 0xf7, 0xbc, 0xee, 0xe9, 0x7e, 0xf3, 0x1e, 0x3c, 0xdb, 0x36,
	0xad, 0x47, 0xa6, 0x75, 0xa1, 0x6d, 0x1b, 0x76, 0xad, 0x72, 0xbe, 0x6d, 0x3d, 0xba, 0xd0, 0xb2,
	0x9a, 0x76, 0x13, 0x17, 0xe0, 0x9f, 0x05, 0xb7, 0x4c, 0x9d, 0xdc, 0x6a, 0x2e, 0x34, 0x6a, 0x15,
	0xab, 0xb9, 0xd0, 0xb6, 0x1e, 0x2d, 0xa0, 0x5b, 0xda, 0x0b, 0x30, 0x5c, 0x6a, 0xb5, 0x96, 0x0c,
	0xdb, 0x50, 0xe7, 0x21, 0x6b, 0xb4, 0x5a, 0x33, 0xca, 0x9c, 0x72, 0x6e, 0xf4, 0xd2, 0xcc, 0x02,
	0x87, 0x7a, 0xa1, 0xd4, 0x6a, 0xe9, 0x0e, 0x91, 0xf6, 0x12, 0x40, 0xa9, 0xd5, 0x2a, 0x59, 0x96,
	0x5b, 0xf3, 0x39, 0xc8, 0x19, 0xad, 0x56, 0x7b, 0x46, 0x99, 0xcb, 0x4a, 0xab, 0xba, 0x54, 0xda,
	0x32, 0x8c, 0xad, 0xd5, 0x0d, 0xfb, 0x41, 0xd3, 0x6a, 0xb8, 0xb5, 0xaf, 0x41, 0xa1, 0x85, 0xaf,
	0x31, 0xf3, 0x13, 0xdc, 0x16, 0x48, 0x25, 0xdd, 0x23, 0xd7, 0x56, 0xe1, 0x20, 0x29, 0x25, 0xb2,
	0x7c, 0x01, 0x46, 0xc8, 0x6d, 0x22, 0x50, 0x44, 0x73, 0x3e, 0xbd, 0x56, 0x02, 0x58, 0x32, 0x1f,
	0xd5, 0x2a, 0xa6, 0xdb, 0xd4, 0x65, 0xc8, 0x57, 0xdd, 0x2b, 0x2c, 0xd6, 0x31, 0x6e, 0x3b, 0xa8,
	0x82, 0x8e, 0x49, 0xb5, 0x1b, 0x30, 0x8e, 0x4a, 0x88, 0x40, 0x2f, 0xc0, 0x30, 0xba, 0x45, 0xc4,
	0x91, 0x36, 0x43, 0x68, 0x1d, 0x94, 0xee, 0x99, 0x86, 0x65, 0xdc, 0xaf, 0x9b, 0x04, 0xa5, 0xc7,
	0xf8, 0x5a, 0x8a, 0x12, 0xa9, 0xa4, 0x7b, 0xe4, 0x0e, 0x4a, 0xa4, 0x94, 0x42, 0x89, 0xdc, 0x96,
	0xa3, 0xe4, 0x35, 0xe7, 0xd3, 0x3b, 0x28, 0xdd, 0x32, 0xac, 0x87, 0xa6, 0x45, 0x50, 0x6a, 0xb8,
	0x57, 0x52, 0x94, 0x50, 0x05, 0x1d, 0x93, 0x3a, 0x28, 0xa1, 0x12, 0x0a, 0x25, 0x74, 0x4b, 0x8e,
	0x12, 0x6e, 0x86, 0xd0, 0xba, 0xa2, 0x34, 0xab, 0x9d, 0xba, 0xd7, 0x61, 0x0d, 0xf7, 0x4a, 0x2e,
	0x8a, 0x4b, 0xa2, 0x63, 0x52, 0x57, 0x14, 0xf7, 0x1f, 0x2d, 0x8a, 0x5b, 0x10, 0x21, 0x0a, 0x6a,
	0x86, 0xd0, 0x6a, 0x5f, 0x85, 0xe9, 0xeb, 0xe6, 0xb6, 0xf1, 0xa8, 0xd6, 0xec, 0x58, 0x8b, 0x86,
	0x6d, 0x6e, 0x35, 0xad, 0x5d, 0xb7, 0xbd, 0xeb, 0x50, 0xa8, 0xe0, 0x6b, 0x2c, 0xd7, 0x19, 0x6e,
	0x83, 0xa1, 0xda, 0xba, 0x57, 0x4f, 0xbb, 0x0f, 0x33, 0xa1, 0xdb, 0x44, 0xde, 0x1b, 0x00, 0x98,
	0xae, 0xe6, 0x89, 0x1c, 0x97, 0x03, 0x55, 0x53, 0xfb, 0x25, 0x98, 0x58, 0x6f, 0x56, 0x6a, 0x46,
	0x7d, 0x63, 0xb7, 0x85, 0xf0, 0x7c, 0x19, 0xa0, 0xed, 0x95, 0x60, 0xd9, 0x4f, 0x71, 0x5b, 0xf6,
	0x2b, 0xea, 0x54, 0x15, 0xed, 0x2e, 0x1c, 0xf2, 0xef, 0x10, 0x79, 0x4b, 0x30, 0xea, 0x93, 0x10,
	0x81, 0x23, 0x9b, 0xa5, 0xeb, 0x68, 0xaf, 0x41, 0x71, 0xb5, 0x69, 0xd7, 0x1e, 0xd4, 0x2a, 0x86,
	0x5d, 0x6b, 0xee, 0xb8, 0xcd, 0x96, 0x61, 0x6c, 0x87, 0x2a, 0xc3, 0xe2, 0x9e, 0xe6, 0xb6, 0x4b,
	0x57, 0xd6, 0x99, 0x6a, 0xda, 0x9b, 0x30, 0x49, 0xdf, 0x25, 0x42, 0xbf, 0x02, 0xe3, 0x34, 0x19,
	0x11, 0x3b, 0x46, 0xf3, 0x6c, 0x3d, 0xed, 0x6b, 0x70, 0x68, 0xc3, 0x32, 0x2a, 0x0f, 0x4d, 0xeb,
	0x96, 0x69, 0x6f, 0x37, 0xab, 0x6e, 0xeb, 0x37, 0x61, 0xdc, 0xa6, 0x0b, 0xb1, 0xf0, 0x1a, 0xb7,
	0x75, 0xa6, 0xba, 0xce, 0x56, 0xd4, 0xee, 0xc3, 0x14, 0x73, 0x9f, 0xc8, 0xff, 0x2a, 0x4c, 0x30,
	0x84, 0x44, 0x81, 0x38, 0x2c, 0x02, 0x35, 0xb5, 0x5d, 0xde, 0x60, 0xac, 0x21, 0x63, 0xfe, 0x35,
	0x98, 0xba, 0xcf, 0xb9, 0x87, 0x15, 0x7a, 0x26, 0xde, 0xb0, 0x2c, 0xd5, 0x1a, 0x3a, 0xb7, 0x19,
	0xed, 0x3d, 0x38, 0xc6, 0xa3, 0x26, 0x5a, 0x6e, 0xc2, 0x34, 0xaf, 0x1a, 0x51, 0x36, 0x01, 0x7b,
	0x7e, 0x3b, 0xda, 0xbb, 0x70, 0x74, 0xb1, 0xb9, 0x63, 0x9b, 0x3b, 0xf6, 0x9a, 0x61, 0x99, 0x3b,
	0x36, 0xf3, 0xa0, 0xbf, 0x05, 0xd3, 0x15, 0xde, 0x4d, 0xac, 0xfc, 0x3c, 0x97, 0x3b, 0xb7, 0x39,
	0x9d, 0xdf, 0x90, 0xf6, 0x1d, 0x05, 0x8e, 0x73, 0x2b, 0x10, 0x00, 0xaa, 0x70, 0x84, 0x57, 0xd3,
	0x37, 0x0c, 0x49, 0x84, 0x10, 0x35, 0xa5, 0x99, 0x30, 0x89, 0x6b, 0x30, 0xfa, 0xaf, 0xc2, 0xc1,
	0x0a, 0x5b, 0x8c, 0x35, 0x7f, 0x5a, 0xc6, 0xd4, 0x63, 0x17, 0xac, 0xac, 0xd5, 0xe1, 0x70, 0x80,
	0x86, 0xa8, 0xa9, 0xc3, 0x21, 0x96, 0xd8, 0x57, 0x30, 0x1e, 0xaf, 0x70, 0x75, 0xed, 0x0e, 0x1c,
	0xc4, 0x54, 0x9e, 0xfd, 0xbb, 0x0e, 0xa3, 0x15, 0xbf, 0x08, 0x2b, 0x33, 0x27, 0x63, 0x80, 0x4c,
	0x15, 0x55, 0x49, 0x7b, 0x1d, 0x54, 0xea, 0x1e, 0x51, 0x60, 0x09, 0xc6, 0x28, 0x22, 0x22, 0x7b,
	0x74, 0xd3, 0x4c, 0x2d, 0xad, 0x01, 0xd3, 0xf8, 0xe6, 0x7a, 0xb3, 0x63, 0x55, 0x4c, 0x4f, 0xf0,
	0x0d, 0x0f, 0x1f, 0xff, 0x86, 0x74, 0xee, 0x09, 0x35, 0xa3, 0x87, 0x1b, 0xd0, 0x2c, 0x98, 0x09,
	0xd1, 0x11, 0x85, 0xee, 0x82, 0x1a, 0xaa, 0x20, 0x9f, 0x8c, 0xc2, 0x2c, 0x39, 0x2d, 0x38, 0xe6,
	0x12, 0x4d, 0xb4, 0x1b, 0x56, 0x6d, 0x6b, 0x0b, 0x2f, 0x39, 0x6e, 0xc2, 0x78, 0x83, 0x2e, 0x94,
	0x9a, 0x4b, 0xa6, 0xba, 0xce, 0x56, 0x74, 0xcc, 0x25, 0x73, 0x9f, 0x32, 0x97, 0x0c, 0xa1, 0xdc,
	0x5c, 0xb2, 0x2c, 0x02, 0x35, 0xb5, 0xb7, 0xe1, 0x30, 0xfe, 0x1f, 0x1c, 0x5f, 0xf7, 0x40, 0xb5,
	0x43, 0x77, 0xb0, 0x32, 0x67, 0x05, 0x86, 0x39, 0x48, 0xae, 0x73, 0x9a, 0xd0, 0x1e, 0xc1, 0xd1,
	0x30, 0x25, 0xd1, 0xed, 0x35, 0x98, 0x0c, 0x57, 0x21, 0x0a, 0xc6, 0x66, 0xcb, 0x6b, 0x43, 0xbb,
	0x06, 0x05, 0xbd, 0x89, 0x17, 0x63, 0xe7, 0x21, 0x67, 0x35, 0xbd, 0xa5, 0xd8, 0x51, 0x6e, 0xbb,
	0x0e, 0xb1, 0xee, 0x92, 0x69, 0x5f, 0x82, 0x51, 0xe7, 0x8a, 0x08, 0x79, 0x01, 0x86, 0x9c, 0x62,
	0x22, 0x96, 0xa4, 0x3a, 0xa2, 0xd3, 0xfe, 0x52, 0x81, 0x89, 0x52, 0xbd, 0x5e, 0x6a, 0xb5, 0xda,
	0xba, 0xf9, 0x76, 0xc7, 0x6c, 0xdb, 0xea, 0x34, 0xe4, 0x9b, 0xd6, 0xd6, 0x66, 0x0d, 0x4d, 0xa7,
	0x23, 0xfa, 0x50, 0xd3, 0xda, 0x5a, 0xae, 0xaa, 0x47, 0x60, 0xd8, 0x36, 0x8d, 0x86, 0x53, 0x9e,
	0x71, 0xcb, 0xf3, 0xce, 0xe5, 0x72, 0x55, 0x9d, 0x82, 0xa1, 0x7a, 0xad, 0x51, 0xb3, 0x67, 0xb2,
	0x73, 0xca, 0xb9, 0xac, 0x8e, 0x2e, 0xd4, 0xc3, 0x90, 0x6f, 0x3e, 0x78, 0xd0, 0x36, 0xed, 0x99,
	0x9c, 0x5b, 0x8c, 0xaf, 0xd4, 0xcf, 0xc1, 0x44, 0xbb, 0x69, 0xd9, 0x9b, 0x2d, 0xc3, 0x32, 0x1a,
	0xa6, 0x6d, 0x5a, 0x33, 0x43, 0x6e, 0x6b, 0xe3, 0x4e, 0xe9, 0x1a, 0x29, 0xf4, 0xc8, 0xaa, 0x35,
	0xcb, 0xac, 0xb8, 0x0b, 0x93, 0xbc, 0x4f, 0xb6, 0x44, 0x0a, 0x35, 0x1b, 0x0e, 0x7a, 0xd2, 0xb7,
	0x5b, 0xcd, 0x9d, 0xb6, 0xa9, 0x5e, 0x86, 0x5c, 0xd5, 0xb0, 0x0d, 0xe9, 0xba, 0xcb, 0x7f, 0x09,
	0xd3, 0x5d, 0x62, 0x55, 0x85, 0x5c, 0xa5, 0x59, 0x35, 0x5d, 0xcd, 0xb2, 0xba, 0xfb, 0x5f, 0x9d,
	0x81, 0xe1, 0x86, 0xd9, 0x6e, 0x1b, 0x5b, 0xa6, 0xab, 0xd9, 0x88, 0x4e, 0x2e, 0xb5, 0x1d, 0x28,
	0x2e, 0x5a, 0xa6, 0x61, 0x9b, 0xce, 0xdb, 0x19, 0x46, 0x2d, 0xc1, 0x6b, 0x20, 0x85, 0x70, 0x46,
	0x80, 0x70, 0x96, 0x46, 0x58, 0x6b, 0xc3, 0x21, 0x8a, 0x1f, 0xd6, 0xf3, 0x79, 0x46, 0xcf, 0xe3,
	0x22, 0x8e, 0x69, 0x94, 0xbc, 0xd3, 0xaa, 0xf6, 0x55, 0x49, 0x8a, 0x5f, 0x9f, 0x94, 0x5c, 0x83,
	0x09, 0xdd, 0x34, 0xaa, 0x94, 0x8a, 0x13, 0x90, 0xf1, 0x46, 0x7e, 0xa6, 0x56, 0x4d, 0xac, 0xc6,
	0xdb, 0x70, 0xd0, 0x6b, 0xb1, 0x4f, 0x4a, 0xe8, 0x50, 0x5c, 0x32, 0xeb, 0x26, 0xd3, 0x53, 0x69,
	0xd5, 0x28, 0xc1, 0x21, 0xaa, 0x4d, 0xac, 0x08, 0x11, 0x4b, 0xe1, 0x8b, 0x95, 0x61, 0xc5, 0xfa,
	0x6b, 0x05, 0x26, 0x4b, 0xf5, 0x3a, 0xd9, 0x30, 0xd8, 0x97, 0xf6, 0xe5, 0x3d, 0x98, 0x62, 0x55,
	0xc0, 0x48, 0x5c, 0x65, 0xba, 0xf4, 0x69, 0xe9, 0x4e, 0x49, 0x1a, 0x4b, 0xf3, 0xbe, 0x02, 0xd3,
	0xe8, 0xd1, 0xf7, 0xf6, 0x5d, 0x30, 0x8a, 0xdd, 0x6f, 0xff, 0x24, 0x1e, 0x0b, 0xef, 0xc2, 0xe1,
	0xa0, 0x0c, 0x18, 0x86, 0x17, 0x18, 0x18, 0x4e, 0x4b, 0x05, 0x48, 0x85, 0x01, 0xb2, 0x0c, 0x83,
	0xc5, 0x20, 0x28, 0x43, 0x3f, 0x31, 0xb8, 0x03, 0x93, 0x8e, 0x55, 0x09, 0x02, 0x90, 0xf6, 0x29,
	0xff, 0x06, 0x4c, 0xb1, 0xcd, 0xf6, 0x53, 0xa7, 0x7b, 0x30, 0x8d, 0x4c, 0x4c, 0xaf, 0xb5, 0xba,
	0x01, 0x87, 0x83, 0x0d, 0x77, 0x65, 0xc0, 0x7e, 0xaa, 0xc0, 0xa1, 0x52, 0xbd, 0x8e, 0xb6, 0x18,
	0xf7, 0xa5, 0xf9, 0x7a, 0x07, 0x54, 0x5a, 0x01, 0x8c, 0xc2, 0x8b, 0x4c, 0xef, 0x6a, 0x92, 0x7d,
	0xd5, 0x34, 0xa6, 0xeb, 0x1d, 0x98, 0x44, 0x56, 0x03, 0x6f, 0xd1, 0x62, 0xf8, 0xba, 0xd9, 0x1d,
	0x4e, 0x3c, 0x02, 0x76, 0x61, 0x8a, 0xe5, 0x9d, 0x60, 0x6d, 0xe8, 0xef, 0x64, 0x77, 0xab, 0x36,
	0x32, 0x14, 0x83, 0x51, 0x9b, 0xe5, 0xdd, 0x3f, 0xb5, 0xd7, 0xe1, 0x90, 0x63, 0x49, 0x58, 0xa5,
	0xd3, 0x3e, 0xc8, 0x8f, 0x41, 0xa5, 0x1b, 0xed, 0x9f, 0x36, 0x77, 0x60, 0x12, 0x59, 0x90, 0xde,
	0xea, 0xb3, 0x04, 0x53, 0x6c, 0xb3, 0x69, 0xd6, 0x55, 0xe4, 0x88, 0x61, 0x1f, 0xaf, 0xab, 0x28,
	0x15, 0x12, 0xac, 0xab, 0x02, 0x87, 0x32, 0x29, 0xd7, 0x55, 0xde, 0x49, 0x8d, 0xbf, 0xa6, 0xe8,
	0xf2, 0xc0, 0xa8, 0xfb, 0x75, 0x95, 0x2f, 0x43, 0x82, 0xf9, 0x97, 0x3e, 0xe6, 0x4a, 0xb9, 0xae,
	0x1a, 0x2c, 0x06, 0x41, 0x19, 0xfa, 0x89, 0x01, 0x5e, 0x57, 0x05, 0x01, 0xe8, 0xd1, 0xba, 0x6a,
	0x30, 0x3a, 0x79, 0xeb, 0xaa, 0x5e, 0x6b, 0xe5, 0xad, 0xab, 0x42, 0x7a, 0x75, 0xb5, 0xae, 0x42,
	0x87, 0x92, 0xfb, 0x78, 0x5d, 0xe5, 0x29, 0x90, 0x60, 0x5d, 0xc5, 0x1c, 0xdf, 0xa6, 0x5b, 0x57,
	0xe1, 0x43, 0x5d, 0x7f, 0x81, 0x91, 0xf8, 0x3c, 0xb9, 0xfb, 0x75, 0x15, 0xe1, 0x9d, 0x60, 0x4a,
	0xf6, 0xcf, 0xbe, 0xd3, 0xad, 0xab, 0x06, 0xa3, 0x36, 0xcb, 0xbb, 0x7f, 0x6a, 0xe3, 0x75, 0x15,
	0xab, 0x74, 0x8f, 0xd6, 0x55, 0xfd, 0xd7, 0xc6, 0x5b, 0x57, 0xf5, 0x56, 0x1f, 0x6f, 0x5d, 0x15,
	0xd0, 0x28, 0x99, 0x59, 0xfa, 0x77, 0x05, 0x26, 0x6f, 0xd4, 0xea, 0xb6, 0x69, 0xb1, 0xd2, 0x9d,
	0xe1, 0x9e, 0x01, 0x8f, 0x04, 0xcf, 0x77, 0x93, 0x4a, 0xed, 0x1b, 0xb0, 0x1c, 0xdf, 0x80, 0x0d,
	0x45, 0x18, 0xb0, 0x7c, 0x3c, 0x03, 0x36, 0xcc, 0x33, 0x60, 0xdf, 0x84, 0x29, 0x56, 0xd5, 0xbe,
	0x9a, 0x30, 0x32, 0x01, 0x20, 0x17, 0x90, 0x7d, 0x3c, 0x01, 0x10, 0x05, 0x92, 0xa0, 0x47, 0x3b,
	0xcd, 0xa4, 0x9c, 0x00, 0x90, 0x2b, 0x0d, 0x65, 0x09, 0x93, 0x7a, 0xf1, 0xa4, 0x98, 0x00, 0x30,
	0xef, 0x24, 0xb6, 0xc3, 0xf3, 0x38, 0x4a, 0x39, 0x01, 0x0c, 0x44, 0x6d, 0x96, 0x77, 0xff, 0xd4,
	0x26, 0x13, 0x00, 0xa3, 0x74, 0xaf, 0x26, 0x80, 0xbe, 0x6b, 0xe3, 0x4f, 0x00, 0x3d, 0xd5, 0xc7,
	0x9f, 0x00, 0x58, 0x8d, 0x92, 0x4d, 0x00, 0xff, 0xa8, 0xc0, 0x89, 0x52, 0xbd, 0x1e, 0x74, 0x6c,
	0xa9, 0xed, 0x4f, 0x13, 0xf5, 0xb1, 0x02, 0x27, 0x45, 0xda, 0x60, 0x78, 0x4a, 0x4c, 0x87, 0x9f,
	0x8f, 0xe9, 0xe6, 0x93, 0xc2, 0x74, 0x7d, 0xaa, 0xc0, 0x49, 0x64, 0x3f, 0xc2, 0x3e, 0x75, 0x18,
	0xe2, 0x1e, 0xb8, 0xfd, 0x25, 0x1e, 0x3e, 0x1f, 0x29, 0x70, 0x4a, 0x28, 0x16, 0xc6, 0xea, 0x4b,
	0x0c, 0x56, 0xf3, 0xf1, 0x64, 0x4a, 0x05, 0x14, 0xb2, 0x38, 0x4f, 0x1c, 0x50, 0x42, 0xb1, 0x06,
	0x02, 0xd4, 0x9b, 0x70, 0xdc, 0xb1, 0x64, 0x42, 0x94, 0xd2, 0x5a, 0x96, 0x1f, 0x28, 0x70, 0x42,
	0xc0, 0x60, 0x20, 0xfa, 0xbe, 0x05, 0x27, 0x91, 0xa5, 0xdb, 0x33, 0x8d, 0x6f, 0xc3, 0x29, 0x21,
	0x87, 0xae, 0xcc, 0xea, 0xbf, 0x2a, 0x70, 0x12, 0x2d, 0x36, 0x85, 0x32, 0xcf, 0xb0, 0x6e, 0xcc,
	0x23, 0x9e, 0xa7, 0xf2, 0xbe, 0x5a, 0x54, 0x7f, 0xa2, 0xc0, 0x29, 0xa1, 0xa2, 0x83, 0x32, 0xb9,
	0x3f, 0x53, 0x60, 0xba, 0x54, 0xaf, 0xfb, 0x2e, 0xc1, 0xfb, 0x72, 0x32, 0x7b, 0x5f, 0x81, 0xc3,
	0x41, 0x2d, 0x30, 0xa2, 0x2f, 0x31, 0x88, 0x9e, 0x89, 0x70, 0x88, 0x4e, 0x03, 0xe5, 0xf7, 0x15,
	0x38, 0x82, 0xa6, 0x09, 0xca, 0xc1, 0x1a, 0x83, 0x99, 0xd6, 0xe7, 0x3b, 0xf1, 0x63, 0xfa, 0x6d,
	0x05, 0x66, 0xc2, 0xc2, 0x60, 0x4c, 0x3e, 0xcf, 0x60, 0xf2, 0x54, 0x84, 0x1c, 0xa9, 0x00, 0x41,
	0xd3, 0xc1, 0x13, 0x02, 0x48, 0x58, 0x98, 0xfe, 0x02, 0x72, 0x0f, 0xa6, 0x9d, 0xc9, 0x22, 0x8c,
	0x46, 0x5a, 0xa3, 0xfc, 0x2d, 0x38, 0x1c, 0x6c, 0xb8, 0xbf, 0x9a, 0xbd, 0x06, 0x47, 0xd0, 0xac,
	0xd0, 0x7b, 0xdd, 0x6e, 0xc2, 0x4c, 0xb8, 0xe9, 0xae, 0x66, 0x9a, 0xbf, 0x55, 0xe0, 0x48, 0xa9,
	0x5e, 0xa7, 0xbf, 0x23, 0xd8, 0x97, 0xd6, 0xee, 0xbb, 0x0a, 0xcc, 0x84, 0xf5, 0xc0, 0x90, 0xfc,
	0x3f, 0xa6, 0xc3, 0xcf, 0x45, 0x7e, 0x49, 0x91, 0xc6, 0xe2, 0x7d, 0xa2, 0xc0, 0x51, 0x64, 0x64,
	0x98, 0x6f, 0x33, 0x30, 0xa4, 0xbd, 0xf9, 0x74, 0x24, 0xf1, 0x78, 0xf9, 0x15, 0x05, 0x66, 0x79,
	0x42, 0x61, 0x7c, 0xae, 0x31, 0xf8, 0x7c, 0x2e, 0x52, 0x9a, 0x54, 0xe0, 0x20, 0x83, 0xf3, 0x84,
	0x81, 0xc3, 0x13, 0xaa, 0xdf, 0xe0, 0xbc, 0x06, 0x47, 0x1c, 0x83, 0xc5, 0x43, 0x26, 0xad, 0xbd,
	0xf8, 0x40, 0x81, 0x99, 0x70, 0xdb, 0xfd, 0x56, 0xf0, 0xab, 0x70, 0x14, 0x59, 0xad, 0xbd, 0x50,
	0xf1, 0x55, 0x98, 0xe5, 0x35, 0xde, 0x95, 0x51, 0xfc, 0x3b, 0x64, 0x4c, 0x98, 0x6f, 0x93, 0xf6,
	0xa5, 0x55, 0xfc, 0x55, 0x05, 0x8e, 0x72, 0x14, 0xc1, 0xa0, 0x7c, 0x91, 0xe9, 0xf8, 0x67, 0xa2,
	0xbf, 0xcf, 0x4a, 0x63, 0x17, 0x7f, 0xec, 0x99, 0x20, 0xf6, 0x93, 0x2f, 0x8c, 0x6a, 0xcf, 0xbe,
	0x4b, 0x4b, 0x3c, 0x70, 0xbe, 0xa7, 0xc0, 0x31, 0xae, 0x60, 0x09, 0x16, 0xcb, 0xa1, 0xef, 0xec,
	0xba, 0x86, 0x08, 0x19, 0xa2, 0x27, 0x10, 0x22, 0xae, 0x60, 0x7d, 0x87, 0xe8, 0x31, 0xb2, 0x63,
	0x5c, 0x7c, 0x52, 0x5a, 0x10, 0xf5, 0x18, 0x8c, 0xec, 0x18, 0x0d, 0x73, 0xb3, 0x5d, 0xef, 0x6c,
	0xb9, 0x4f, 0xe5, 0x88, 0x5e, 0x70, 0x0a, 0xd6, 0xeb, 0x9d, 0x2d, 0x67, 0x92, 0x38, 0xca, 0xe1,
	0xdc, 0x77, 0x00, 0xde, 0x20, 0x66, 0x6e, 0x2f, 0x20, 0xd0, 0xbe, 0x0c, 0xc7, 0xb8, 0xad, 0x77,
	0x65, 0x45, 0xff, 0x45, 0x81, 0x59, 0xf4, 0x6e, 0xcf, 0x95, 0xf5, 0xb3, 0xb1, 0x81, 0xf1, 0x7d,
	0x05, 0x8e, 0x71, 0x95, 0x1c, 0x84, 0x8d, 0xfd, 0xb9, 0x02, 0xa7, 0x38, 0xfb, 0xd7, 0xee, 0x07,
	0xa5, 0xfb, 0x71, 0xfa, 0xfa, 0xb1, 0x02, 0x73, 0x62, 0x7d, 0x30, 0xc2, 0x4b, 0x0c, 0xc2, 0xcf,
	0xc7, 0xfe, 0xf0, 0x36, 0x0d, 0xd0, 0x7f, 0xaa, 0xc0, 0x69, 0xc1, 0xee, 0x77, 0xa9, 0xe6, 0x39,
	0x65, 0xef, 0xed, 0x17, 0xca, 0x89, 0x1f, 0xee, 0x1f, 0x29, 0xa0, 0xc9, 0x84, 0x4e, 0xb5, 0xdd,
	0x56, 0x6b, 0xa4, 0x02, 0x53, 0xb0, 0x43, 0xfe, 0x64, 0x83, 0x29, 0x13, 0x7a, 0x50, 0x60, 0x1a,
	0x70, 0x8a, 0xbb, 0xf7, 0x4e, 0x21, 0x99, 0x76, 0x92, 0xf8, 0xa1, 0x02, 0x73, 0x62, 0x1e, 0x83,
	0x52, 0xbc, 0x02, 0xa7, 0x05, 0x7b, 0xf0, 0x3d, 0x54, 0x5d, 0x07, 0x4d, 0xc6, 0xa4, 0xab, 0x69,
	0xf2, 0x17, 0x0a, 0x9c, 0x2e, 0xd5, 0xeb, 0x8b, 0xfc, 0x2f, 0xe0, 0xf7, 0xa3, 0xd9, 0xfe, 0x6d,
	0x05, 0x34, 0x99, 0x46, 0x18, 0xa6, 0x32, 0x33, 0x44, 0x2e, 0xc6, 0x0f, 0x17, 0x90, 0xc6, 0x72,
	0xff, 0xb9, 0x67, 0x04, 0xf9, 0x91, 0x08, 0x30, 0xdc, 0x7b, 0x1e, 0x60, 0x21, 0xf1, 0xd0, 0xfb,
	0x2d, 0x05, 0x9e, 0x92, 0x0a, 0x8e, 0x51, 0xbd, 0xce, 0xa0, 0xba, 0x10, 0x5f, 0xd0, 0x54, 0x90,
	0x22, 0x53, 0xb8, 0x0f, 0x21, 0x95, 0x0a, 0x3e, 0x30, 0x48, 0xef, 0x23, 0x0b, 0x2b, 0xc5, 0x33,
	0xad, 0x2d, 0xfb, 0x91, 0x02, 0xa7, 0x25, 0x4c, 0x06, 0xa6, 0x7b, 0x95, 0xd8, 0xd8, 0x3d, 0xd5,
	0x7e, 0x1d, 0x9e, 0x92, 0x72, 0xe9, 0xca, 0x94, 0xff, 0xbd, 0x02, 0xc7, 0x7c, 0xc3, 0xb7, 0xbf,
	0x8d, 0xf8, 0x0f, 0x14, 0x38, 0xce, 0xd7, 0x05, 0x43, 0xf3, 0x32, 0x33, 0x32, 0x9e, 0x8d, 0x13,
	0x0c, 0x25, 0x8d, 0xe1, 0xfe, 0x5d, 0x05, 0x8e, 0x33, 0xf6, 0x2f, 0x38, 0x22, 0x7a, 0x1c, 0x13,
	0x26, 0xf1, 0x88, 0xfa, 0x35, 0x05, 0x4e, 0x08, 0x04, 0x4c, 0x70, 0x0c, 0xc1, 0x89, 0x76, 0xd3,
	0x35, 0x5c, 0x8c, 0x6d, 0x7b, 0x12, 0xe1, 0x12, 0x08, 0x38, 0x00, 0xb8, 0xde, 0x80, 0x59, 0xca,
	0x16, 0xf6, 0xda, 0xd8, 0x7c, 0xa8, 0xc0, 0x31, 0x6e, 0xf3, 0x03, 0xd0, 0xf4, 0x4d, 0x38, 0xce,
	0x18, 0xbe, 0x5e, 0xeb, 0x7a, 0x0b, 0x4e, 0x08, 0xda, 0xef, 0xca, 0xa4, 0xfe, 0x0d, 0xf2, 0x62,
	0xa0, 0x63, 0xbf, 0xec, 0x47, 0x6b, 0xfa, 0x1d, 0x74, 0xcc, 0xca, 0xaa, 0x81, 0x01, 0xf9, 0x02,
	0xd3, 0xfb, 0x67, 0xa3, 0x22, 0x33, 0xa5, 0x31, 0xa2, 0xbf, 0xe1, 0x79, 0x40, 0xd0, 0x01, 0x76,
	0x3c, 0xef, 0xb8, 0xd4, 0x31, 0xa8, 0xba, 0x39, 0x98, 0x3a, 0xca, 0x11, 0x28, 0xc1, 0xa7, 0x8d,
	0x81, 0x48, 0x47, 0x5d, 0xc3, 0xc2, 0xd8, 0xa2, 0x27, 0x01, 0x16, 0x8e, 0x40, 0x7d, 0x86, 0xe5,
	0x2b, 0xc8, 0x83, 0x82, 0x83, 0x49, 0x5a, 0x23, 0xf1, 0x6d, 0x05, 0x9d, 0x75, 0x0e, 0x52, 0xbb,
	0xd7, 0x89, 0x0f, 0xc5, 0x1e, 0xe8, 0xb7, 0x4c, 0x4e, 0x3a, 0x79, 0x0a, 0x26, 0x33, 0x80, 0xff,
	0xc0, 0xac, 0xc3, 0xa8, 0x80, 0x65, 0xfb, 0xd1, 0x0c, 0xfe, 0x26, 0x72, 0x17, 0xe7, 0x29, 0x93,
	0x60, 0xdf, 0x48, 0x14, 0x1a, 0xae, 0xab, 0x61, 0xf0, 0x87, 0x9e, 0x7f, 0x75, 0x38, 0x4c, 0x1c,
	0x46, 0x78, 0x4f, 0x62, 0xdc, 0xa5, 0xf0, 0xb8, 0xe6, 0x08, 0x9a, 0xc0, 0xb1, 0x96, 0x1b, 0xc7,
	0xaf, 0x6b, 0xe8, 0x18, 0x2b, 0xf5, 0x24, 0x43, 0x27, 0x14, 0x74, 0x20, 0xd0, 0x61, 0x1f, 0x6c,
	0x21, 0x6e, 0xbd, 0xf2, 0xc1, 0x7e, 0x52, 0xf4, 0xf5, 0x7c, 0xb0, 0xf7, 0x4c, 0x63, 0xcf, 0x07,
	0x5b, 0xac, 0x72, 0x57, 0x4e, 0x20, 0x4c, 0xc4, 0xc5, 0xfd, 0xec, 0x04, 0x12, 0x54, 0x24, 0xc1,
	0x01, 0x25, 0x2f, 0x70, 0x65, 0x4a, 0x27, 0x10, 0x36, 0x90, 0xa5, 0xef, 0xe1, 0xd0, 0x9b, 0x68,
	0x9b, 0x29, 0x9c, 0x40, 0x02, 0x82, 0x25, 0x38, 0xe0, 0x0f, 0x45, 0x0f, 0x4d, 0xe9, 0x04, 0xf2,
	0x04, 0x42, 0xc4, 0x15, 0xac, 0xef, 0x10, 0xbd, 0x8e, 0x9c, 0x40, 0xb8, 0xf8, 0xa4, 0x35, 0x23,
	0xc4, 0xcf, 0x63, 0xd0, 0x3a, 0x7a, 0x7e, 0x1e, 0x7b, 0xa2, 0xa5, 0xe7, 0xe7, 0xc1, 0x57, 0x33,
	0x99, 0xa1, 0x7c, 0x3f, 0x43, 0xfc, 0x3c, 0xb8, 0xb2, 0xee, 0xad, 0xa9, 0x3c, 0xec, 0x7d, 0xcb,
	0x3a, 0xe4, 0x3a, 0x91, 0x90, 0xcf, 0x55, 0xe7, 0x60, 0x14, 0x87, 0x8d, 0x75, 0x97, 0x1c, 0xf9,
	0xb9, 0xec, 0xb9, 0xac, 0x4e, 0x17, 0x71, 0x8c, 0xec, 0x70, 0x3c, 0x23, 0x5b, 0x90, 0xfb, 0x81,
	0xf0, 0x21, 0xed, 0xab, 0x99, 0xc5, 0x5f, 0x65, 0x86, 0x63, 0xe9, 0xee, 0xcb, 0xf9, 0xeb, 0x13,
	0xf4, 0x55, 0x26, 0x57, 0x9b, 0x04, 0xa7, 0x14, 0xc2, 0x30, 0xc5, 0x5d, 0x41, 0xfc, 0x13, 0x6f,
	0x35, 0xce, 0x89, 0x58, 0x8c, 0x41, 0xde, 0xab, 0xa0, 0xcb, 0x89, 0x1f, 0xf7, 0x8f, 0x15, 0x98,
	0x13, 0x0b, 0x9b, 0x60, 0x3f, 0x9f, 0x1f, 0x5d, 0xba, 0x6b, 0x00, 0x89, 0x4f, 0xe1, 0xbe, 0x00,
	0x50, 0x2c, 0xec, 0x60, 0x00, 0xdc, 0x44, 0x2b, 0x7c, 0x31, 0x7a, 0x69, 0x27, 0x89, 0x8f, 0x14,
	0x38, 0x29, 0xe2, 0x30, 0x18, 0x95, 0x0d, 0xb2, 0xc6, 0xdf, 0x3b, 0xa5, 0xd7, 0x60, 0x4e, 0xcc,
	0xa2, 0xab, 0xe9, 0xf1, 0x7f, 0xbc, 0x4f, 0x1c, 0xc5, 0x52, 0xef, 0xb9, 0x39, 0x46, 0xb3, 0xe2,
	0x26, 0x7e, 0x14, 0xf0, 0x5c, 0x19, 0x58, 0x10, 0xf6, 0xd6, 0x31, 0xf2, 0x53, 0x05, 0xe6, 0xc4,
	0x6a, 0x0f, 0xcc, 0x6e, 0x5f, 0x27, 0x71, 0xc1, 0xdd, 0x88, 0xee, 0x18, 0xfe, 0x84, 0x01, 0xe4,
	0x3b, 0xa0, 0xd2, 0x6d, 0x60, 0x5d, 0x2e, 0x32, 0xba, 0x9c, 0x10, 0x36, 0x92, 0x46, 0x74, 0x64,
	0x83, 0xd2, 0x89, 0x4e, 0xb7, 0xd1, 0x2f, 0xd1, 0xaf, 0xa2, 0x45, 0xb5, 0xd3, 0xc6, 0xf5, 0xdd,
	0x55, 0xa3, 0x61, 0xb6, 0xeb, 0x9d, 0x2d, 0xa2, 0x02, 0xe3, 0x77, 0xad, 0x04, 0xfc, 0xae, 0xdf,
	0x45, 0x07, 0x73, 0xc1, 0x9a, 0xfd, 0x12, 0xfc, 0x2d, 0x18, 0xbf, 0xd3, 0xaa, 0x37, 0x0d, 0xcf,
	0x6b, 0xf9, 0x14, 0x8c, 0x76, 0xdc, 0x82, 0xcd, 0x07, 0x35, 0x0c, 0xfb, 0x88, 0x0e, 0xa8, 0xe8,
	0x46, 0xad, 0x8b, 0x38, 0x29, 0x5f, 0x82, 0x09, 0xc2, 0xa1, 0x2b, 0xf3, 0x52, 0x86, 0xd1, 0x75,
	0xd3, 0xbe, 0x6f, 0x54, 0x1e, 0xba, 0xd9, 0x0c, 0x5e, 0x84, 0xe1, 0x36, 0xba, 0x94, 0xc6, 0x4e,
	0xc7, 0x55, 0x74, 0x42, 0xac, 0xbd, 0x0a, 0x13, 0xb8, 0x8c, 0xe4, 0x45, 0xb8, 0x0a, 0x05, 0x7c,
	0x93, 0xa4, 0x46, 0x90, 0x37, 0xe5, 0x51, 0x6b, 0x7f, 0xa5, 0xb8, 0xa1, 0x7e, 0xf0, 0x8d, 0x7d,
	0xb9, 0xe6, 0xfc, 0xa6, 0x1b, 0x2f, 0xd4, 0xd7, 0x20, 0xc9, 0x97, 0xa3, 0x0c, 0x8c, 0x5d, 0x8d,
	0xba, 0xf7, 0x48, 0xc8, 0x20, 0x82, 0x2d, 0x46, 0xb0, 0xcb, 0xce, 0xed, 0x22, 0x16, 0xe3, 0x74,
	0x80, 0x3f, 0xd6, 0xff, 0x0a, 0xa3, 0xff, 0x9c, 0x8c, 0x7b, 0x1a, 0xe5, 0xf1, 0x37, 0xc9, 0x03,
	0x53, 0x3e, 0xc0, 0xbf, 0x8f, 0xca, 0x6f, 0xa0, 0x28, 0x43, 0x01, 0xd5, 0xd3, 0x2e, 0x6a, 0x76,
	0x51, 0xc8, 0xce, 0x41, 0x28, 0x74, 0x97, 0x84, 0x19, 0xea, 0xb1, 0x4a, 0x65, 0x12, 0xb1, 0x33,
	0xa8, 0x54, 0x32, 0xeb, 0x79, 0x15, 0xe6, 0x4a, 0x1d, 0xbb, 0x59, 0x69, 0x36, 0x5a, 0x54, 0x63,
	0xeb, 0xa6, 0x61, 0x55, 0xb6, 0x89, 0xa8, 0x53, 0x30, 0x64, 0xd7, 0x6c, 0xcf, 0xd8, 0xa3, 0x0b,
	0xed, 0x0a, 0xfa, 0x6e, 0x3d, 0xe1, 0x74, 0xf6, 0x17, 0x19, 0xc8, 0x96, 0x5a, 0xad, 0x90, 0xfa,
	0x2a, 0xe4, 0x1c, 0x1a, 0x2c, 0x9e, 0xfb, 0xdf, 0x91, 0xba, 0xdd, 0x69, 0x34, 0x0c, 0x6b, 0x97,
	0x80, 0x8a, 0x2f, 0xd5, 0x39, 0x18, 0xad, 0x9a, 0xed, 0x8a, 0x55, 0x6b, 0xb9, 0x16, 0x0c, 0x7d,
	0xab, 0x44, 0x17, 0x39, 0x42, 0xd4, 0x2a, 0xcd, 0x1d, 0x24, 0x04, 0x32, 0x84, 0x05, 0xa7, 0xc0,
	0x11, 0xc2, 0x69, 0xb8, 0xe2, 0x3e, 0xde, 0x55, 0xd7, 0xf8, 0x65, 0x75, 0x72, 0xe9, 0xdc, 0xe9,
	0xb8, 0x63, 0xbf, 0xea, 0x2e, 0xea, 0xb2, 0x3a, 0xb9, 0x74, 0x40, 0xa8, 0x35, 0x1c, 0x00, 0xd1,
	0xee, 0x07, 0xba, 0x70, 0xc4, 0xb6, 0x8d, 0xad, 0xf6, 0xcc, 0x88, 0xbb, 0x9e, 0x74, 0xff, 0xb3,
	0x69, 0x31, 0x21, 0x59, 0x5a, 0x4c, 0x16, 0xbc, 0xd1, 0x00, 0x78, 0x7f, 0xa2, 0x40, 0x81, 0x54,
	0x8a, 0x85, 0x20, 0xd3, 0x5a, 0x96, 0x6d, 0x8d, 0x85, 0x28, 0x17, 0x80, 0xa8, 0x08, 0xd9, 0x8e,
	0x55, 0xc7, 0xc8, 0x39, 0x7f, 0xbb, 0x01, 0x4d, 0xfb, 0x34, 0x03, 0x05, 0x12, 0xf8, 0xf5, 0xb3,
	0xd2, 0xe5, 0x18, 0x99, 0x11, 0x1f, 0x19, 0x32, 0x08, 0x80, 0x1a, 0x04, 0xd2, 0x7e, 0xfc, 0x24,
	0x03, 0x79, 0x14, 0xce, 0xfb, 0xff, 0x40, 0xf1, 0x40, 0xf9, 0x8f, 0x2c, 0xe4, 0x51, 0x98, 0xc8,
	0xc1, 0x82, 0xe2, 0x1b, 0xe2, 0x3c, 0x6d, 0x88, 0x29, 0xac, 0x86, 0x85, 0x58, 0x15, 0x58, 0xac,
	0x54, 0xc8, 0x75, 0x76, 0x6a, 0x36, 0xb1, 0x0e, 0xce, 0x7f, 0x2f, 0x81, 0x2f, 0xc4, 0x49, 0xe0,
	0xcb, 0x26, 0x8f, 0x1d, 0x4d, 0x96, 0x3c, 0x96, 0x4e, 0x87, 0x3b, 0x16, 0x3f, 0x1d, 0x2e, 0x27,
	0x7f, 0xe5, 0x78, 0xb7, 0xf9, 0x2b, 0xd9, 0x1e, 0x9f, 0x08, 0xf4, 0xf8, 0x1f, 0x67, 0x20, 0x8f,
	0xb6, 0x7c, 0x07, 0xdb, 0xe3, 0x8c, 0x90, 0xf9, 0x80, 0x95, 0xec, 0xa6, 0xdf, 0x67, 0xdd, 0x37,
	0x07, 0xbb, 0xb6, 0xe3, 0xce, 0x0c, 0x6e, 0x7b, 0xe4, 0x5a, 0x3d, 0x0d, 0x63, 0xd5, 0x5a, 0xbb,
	0x55, 0x37, 0x76, 0x37, 0x5d, 0x0d, 0x01, 0x0b, 0x8b, 0xca, 0x9c, 0xb9, 0xd4, 0x51, 0xbe, 0x65,
	0xd8, 0xdb, 0xf8, 0x09, 0x71, 0xff, 0x6b, 0x15, 0xc8, 0xa3, 0x50, 0x27, 0xea, 0x65, 0xc8, 0xd9,
	0x09, 0xc2, 0xe3, 0xb8, 0xc4, 0xea, 0xd3, 0x30, 0x5e, 0xe9, 0xb4, 0xed, 0x66, 0xe3, 0x16, 0xb3,
	0x0c, 0x60, 0x0b, 0xb5, 0x1f, 0x2a, 0x00, 0x7e, 0xd5, 0x58, 0x9d, 0x82, 0x1f, 0xfc, 0xac, 0xff,
	0xe0, 0xcb, 0xbe, 0x22, 0xa6, 0xd1, 0x1c, 0x12, 0xa2, 0x99, 0x67, 0x27, 0x91, 0x7f, 0xcb, 0xc0,
	0x18, 0x1d, 0xd3, 0x20, 0x24, 0xd7, 0x31, 0x18, 0xc1, 0xdb, 0x3b, 0xde, 0xea, 0xa9, 0x80, 0x0a,
	0x96, 0x7d, 0xa1, 0xb3, 0x94, 0xd0, 0xd1, 0xe3, 0xe5, 0x65, 0xc8, 0xdb, 0x86, 0xb5, 0x85, 0xbf,
	0x9d, 0x9d, 0x10, 0x6c, 0xb6, 0xd2, 0x52, 0x6d, 0xb8, 0xe4, 0x3a, 0xae, 0x26, 0x1f, 0x53, 0xcc,
	0x68, 0x1c, 0x16, 0x1b, 0xe5, 0x82, 0x10, 0xa2, 0x11, 0x76, 0xc0, 0x5d, 0x82, 0xa9, 0x1d, 0x26,
	0xea, 0x43, 0xa3, 0xb6, 0x53, 0x35, 0x2d, 0x77, 0x70, 0x65, 0x75, 0xee, 0x3d, 0xcf, 0x38, 0xe1,
	0x51, 0xe6, 0xfc, 0xd7, 0x7e, 0x5f, 0x81, 0x71, 0xe6, 0x81, 0xde, 0xe3, 0x55, 0x46, 0x37, 0xc3,
	0xe1, 0x8f, 0x14, 0x98, 0xe2, 0x7d, 0x7d, 0xf6, 0x04, 0x8a, 0xfa, 0x67, 0x59, 0x38, 0x14, 0x12,
	0xf5, 0xb3, 0x34, 0xbb, 0x85, 0xd6, 0xbe, 0x5f, 0x84, 0x9c, 0x51, 0xf3, 0x96, 0xbd, 0x09, 0x3e,
	0x4a, 0x75, 0xab, 0xa9, 0x25, 0x18, 0x47, 0xdf, 0xc0, 0x2f, 0x99, 0x0f, 0x8c, 0x4e, 0x1d, 0x0d,
	0xce, 0x88, 0x00, 0xed, 0x6c, 0x0d, 0xbf, 0x89, 0xdb, 0x2d, 0x94, 0x3d, 0x7a, 0x2c, 0x3a, 0xc7,
	0x39, 0x5b, 0x43, 0xfb, 0x6f, 0xc5, 0x4b, 0xf6, 0x1a, 0xf8, 0xc0, 0xea, 0x33, 0xdc, 0x75, 0xda,
	0x3f, 0x65, 0xbd, 0xac, 0xbc, 0x89, 0xf4, 0x95, 0x3e, 0x52, 0x14, 0x18, 0x39, 0x29, 0x18, 0x43,
	0x11, 0x60, 0xe4, 0x85, 0x60, 0x0c, 0xd3, 0x60, 0x5c, 0x87, 0x7c, 0xcb, 0xed, 0xb2, 0x99, 0x42,
	0xe2, 0x1c, 0xcc, 0xb8, 0xa6, 0xb3, 0x6c, 0x32, 0x2a, 0x68, 0xec, 0x8c, 0x48, 0xc6, 0x4e, 0xc9,
	0xa5, 0xd1, 0x09, 0x2d, 0xdd, 0x0f, 0x20, 0xec, 0x87, 0x51, 0x7e, 0x3f, 0x8c, 0x51, 0x8f, 0x50,
	0x0f, 0x97, 0x5f, 0xda, 0xcf, 0x32, 0x90, 0x47, 0x72, 0xc6, 0xea, 0xca, 0x40, 0x9f, 0x64, 0x23,
	0xfa, 0x24, 0x68, 0x22, 0x4f, 0xc1, 0x28, 0x02, 0x83, 0x1e, 0xbf, 0x80, 0x8a, 0xfa, 0x61, 0x7c,
	0xae, 0x41, 0xbe, 0x81, 0x02, 0xc3, 0x80, 0x3b, 0x69, 0x9f, 0x96, 0xf4, 0x1b, 0x06, 0x0c, 0x57,
	0x90, 0xbf, 0x99, 0xfc, 0xb3, 0x02, 0x87, 0x42, 0x4e, 0x75, 0x3d, 0x02, 0x94, 0xd2, 0x3d, 0x27,
	0xd4, 0x7d, 0x88, 0xaf, 0x7b, 0x5e, 0xf4, 0x6a, 0x35, 0x2c, 0x9b, 0xd8, 0x0a, 0x6c, 0xaf, 0x69,
	0x1f, 0x64, 0x60, 0x94, 0x3e, 0x1a, 0xee, 0x8d, 0x5e, 0xcf, 0x79, 0x7e, 0xaf, 0x4e, 0xa3, 0xeb,
	0xb6, 0x55, 0xdb, 0x21, 0x03, 0x26, 0x7c, 0xa3, 0x9b, 0xc9, 0xd5, 0x43, 0x61, 0x58, 0x84, 0x42,
	0x41, 0x86, 0xc2, 0x48, 0x00, 0x85, 0x9f, 0xe4, 0x60, 0x9c, 0x71, 0x3f, 0xd9, 0x7f, 0x6f, 0xe6,
	0x57, 0xf0, 0x8b, 0x41, 0xc1, 0x1d, 0xfc, 0x73, 0xb2, 0xb3, 0x44, 0xea, 0xcd, 0xc0, 0x8f, 0x85,
	0x3f, 0x12, 0x3f, 0x16, 0xfe, 0x35, 0xc8, 0x9b, 0x8f, 0xcc, 0x1d, 0x9b, 0x4c, 0xf4, 0xa7, 0x65,
	0xcc, 0xca, 0x0e, 0xa5, 0x8e, 0x2b, 0x38, 0xef, 0x46, 0xd5, 0x8e, 0x85, 0xe2, 0xdb, 0x8d, 0xba,
	0x5d, 0xe7, 0x5d, 0xab, 0x53, 0x30, 0x54, 0x35, 0xeb, 0xc6, 0xee, 0xcc, 0x18, 0x32, 0x0f, 0xee,
	0x85, 0xfa, 0xe5, 0x40, 0x02, 0xf7, 0xf1, 0x64, 0xd9, 0xb3, 0x99, 0xca, 0xea, 0x22, 0xb6, 0x51,
	0x38, 0x82, 0xd4, 0x44, 0x5c, 0x43, 0x41, 0xd7, 0xd2, 0xe6, 0xa0, 0xb0, 0x5e, 0xd9, 0x36, 0x5d,
	0x28, 0xa6, 0x60, 0x48, 0xd7, 0x3b, 0xfe, 0xe6, 0xa8, 0x7b, 0xa1, 0x7d, 0xa8, 0x80, 0x1a, 0x96,
	0xa5, 0x27, 0xf3, 0x69, 0x52, 0x73, 0xa1, 0xfd, 0x8e, 0x02, 0x63, 0x74, 0x57, 0xa4, 0x97, 0xc2,
	0xb7, 0xe3, 0x39, 0x81, 0x1d, 0x8f, 0xbd, 0x44, 0xfe, 0x79, 0x06, 0x86, 0x4b, 0xd5, 0xaa, 0x65,
	0xb6, 0xdb, 0xee, 0x13, 0x4d, 0xde, 0x6c, 0x47, 0xf0, 0xf0, 0x3c, 0x07, 0x07, 0x0d, 0x74, 0x7b,
	0xa5, 0x59, 0x31, 0xea, 0x35, 0x7b, 0x17, 0x8b, 0x19, 0x2c, 0x76, 0x5e, 0x71, 0x71, 0x91, 0x6e,
	0x6e, 0xf9, 0x56, 0x89, 0x2d, 0x54, 0x4f, 0x02, 0xb4, 0x9a, 0x6d, 0xdb, 0xa8, 0x2f, 0x36, 0xab,
	0x26, 0x16, 0x9f, 0x2a, 0x71, 0x5a, 0x69, 0xdb, 0x96, 0x69, 0xda, 0x58, 0x28, 0xef, 0x10, 0x8d,
	0x2e, 0x74, 0x06, 0x31, 0x6e, 0xf6, 0x22, 0x59, 0x99, 0x90, 0x6b, 0xea, 0xde, 0x25, 0x62, 0x88,
	0xc9, 0xb5, 0xbb, 0x37, 0xef, 0xa8, 0x80, 0x4c, 0x93, 0xfb, 0x5f, 0x3d, 0x0c, 0xf9, 0x4a, 0xb3,
	0xb3, 0x63, 0xef, 0x62, 0x9b, 0x84, 0xaf, 0x5c, 0x34, 0x9d, 0x7f, 0xd6, 0x2e, 0xde, 0x23, 0x20,
	0x97, 0x0e, 0x07, 0x47, 0x62, 0x77, 0x97, 0x1f, 0xcf, 0x55, 0xe4, 0x5a, 0xfb, 0x38, 0x03, 0x39,
	0xbd, 0xc9, 0xd9, 0x51, 0x11, 0x9c, 0x2f, 0x50, 0x7d, 0x96, 0x15, 0xf6, 0x59, 0x8e, 0x35, 0x34,
	0x94, 0xd5, 0x1b, 0x62, 0xad, 0x1e, 0x19, 0x49, 0x79, 0xd1, 0x48, 0x0a, 0xce, 0x4c, 0x01, 0x33,
	0x59, 0x08, 0x9b, 0xc9, 0x12, 0x8c, 0xb6, 0x4c, 0xab, 0x51, 0x6b, 0xb7, 0xbd, 0x15, 0xd9, 0x84,
	0x60, 0xd7, 0x63, 0xcd, 0xa3, 0xd3, 0xe9, 0x3a, 0xda, 0x3a, 0x4c, 0xd1, 0x67, 0x1c, 0xde, 0x49,
	0x49, 0x4c, 0x88, 0xbc, 0xe3, 0x8f, 0x2c, 0x7d, 0xfc, 0xf1, 0x5f, 0x0a, 0xe4, 0xd1, 0x3b, 0xbf,
	0xfa, 0x05, 0xc8, 0x1a, 0xdd, 0x04, 0xe2, 0x71, 0x6a, 0x51, 0xc9, 0xa8, 0x32, 0xf1, 0x93, 0x51,
	0xcd, 0xc1, 0x28, 0xda, 0x67, 0xb8, 0x6b, 0xd4, 0x3b, 0x26, 0xee, 0x1f, 0xba, 0xc8, 0x7b, 0xbb,
	0x1f, 0xf2, 0xdf, 0xee, 0xd5, 0x97, 0x01, 0x2c, 0xb3, 0xd2, 0xb1, 0x2c, 0x73, 0xa7, 0x82, 0x3c,
	0x42, 0x45, 0xfb, 0x47, 0xba, 0x47, 0xa6, 0x53, 0x55, 0x34, 0x0d, 0xc0, 0xbf, 0x23, 0xb0, 0x7c,
	0xbf, 0x97, 0x81, 0xc2, 0x86, 0xf1, 0xf5, 0xe6, 0x4e, 0xb3, 0x11, 0xef, 0xfd, 0xe1, 0x04, 0x40,
	0x7b, 0xbb, 0x69, 0xd9, 0x9b, 0xd4, 0x36, 0xcd, 0x88, 0x5b, 0xb2, 0x1a, 0x6f, 0xaf, 0xc6, 0xef,
	0xb6, 0x21, 0xc1, 0xc8, 0x8e, 0x3d, 0x85, 0x92, 0x35, 0x45, 0x81, 0x5a, 0x53, 0x1c, 0x86, 0xfc,
	0x63, 0xb3, 0xb6, 0xb5, 0x6d, 0xe3, 0x4d, 0x17, 0x7c, 0xe5, 0x3e, 0x85, 0x56, 0xad, 0x69, 0x39,
	0xcf, 0x33, 0x5a, 0xf0, 0x7b, 0xd7, 0xf2, 0xe5, 0xe4, 0x4f, 0xb3, 0x30, 0x19, 0x78, 0xd1, 0x5a,
	0xb6, 0xcd, 0x3e, 0xec, 0x5f, 0x08, 0x1e, 0xda, 0x00, 0xc2, 0x79, 0x19, 0xc2, 0xc3, 0x02, 0x84,
	0x63, 0xef, 0x54, 0xf1, 0x8e, 0x05, 0xae, 0x41, 0xc1, 0xc6, 0x23, 0x06, 0xbf, 0xf0, 0xf3, 0xf7,
	0xb8, 0xc9, 0xb0, 0xd2, 0x3d, 0x72, 0xaa, 0x73, 0xc6, 0x84, 0x9d, 0x33, 0x1e, 0xe8, 0x9c, 0xff,
	0x4f, 0x25, 0xc1, 0x98, 0x48, 0xf0, 0xc5, 0xbf, 0x57, 0x4b, 0xfb, 0x85, 0x02, 0xc3, 0xf8, 0xa4,
	0x34, 0xae, 0x11, 0xe1, 0x6d, 0x43, 0x76, 0xb3, 0xf6, 0x8f, 0xee, 0xac, 0xcb, 0x90, 0x37, 0x7c,
	0xb7, 0xb4, 0x88, 0xb7, 0x57, 0x4c, 0xaa, 0xfd, 0x41, 0xd6, 0xd5, 0xc8, 0x76, 0x16, 0xe3, 0x2f,
	0x03, 0x3c, 0xaa, 0xb5, 0x6b, 0xf7, 0x6b, 0xee, 0x6c, 0xab, 0xb8, 0x2b, 0x24, 0xbe, 0x99, 0xb8,
	0xeb, 0x91, 0xe9, 0x54, 0x15, 0xf5, 0x15, 0x18, 0xa7, 0x77, 0x1c, 0xdb, 0x33, 0x19, 0xc9, 0x22,
	0x91, 0x89, 0x56, 0xcb, 0xd6, 0x73, 0x54, 0x41, 0xc1, 0xdd, 0x67, 0xb2, 0x92, 0x17, 0x71, 0xb4,
	0x63, 0xad, 0x63, 0x52, 0x75, 0x01, 0xd4, 0x7a, 0x6d, 0xe7, 0xe1, 0xfa, 0xb6, 0xe1, 0xbc, 0x5a,
	0x94, 0x77, 0x8c, 0xfb, 0x75, 0x0c, 0x70, 0x41, 0xe7, 0xdc, 0x51, 0xe7, 0xa1, 0x68, 0x36, 0xee,
	0x9b, 0xd5, 0x2a, 0x45, 0x3d, 0xe4, 0x52, 0x87, 0xca, 0xdd, 0xd5, 0xc1, 0xb6, 0x61, 0x99, 0xce,
	0xd5, 0x4a, 0x6d, 0xe7, 0xa1, 0xe7, 0x3b, 0x43, 0x17, 0xaa, 0x2f, 0xc2, 0x61, 0xa3, 0x63, 0x6f,
	0x9b, 0x3b, 0x36, 0x15, 0xe2, 0xb7, 0x66, 0x61, 0x73, 0x53, 0xd0, 0x05, 0x77, 0x9d, 0xbe, 0x6d,
	0x6f, 0x37, 0x1f, 0x2f, 0x1a, 0x2d, 0xbb, 0xb2, 0x6d, 0xb8, 0xcf, 0x54, 0x41, 0xa7, 0x8b, 0xb4,
	0x47, 0x30, 0x74, 0xdd, 0xb0, 0x2b, 0xdb, 0xb1, 0x6c, 0x85, 0x3f, 0x12, 0xb3, 0x82, 0xa7, 0x36,
	0xf6, 0x12, 0xf2, 0x2c, 0x8c, 0x39, 0xa8, 0x99, 0xd5, 0x3b, 0x6d, 0xd3, 0x42, 0x5e, 0x09, 0x9d,
	0xb6, 0x69, 0xf9, 0xae, 0x4c, 0xf9, 0x8e, 0x7b, 0x63, 0xde, 0x00, 0x35, 0xbc, 0x29, 0xae, 0x1e,
	0x83, 0x23, 0xe1, 0xd2, 0xcd, 0xd5, 0xdb, 0xab, 0xe5, 0xe2, 0x01, 0x75, 0x0c, 0x0a, 0xa5, 0xb5,
	0xb5, 0xcd, 0x3b, 0xeb, 0x65, 0xbd, 0xa8, 0xa8, 0x07, 0x61, 0x74, 0xf5, 0xf6, 0xa6, 0x57, 0x90,
	0x71, 0x0a, 0x6e, 0x94, 0x16, 0x97, 0x57, 0x96, 0x37, 0x4a, 0x1b, 0xb7, 0xf5, 0x62, 0x76, 0xfe,
	0x2a, 0x8c, 0x52, 0x6f, 0x31, 0xea, 0x14, 0x14, 0xa9, 0x4b, 0xd2, 0xe8, 0x08, 0x0c, 0x95, 0xef,
	0x96, 0x57, 0x37, 0x8a, 0x8a, 0x5a, 0x80, 0xdc, 0xc6, 0xf2, 0xad, 0x72, 0x31, 0x33, 0xbf, 0x0a,
	0xe0, 0x2f, 0x11, 0xd4, 0x49, 0x38, 0xe8, 0x5f, 0x91, 0x7a, 0x05, 0xc8, 0xdd, 0x5d, 0x2e, 0xdf,
	0x2b, 0x2a, 0x2a, 0x40, 0x7e, 0x51, 0x2f, 0x97, 0x36, 0xca, 0xc5, 0x8c, 0xf3, 0x7f, 0xa9, 0xbc,
	0x52, 0xde, 0x28, 0x17, 0xb3, 0x4e, 0xcb, 0xb7, 0xef, 0xad, 0x96, 0xf5, 0x62, 0x6e, 0xfe, 0x1e,
	0x8c, 0xba, 0xa8, 0xac, 0xdb, 0x86, 0xdd, 0x69, 0x3b, 0x92, 0x50, 0x97, 0xa4, 0x45, 0x80, 0xfc,
	0xfa, 0xcd, 0x92, 0x5e, 0x5e, 0x2a, 0x2a, 0x8e, 0xaa, 0x7a, 0x79, 0xb1, 0xbc, 0x7c, 0xb7, 0xbc,
	0x84, 0x5a, 0x75, 0x78, 0x95, 0x97, 0x8a, 0x59, 0x17, 0x84, 0xc5, 0x8d, 0xe5, 0xdb, 0xab, 0xe5,
	0xa5, 0x62, 0x6e, 0xfe, 0x25, 0x00, 0xff, 0xd1, 0x72, 0x04, 0xf5, 0xaf, 0xa8, 0x66, 0xd7, 0xee,
	0x5c, 0x5f, 0x59, 0x5e, 0x2c, 0x2a, 0xea, 0x28, 0x0c, 0xaf, 0xe9, 0xcb, 0x77, 0x5d, 0x59, 0xe7,
	0x6b, 0x30, 0x46, 0xbf, 0xb8, 0xa8, 0xd3, 0x70, 0x88, 0xbe, 0x26, 0xf5, 0x8b, 0x30, 0xb6, 0x7a,
	0x7b, 0x63, 0xf9, 0xc6, 0xf2, 0x62, 0xc9, 0x61, 0x8b, 0x70, 0x5a, 0xbc, 0x59, 0xda, 0x28, 0x66,
	0xd4, 0x61, 0xc8, 0xae, 0xdf, 0x5a, 0x47, 0xba, 0x96, 0x6f, 0x95, 0x96, 0x57, 0x8a, 0x39, 0xe7,
	0xef, 0xda, 0x4d, 0xa7, 0xea, 0x90, 0x73, 0xbb, 0xb4, 0xb2, 0x52, 0xcc, 0xcf, 0xbf, 0x04, 0xf9,
	0x57, 0x4c, 0xf7, 0x2c, 0xe1, 0x20, 0x8c, 0xa2, 0x7f, 0x14, 0x8e, 0xb7, 0x4a, 0x2b, 0x65, 0x84,
	0xe3, 0x8d, 0xb2, 0xfb, 0x3f, 0xe3, 0x62, 0xb7, 0x71, 0xb3, 0xec, 0xf4, 0xe2, 0x03, 0x98, 0x2a,
	0x7f, 0xbd, 0x65, 0x56, 0x6c, 0xb3, 0xba, 0x66, 0x35, 0xb7, 0x9c, 0xe5, 0xb1, 0xdb, 0x9d, 0x27,
	0xe0, 0x28, 0xaf, 0x9c, 0x52, 0x7b, 0x65, 0x79, 0xb5, 0x5c, 0xc2, 0x43, 0xa5, 0xfc, 0x95, 0xb5,
	0xdb, 0xab, 0xe5, 0xd5, 0x8d, 0xe5, 0xd2, 0x4a, 0x31, 0xe3, 0x30, 0x5d, 0x5f, 0x5e, 0x75, 0x3a,
	0xa9, 0x00, 0xb9, 0xeb, 0xe5, 0x95, 0x95, 0x62, 0xee, 0xd2, 0x7f, 0x6e, 0xc1, 0xf8, 0xba, 0x6b,
	0x27, 0xd6, 0x4d, 0xcb, 0x3d, 0x71, 0xbf, 0x0b, 0xc3, 0xa5, 0x7a, 0xbd, 0xd4, 0x6a, 0xb5, 0x55,
	0xbe, 0xff, 0x1a, 0xbe, 0x8b, 0xdd, 0x59, 0x66, 0x9f, 0x96, 0x13, 0xa1, 0xb5, 0xa4, 0x76, 0x40,
	0x7d, 0x03, 0x46, 0x90, 0xcf, 0x58, 0xa9, 0xd5, 0x52, 0xf9, 0x41, 0xc4, 0xbd, 0xfb, 0xa4, 0xed,
	0x33, 0x51, 0x64, 0x74, 0xeb, 0xc8, 0x29, 0x4b, 0xdc, 0xba, 0x77, 0x5f, 0xde, 0x3a, 0x45, 0xe6,
	0xb5, 0x7e, 0x17, 0x86, 0x75, 0xd3, 0xa8, 0x3a, 0x6d, 0x3f, 0x25, 0x58, 0x10, 0xba, 0x77, 0xe5,
	0x98, 0x78, 0x44, 0xb4, 0xd4, 0xc8, 0x49, 0x49, 0x2c, 0xb5, 0x77, 0x5f, 0x2e, 0x35, 0x45, 0xe6,
	0xb5, 0x6e, 0xc2, 0x58, 0xa9, 0x5e, 0x5f, 0xf3, 0x7c, 0x67, 0xce, 0x89, 0x7a, 0xca, 0x23, 0x21,
	0x3c, 0x9e, 0x89, 0x41, 0xe9, 0xb1, 0x79, 0x08, 0x13, 0xa8, 0x47, 0x3c, 0xd7, 0x9b, 0x79, 0x49,
	0xb7, 0x79, 0x4e, 0x3d, 0x98, 0xd5, 0xb3, 0xb1, 0x68, 0x69, 0x66, 0xa8, 0x83, 0x22, 0x98, 0xb1,
	0x44, 0x72, 0x66, 0x41, 0x5a, 0x1a, 0x40, 0xa7, 0xcf, 0x3c, 0x56, 0xe7, 0x84, 0xdd, 0x1a, 0x64,
	0xf4, 0x4c, 0x0c, 0x4a, 0x5a, 0x27, 0xd4, 0x7d, 0x11, 0x3a, 0xb1, 0x44, 0x72, 0x9d, 0x82, 0xb4,
	0x1e, 0xb3, 0x4d, 0x80, 0x52, 0xbd, 0xbe, 0x84, 0x7d, 0x19, 0xce, 0x88, 0x3a, 0x1a, 0x13, 0x10,
	0x26, 0x67, 0x23, 0xe9, 0x68, 0xd0, 0x50, 0xef, 0x61, 0x0f, 0x9e, 0x73, 0x92, 0x0e, 0x26, 0x39,
	0xfb, 0x65, 0xa0, 0xb1, 0x94, 0x34, 0x1b, 0xd4, 0x6f, 0x52, 0x36, 0x34, 0x89, 0x9c, 0x0d, 0x4b,
	0x49, 0xc3, 0xe5, 0xf4, 0x1a, 0x66, 0x72, 0x46, 0xd8, 0xad, 0x2c, 0x8b, 0xb3, 0x91, 0x74, 0xb4,
	0x1e, 0xa8, 0xaf, 0xa4, 0x7a, 0xd0, 0x24, 0x72, 0x3d, 0x58, 0xca, 0x80, 0x2d, 0xb8, 0xe7, 0xf9,
	0xbe, 0x08, 0x6d, 0x81, 0x47, 0x12, 0x69, 0x0b, 0x28, 0xca, 0xb0, 0x2d, 0xf0, 0xbc, 0xda, 0x64,
	0xb6, 0x20, 0x90, 0x4c, 0x5d, 0x6a, 0x0b, 0x82, 0xf9, 0xd1, 0x69, 0x5b, 0x10, 0xc1, 0x8c, 0x9b,
	0x90, 0x5f, 0x6a, 0x0b, 0x38, 0xcc, 0xb0, 0x2d, 0xf0, 0x58, 0x89, 0x6d, 0x41, 0x90, 0xd1, 0x33,
	0x31, 0x28, 0xc3, 0xb6, 0x20, 0x42, 0x27, 0x6e, 0x36, 0x7a, 0xa9, 0x2d, 0xe0, 0x30, 0x43, 0xb6,
	0x00, 0xa7, 0x5c, 0x17, 0xdb, 0x02, 0x36, 0xa9, 0xbc, 0xd8, 0x16, 0x04, 0x72, 0xb7, 0xd3, 0xb6,
	0x00, 0x3b, 0xae, 0xc9, 0x6c, 0x01, 0x93, 0x20, 0x5a, 0x6a, 0x0b, 0xd8, 0xfc, 0xca, 0xb4, 0x2d,
	0x90, 0xb2, 0xe1, 0xa4, 0x3a, 0x97, 0xda, 0x82, 0x10, 0x1b, 0x6c, 0x0b, 0x30, 0x13, 0xb1, 0x2d,
	0x60, 0x59, 0x9c, 0x8d, 0xa4, 0x0b, 0xdb, 0x02, 0xa9, 0x1e, 0x9c, 0x6c, 0xdf, 0x52, 0x5b, 0xc0,
	0x63, 0x43, 0x27, 0xaa, 0x16, 0xb0, 0xe1, 0xa4, 0xed, 0x16, 0xb0, 0xe1, 0x65, 0xbd, 0xf6, 0x47,
	0x17, 0xca, 0xe7, 0x2c, 0x19, 0x5d, 0x4c, 0xc6, 0x6a, 0xc9, 0xe8, 0x62, 0x13, 0x43, 0x33, 0xa3,
	0x0b, 0x9d, 0xba, 0x48, 0x47, 0x17, 0x9d, 0x1b, 0x57, 0x3e, 0xba, 0x98, 0x74, 0xb7, 0xcc, 0xe8,
	0x92, 0xb1, 0xe1, 0xe4, 0x51, 0x96, 0x8f, 0xae, 0x20, 0x1b, 0x32, 0xba, 0x10, 0x13, 0xc9, 0xe8,
	0x62, 0x58, 0x9c, 0x8d, 0xa4, 0xe3, 0x8c, 0x2e, 0x99, 0x1e, 0x9c, 0x54, 0xc2, 0xf2, 0xd1, 0x15,
	0x64, 0xf3, 0x01, 0x0a, 0xc8, 0xc7, 0xc9, 0x91, 0xab, 0x5e, 0x12, 0xf5, 0xad, 0x38, 0x3d, 0xf0,
	0xec, 0xe5, 0x44, 0x75, 0x3c, 0x29, 0x7e, 0x59, 0xc1, 0xee, 0xf7, 0x21, 0xf7, 0xa2, 0x8b, 0x42,
	0xc4, 0x44, 0xa9, 0x34, 0x67, 0x2f, 0x25, 0xa9, 0xe2, 0x89, 0xf0, 0x5d, 0x2f, 0xb5, 0x61, 0x58,
	0x88, 0xcb, 0x92, 0x01, 0x28, 0x14, 0xe3, 0x4a, 0xb2, 0x4a, 0x8c, 0x20, 0x82, 0x50, 0xf4, 0x02,
	0x41, 0xe4, 0x69, 0x72, 0x05, 0x82, 0x44, 0x24, 0xb1, 0xc5, 0x82, 0x08, 0xc2, 0xa3, 0x0b, 0x04,
	0x91, 0xe7, 0x65, 0x15, 0x08, 0x12, 0x91, 0x6a, 0x15, 0x0b, 0x22, 0xc8, 0x2a, 0x2a, 0x10, 0x44,
	0x9e, 0x6c, 0x55, 0x20, 0x48, 0x44, 0xe2, 0x52, 0x34, 0xdd, 0xb3, 0x29, 0x38, 0x05, 0xd3, 0x3d,
	0x37, 0xdb, 0xa8, 0x60, 0xba, 0xe7, 0xe7, 0xf4, 0xd4, 0x0e, 0xa8, 0x6f, 0x43, 0x31, 0x98, 0xdd,
	0x52, 0x7d, 0x4e, 0x32, 0xa6, 0x42, 0x69, 0x09, 0x67, 0xcf, 0xc7, 0xa4, 0xa6, 0x59, 0x06, 0xf3,
	0x47, 0x0a, 0x58, 0x0a, 0x72, 0x5e, 0x0a, 0x58, 0x8a, 0x92, 0x52, 0x22, 0x48, 0xd9, 0xb4, 0x8e,
	0x02, 0x48, 0xb9, 0x49, 0x25, 0x05, 0x90, 0xf2, 0xf3, 0x44, 0x22, 0xfd, 0x82, 0x79, 0x16, 0x05,
	0xfa, 0x09, 0x32, 0x3d, 0x0a, 0xf4, 0x13, 0x25, 0x6f, 0x44, 0x2c, 0x83, 0x79, 0x0c, 0x05, 0x2c,
	0x05, 0x69, 0x1b, 0x05, 0x2c, 0x45, 0xc9, 0x11, 0xb5, 0x03, 0xea, 0x63, 0xf2, 0x3d, 0x33, 0xe3,
	0x66, 0xbc, 0x20, 0x19, 0x0c, 0x9c, 0x04, 0x6e, 0xb3, 0x17, 0x62, 0xd3, 0xd3, 0x8c, 0xc3, 0x89,
	0xf7, 0x04, 0x8c, 0x85, 0x69, 0x03, 0x05, 0x8c, 0xc5, 0x19, 0xfd, 0x10, 0xc8, 0xc1, 0x74, 0x78,
	0x02, 0x90, 0x05, 0x19, 0xf9, 0x04, 0x20, 0x8b, 0x72, 0xec, 0x21, 0x5d, 0xc3, 0xf9, 0xe9, 0x04,
	0xba, 0x0a, 0xb3, 0xe4, 0x09, 0x74, 0x15, 0x27, 0xbe, 0xd3, 0x0e, 0xa8, 0x36, 0x1c, 0x0a, 0xa5,
	0x80, 0x53, 0x85, 0x63, 0x84, 0x9b, 0xf3, 0x6e, 0x76, 0x21, 0x2e, 0xb9, 0xc7, 0xf5, 0x1d, 0x98,
	0xe4, 0x24, 0x55, 0x53, 0x65, 0x83, 0x84, 0x97, 0x25, 0x6a, 0xf6, 0xf9, 0xf8, 0x15, 0x68, 0xde,
	0x9c, 0x6c, 0x65, 0xaa, 0x6c, 0x9c, 0x24, 0xe0, 0x2d, 0x49, 0x84, 0x86, 0xd0, 0x0e, 0xa5, 0x09,
	0x53, 0xc5, 0x83, 0x85, 0xcb, 0x77, 0x21, 0x2e, 0x39, 0xad, 0x31, 0x27, 0x6f, 0x97, 0x2a, 0x1b,
	0x2d, 0x09, 0x34, 0x96, 0xa4, 0x04, 0x43, 0xbc, 0x39, 0x09, 0xb0, 0x04, 0xbc, 0xc5, 0xf9, 0xc0,
	0x04, 0xbc, 0x25, 0xb9, 0xb5, 0xb4, 0x03, 0xea, 0x87, 0x28, 0x46, 0x1f, 0x37, 0x41, 0x94, 0x7a,
	0x25, 0xee, 0xd2, 0x92, 0xce, 0x8f, 0x35, 0xfb, 0x42, 0xc2, 0x5a, 0x9e, 0x2c, 0x1f, 0x79, 0xb1,
	0xed, 0xb8, 0xee, 0xf9, 0x2f, 0x26, 0x59, 0xdd, 0xf9, 0x29, 0x6b, 0x66, 0x3f, 0x9f, 0xb8, 0x1e,
	0x23, 0x91, 0x38, 0x47, 0x91, 0x40, 0xa2, 0xc8, 0x4c, 0x4c, 0x02, 0x89, 0xa2, 0x93, 0x21, 0xe1,
	0xfe, 0x12, 0xa5, 0x0e, 0x12, 0xf4, 0x57, 0x44, 0x36, 0x23, 0x41, 0x7f, 0x45, 0xe5, 0x27, 0xc2,
	0xe8, 0x88, 0x93, 0xf9, 0x08, 0xd0, 0x89, 0x4c, 0x31, 0x24, 0x40, 0x27, 0x3a, 0x6b, 0x10, 0x96,
	0x48, 0x9c, 0x37, 0x47, 0x20, 0x51, 0x64, 0xea, 0x20, 0x81, 0x44, 0xd1, 0x09, 0x7a, 0xb4, 0x03,
	0xea, 0x27, 0x5e, 0x58, 0x44, 0xfe, 0x07, 0x01, 0xb2, 0xc1, 0x29, 0x4b, 0xdf, 0x31, 0x7b, 0x35,
	0x79, 0x45, 0x46, 0x28, 0x49, 0xda, 0x16, 0x55, 0x36, 0x3e, 0xbb, 0x10, 0x2a, 0x46, 0x86, 0x18,
	0xed, 0x80, 0xfa, 0xeb, 0x38, 0x6e, 0x20, 0x5f, 0x24, 0xf1, 0x20, 0x95, 0x0a, 0xf4, 0x62, 0xd2,
	0x6a, 0x0c, 0x46, 0x92, 0xfc, 0x26, 0xaa, 0x6c, 0x94, 0x76, 0x81, 0x51, 0x8c, 0x54, 0x2a, 0xda,
	0x01, 0xf5, 0x5d, 0x98, 0xe2, 0x65, 0x14, 0x51, 0x9f, 0x8f, 0x18, 0xa0, 0xe1, 0x21, 0x7d, 0x31,
	0x41, 0x0d, 0x66, 0xcf, 0x80, 0x9b, 0xa0, 0x43, 0xb0, 0x67, 0x20, 0xcb, 0x36, 0x22, 0xd8, 0x33,
	0x90, 0xe6, 0xff, 0xc0, 0x22, 0x70, 0x93, 0x5e, 0x08, 0x44, 0x90, 0x65, 0xf0, 0x10, 0x88, 0x20,
	0xcd, 0xa9, 0x81, 0xa6, 0x6b, 0x4e, 0x2a, 0x0a, 0xc1, 0x74, 0x2d, 0xce, 0x89, 0x21, 0x98, 0xae,
	0x25, 0x59, 0x2e, 0xb0, 0xfa, 0xdc, 0xe4, 0x10, 0x02, 0xf5, 0x65, 0x89, 0x2a, 0x04, 0xea, 0x4b,
	0x73, 0x4f, 0x68, 0x07, 0xd4, 0x6f, 0x31, 0x71, 0x91, 0x09, 0x81, 0x1f, 0xc5, 0x41, 0xf2, 0x36,
	0x19, 0x0a, 0xf5, 0xd0, 0x15, 0x06, 0xdf, 0x53, 0xe0, 0x73, 0x52, 0x09, 0x6e, 0x5b, 0x68, 0x14,
	0xed, 0xb9, 0x24, 0x3b, 0x70, 0x30, 0x90, 0x92, 0x42, 0x7d, 0x36, 0xe2, 0xb9, 0x62, 0xb6, 0x27,
	0x9e, 0x8b, 0x47, 0x4c, 0x2f, 0x8d, 0x43, 0xa9, 0x1e, 0xd4, 0xf3, 0xd1, 0xcf, 0x11, 0xfd, 0x3a,
	0xbd, 0x10, 0x97, 0x9c, 0xe6, 0x1a, 0xca, 0xa4, 0xa0, 0x9e, 0x8f, 0x7e, 0x74, 0xa2, 0xb9, 0x0a,
	0x13, 0x34, 0x20, 0x6c, 0x03, 0xf9, 0x0d, 0xd4, 0x67, 0xa3, 0xba, 0x88, 0xe6, 0xf8, 0x5c, 0x3c,
	0x62, 0x5a, 0xcb, 0x50, 0xc2, 0x01, 0xf5, 0x7c, 0xf4, 0x13, 0x12, 0xad, 0xa5, 0x30, 0x8f, 0x01,
	0x7e, 0x9e, 0xb9, 0xe1, 0xfc, 0xd5, 0x28, 0x03, 0x1d, 0xce, 0x63, 0x30, 0x7b, 0x29, 0x49, 0x15,
	0xce, 0x2e, 0x6c, 0xf8, 0x13, 0xa5, 0xcb, 0xd1, 0x83, 0x25, 0x14, 0x87, 0x5c, 0xba, 0x0b, 0x2b,
	0x0c, 0x2d, 0xce, 0xec, 0xc2, 0xc6, 0x15, 0x44, 0x1e, 0x3a, 0x5f, 0xba, 0x0b, 0x2b, 0x13, 0x84,
	0x6c, 0x8d, 0x87, 0xc5, 0xb8, 0x18, 0x35, 0xa8, 0xc2, 0x42, 0x5c, 0x4a, 0x52, 0x85, 0xb3, 0x11,
	0x1c, 0x17, 0x0b, 0x79, 0x70, 0x78, 0xe9, 0x46, 0xb0, 0x4c, 0x10, 0xb4, 0xf7, 0xc1, 0x46, 0x3e,
	0x17, 0xef, 0x7d, 0x70, 0x43, 0xbd, 0x8b, 0xf7, 0x3e, 0xf8, 0x01, 0xd5, 0xe9, 0xbd, 0x0f, 0xf6,
	0x8b, 0xaa, 0x0b, 0x91, 0xa7, 0x52, 0x6c, 0xe4, 0x64, 0xe9, 0xde, 0x07, 0x37, 0xca, 0x30, 0xbd,
	0xf7, 0x11, 0x87, 0xb7, 0x38, 0xce, 0xb8, 0x74, 0xef, 0x43, 0xc4, 0x1b, 0xef, 0x7d, 0xb0, 0x9c,
	0xcf, 0x47, 0x9c, 0x60, 0x05, 0xf8, 0x2e, 0xc4, 0x25, 0x0f, 0xef, 0x7d, 0xc4, 0xd1, 0x58, 0x1c,
	0x53, 0x5b, 0xba, 0xf7, 0x21, 0xe1, 0xcd, 0x09, 0xfa, 0x2c, 0xdd, 0xfb, 0x48, 0xc0, 0x5b, 0x12,
	0x4f, 0xda, 0x3f, 0x88, 0xe3, 0x84, 0x45, 0x16, 0x1f, 0xc4, 0x89, 0x23, 0x42, 0x8b, 0x0f, 0xe2,
	0x24, 0x71, 0x97, 0xf1, 0x1b, 0xbd, 0x28, 0xb4, 0xb0, 0x7a, 0x45, 0xba, 0x79, 0x27, 0x08, 0x86,
	0x2a, 0x78, 0xa3, 0x8f, 0x8a, 0x5f, 0x8c, 0x65, 0x11, 0x45, 0xe9, 0x55, 0xaf, 0x48, 0x37, 0xf3,
	0x92, 0xc9, 0x12, 0x15, 0x0a, 0x18, 0xf7, 0x0e, 0x3f, 0x78, 0xae, 0x7a, 0x49, 0xb2, 0xbd, 0x27,
	0x92, 0xe3, 0x72, 0xa2, 0x3a, 0x0c, 0x22, 0xa2, 0x70, 0xb6, 0xea, 0x15, 0xe9, 0x66, 0x5f, 0x32,
	0x44, 0xa2, 0x62, 0xe6, 0x62, 0x59, 0x44, 0x01, 0x61, 0xd5, 0x2b, 0xd2, 0xcd, 0xbf, 0x64, 0xb2,
	0x44, 0x45, 0x9d, 0x45, 0x87, 0xf1, 0x7e, 0x04, 0x57, 0x55, 0xe6, 0x86, 0x4a, 0xc5, 0x5a, 0x15,
	0x1c, 0xc6, 0x87, 0x43, 0xc1, 0x22, 0x06, 0x7e, 0x9c, 0x55, 0x55, 0xe6, 0x89, 0x1a, 0xcd, 0x20,
	0x1c, 0xb0, 0x15, 0x1d, 0x27, 0x84, 0xe3, 0xa2, 0xaa, 0x62, 0xeb, 0xc9, 0x0d, 0xbd, 0x3a, 0x7b,
	0x21, 0x36, 0xbd, 0xc7, 0xf8, 0x3e, 0x8c, 0x52, 0x91, 0x31, 0x55, 0xa1, 0x3f, 0x47, 0x20, 0xfa,
	0xe7, 0xec, 0xb9, 0x68, 0x42, 0x8f, 0xc7, 0x36, 0x8c, 0x33, 0xf1, 0x27, 0x55, 0x99, 0x43, 0x07,
	0x1b, 0x58, 0x70, 0x76, 0x3e, 0x0e, 0x29, 0xcd, 0x89, 0x09, 0xf6, 0xa8, 0xca, 0x7c, 0x3a, 0x62,
	0x71, 0xe2, 0xc6, 0x8e, 0x44, 0xb8, 0x51, 0x31, 0x18, 0x55, 0xb1, 0x63, 0x47, 0x80, 0xcb, 0xb9,
	0x68, 0x42, 0x5a, 0x1b, 0x26, 0x28, 0xa2, 0x2a, 0xf3, 0xec, 0x88, 0xa5, 0x0d, 0x37, 0xc6, 0xa2,
	0x76, 0x40, 0x7d, 0x0f, 0x8e, 0x0a, 0xe3, 0x26, 0x0a, 0x76, 0xbb, 0xa2, 0xe2, 0x2c, 0x26, 0x1a,
	0x21, 0x0d, 0x98, 0xf2, 0x5d, 0xac, 0xba, 0x7c, 0x7b, 0x4f, 0xe0, 0xb9, 0xf5, 0xa1, 0x02, 0x9a,
	0x68, 0x4b, 0xb9, 0x4b, 0xee, 0x5d, 0xef, 0x5b, 0x7f, 0x03, 0xe5, 0x12, 0x65, 0x8e, 0x44, 0xba,
	0x94, 0x21, 0xf9, 0x41, 0xd3, 0x16, 0x5a, 0xe2, 0x95, 0x5a, 0xad, 0x2e, 0x59, 0xc6, 0x75, 0x9d,
	0x7f, 0x1b, 0x4d, 0x9f, 0xc4, 0xab, 0xb1, 0x4b, 0x6e, 0x89, 0x7c, 0x33, 0xf1, 0x98, 0x42, 0xbe,
	0xb5, 0x3d, 0x1f, 0x53, 0x21, 0x97, 0xdd, 0x2d, 0x98, 0x45, 0x81, 0x9f, 0xb9, 0xc7, 0x0f, 0x9a,
	0xc0, 0xb8, 0x50, 0xb1, 0xa8, 0x67, 0x9f, 0x92, 0xd2, 0x50, 0x96, 0x67, 0x1a, 0x95, 0x05, 0x37,
	0xdd, 0x7a, 0xc8, 0xe3, 0x35, 0x18, 0x43, 0x65, 0xd8, 0xe7, 0xb0, 0x87, 0x4d, 0x57, 0x9d, 0xf7,
	0x6a, 0x2e, 0x4e, 0xbd, 0xe4, 0xf2, 0x00, 0x8e, 0x72, 0x41, 0x72, 0x3f, 0x4d, 0xed, 0x21, 0x9f,
	0xb7, 0x9c, 0xf7, 0x33, 0xa7, 0x8c, 0x3d, 0x2d, 0xed, 0x1d, 0x87, 0xfb, 0xf9, 0x96, 0xd5, 0xb4,
	0x9b, 0x97, 0xff, 0x37, 0x00, 0x00, 0xff, 0xff, 0xe7, 0xa0, 0x65, 0xbc, 0xb2, 0xc9, 0x00, 0x00,
}
