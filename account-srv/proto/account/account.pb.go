// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/account-srv/proto/account/account.proto

/*
Package go_micro_srv_account is a generated protocol buffer package.

It is generated from these files:
	server/account-srv/proto/account/account.proto

It has these top-level messages:
	ReadSessionRequest
	ReadSessionResponse
	AccountData
	ReadRequest
	ReadResponse
	CreateRequest
	CreateResponse
	UpdateRequest
	UpdateResponse
	ConfirmRegisterRequest
	ConfirmRegisterResponse
	ConfirmResendRequest
	ConfirmResendResponse
	LoginRequest
	LoginResponse
	LogoutRequest
	LogoutResponse
	RecoverPasswordRequest
	RecoverPasswordResponse
	UpdatePasswordRequest
	UpdatePasswordResponse
	LockRequest
	LockResponse
	InternalConfirmRequest
	InternalConfirmResponse
	GetAccountStatusRequest
	GetAccountStatusResponse
	SetAccountStatusRequest
	SetAccountStatusResponse
	ResetUserPasswordRequest
	ResetUserPasswordResponse
	NewAccountConfirmationTokenRequest
	NewAccountConfirmationTokenResponse
	ReadAccountTokenRequest
	ReadAccountTokenResponse
	Account
	VerificationToken
	VerificationAccount
	SessionInfo
	AccountInfo
	AccountStatusInfo
	Session
	ConfirmVerifyRequest
	ConfirmVerifyResponse
*/
package go_micro_srv_account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AccountStatus int32

const (
	AccountStatus_AccountStatus_NONE AccountStatus = 0
	AccountStatus_INACTIVE           AccountStatus = 1
	AccountStatus_ACTIVE             AccountStatus = 2
	AccountStatus_LOCKED             AccountStatus = 3
	AccountStatus_SUSPENDED          AccountStatus = 4
)

var AccountStatus_name = map[int32]string{
	0: "AccountStatus_NONE",
	1: "INACTIVE",
	2: "ACTIVE",
	3: "LOCKED",
	4: "SUSPENDED",
}
var AccountStatus_value = map[string]int32{
	"AccountStatus_NONE": 0,
	"INACTIVE":           1,
	"ACTIVE":             2,
	"LOCKED":             3,
	"SUSPENDED":          4,
}

func (x AccountStatus) String() string {
	return proto.EnumName(AccountStatus_name, int32(x))
}
func (AccountStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ReadSessionRequest struct {
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *ReadSessionRequest) Reset()                    { *m = ReadSessionRequest{} }
func (m *ReadSessionRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadSessionRequest) ProtoMessage()               {}
func (*ReadSessionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReadSessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type ReadSessionResponse struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *ReadSessionResponse) Reset()                    { *m = ReadSessionResponse{} }
func (m *ReadSessionResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadSessionResponse) ProtoMessage()               {}
func (*ReadSessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReadSessionResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ReadSessionResponse) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type AccountData struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *AccountData) Reset()                    { *m = AccountData{} }
func (m *AccountData) String() string            { return proto.CompactTextString(m) }
func (*AccountData) ProtoMessage()               {}
func (*AccountData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AccountData) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ReadRequest struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ReadResponse struct {
	Data    *AccountData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64        `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string       `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetData() *AccountData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReadResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type CreateRequest struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *CreateRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type CreateResponse struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Token   string   `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CreateResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *CreateResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type UpdateRequest struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type UpdateResponse struct {
	Data    *UpdateResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string               `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateResponse) GetData() *UpdateResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *UpdateResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdateResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type UpdateResponse_Data struct {
	Account *Account `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *UpdateResponse_Data) Reset()                    { *m = UpdateResponse_Data{} }
func (m *UpdateResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse_Data) ProtoMessage()               {}
func (*UpdateResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8, 0} }

func (m *UpdateResponse_Data) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ConfirmRegisterRequest struct {
	VerificationToken string `protobuf:"bytes,1,opt,name=verification_token,json=verificationToken" json:"verification_token,omitempty"`
	Password          string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Passcode          string `protobuf:"bytes,3,opt,name=passcode" json:"passcode,omitempty"`
}

func (m *ConfirmRegisterRequest) Reset()                    { *m = ConfirmRegisterRequest{} }
func (m *ConfirmRegisterRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfirmRegisterRequest) ProtoMessage()               {}
func (*ConfirmRegisterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ConfirmRegisterRequest) GetVerificationToken() string {
	if m != nil {
		return m.VerificationToken
	}
	return ""
}

func (m *ConfirmRegisterRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ConfirmRegisterRequest) GetPasscode() string {
	if m != nil {
		return m.Passcode
	}
	return ""
}

type ConfirmRegisterResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ConfirmRegisterResponse) Reset()                    { *m = ConfirmRegisterResponse{} }
func (m *ConfirmRegisterResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfirmRegisterResponse) ProtoMessage()               {}
func (*ConfirmRegisterResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ConfirmRegisterResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ConfirmRegisterResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ConfirmResendRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=phone" json:"phone,omitempty"`
}

func (m *ConfirmResendRequest) Reset()                    { *m = ConfirmResendRequest{} }
func (m *ConfirmResendRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfirmResendRequest) ProtoMessage()               {}
func (*ConfirmResendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ConfirmResendRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ConfirmResendRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type ConfirmResendResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ConfirmResendResponse) Reset()                    { *m = ConfirmResendResponse{} }
func (m *ConfirmResendResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfirmResendResponse) ProtoMessage()               {}
func (*ConfirmResendResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ConfirmResendResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ConfirmResendResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LoginRequest struct {
	Email            string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password         string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Phone            string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Passcode         string `protobuf:"bytes,4,opt,name=passcode" json:"passcode,omitempty"`
	DeviceToken      string `protobuf:"bytes,5,opt,name=device_token,json=deviceToken" json:"device_token,omitempty"`
	Platform         int32  `protobuf:"varint,6,opt,name=platform" json:"platform,omitempty"`
	UniqueIdentifier string `protobuf:"bytes,7,opt,name=unique_identifier,json=uniqueIdentifier" json:"unique_identifier,omitempty"`
	AppIdentifier    string `protobuf:"bytes,8,opt,name=app_identifier,json=appIdentifier" json:"app_identifier,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LoginRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *LoginRequest) GetPasscode() string {
	if m != nil {
		return m.Passcode
	}
	return ""
}

func (m *LoginRequest) GetDeviceToken() string {
	if m != nil {
		return m.DeviceToken
	}
	return ""
}

func (m *LoginRequest) GetPlatform() int32 {
	if m != nil {
		return m.Platform
	}
	return 0
}

func (m *LoginRequest) GetUniqueIdentifier() string {
	if m != nil {
		return m.UniqueIdentifier
	}
	return ""
}

func (m *LoginRequest) GetAppIdentifier() string {
	if m != nil {
		return m.AppIdentifier
	}
	return ""
}

type LoginResponse struct {
	Data    *LoginResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64               `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string              `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *LoginResponse) GetData() *LoginResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *LoginResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LoginResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LoginResponse_Data struct {
	Session     *Session     `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	AccountInfo *AccountInfo `protobuf:"bytes,2,opt,name=account_info,json=accountInfo" json:"account_info,omitempty"`
}

func (m *LoginResponse_Data) Reset()                    { *m = LoginResponse_Data{} }
func (m *LoginResponse_Data) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse_Data) ProtoMessage()               {}
func (*LoginResponse_Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14, 0} }

func (m *LoginResponse_Data) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *LoginResponse_Data) GetAccountInfo() *AccountInfo {
	if m != nil {
		return m.AccountInfo
	}
	return nil
}

type LogoutRequest struct {
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
}

func (m *LogoutRequest) Reset()                    { *m = LogoutRequest{} }
func (m *LogoutRequest) String() string            { return proto.CompactTextString(m) }
func (*LogoutRequest) ProtoMessage()               {}
func (*LogoutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *LogoutRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *LogoutRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *LogoutRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

type LogoutResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *LogoutResponse) Reset()                    { *m = LogoutResponse{} }
func (m *LogoutResponse) String() string            { return proto.CompactTextString(m) }
func (*LogoutResponse) ProtoMessage()               {}
func (*LogoutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *LogoutResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LogoutResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RecoverPasswordRequest struct {
	Email string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Phone string `protobuf:"bytes,2,opt,name=phone" json:"phone,omitempty"`
}

func (m *RecoverPasswordRequest) Reset()                    { *m = RecoverPasswordRequest{} }
func (m *RecoverPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*RecoverPasswordRequest) ProtoMessage()               {}
func (*RecoverPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *RecoverPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *RecoverPasswordRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type RecoverPasswordResponse struct {
	Data    *RecoverPasswordResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                         `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *RecoverPasswordResponse) Reset()                    { *m = RecoverPasswordResponse{} }
func (m *RecoverPasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*RecoverPasswordResponse) ProtoMessage()               {}
func (*RecoverPasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *RecoverPasswordResponse) GetData() *RecoverPasswordResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *RecoverPasswordResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *RecoverPasswordResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RecoverPasswordResponse_Data struct {
	PasswordResetToken string `protobuf:"bytes,1,opt,name=password_reset_token,json=passwordResetToken" json:"password_reset_token,omitempty"`
}

func (m *RecoverPasswordResponse_Data) Reset()         { *m = RecoverPasswordResponse_Data{} }
func (m *RecoverPasswordResponse_Data) String() string { return proto.CompactTextString(m) }
func (*RecoverPasswordResponse_Data) ProtoMessage()    {}
func (*RecoverPasswordResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18, 0}
}

func (m *RecoverPasswordResponse_Data) GetPasswordResetToken() string {
	if m != nil {
		return m.PasswordResetToken
	}
	return ""
}

type UpdatePasswordRequest struct {
	PasswordResetToken string `protobuf:"bytes,1,opt,name=password_reset_token,json=passwordResetToken" json:"password_reset_token,omitempty"`
	Password           string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Passcode           string `protobuf:"bytes,3,opt,name=passcode" json:"passcode,omitempty"`
}

func (m *UpdatePasswordRequest) Reset()                    { *m = UpdatePasswordRequest{} }
func (m *UpdatePasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePasswordRequest) ProtoMessage()               {}
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *UpdatePasswordRequest) GetPasswordResetToken() string {
	if m != nil {
		return m.PasswordResetToken
	}
	return ""
}

func (m *UpdatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdatePasswordRequest) GetPasscode() string {
	if m != nil {
		return m.Passcode
	}
	return ""
}

type UpdatePasswordResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *UpdatePasswordResponse) Reset()                    { *m = UpdatePasswordResponse{} }
func (m *UpdatePasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePasswordResponse) ProtoMessage()               {}
func (*UpdatePasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *UpdatePasswordResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpdatePasswordResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type LockRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *LockRequest) Reset()                    { *m = LockRequest{} }
func (m *LockRequest) String() string            { return proto.CompactTextString(m) }
func (*LockRequest) ProtoMessage()               {}
func (*LockRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *LockRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type LockResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *LockResponse) Reset()                    { *m = LockResponse{} }
func (m *LockResponse) String() string            { return proto.CompactTextString(m) }
func (*LockResponse) ProtoMessage()               {}
func (*LockResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *LockResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LockResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type InternalConfirmRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *InternalConfirmRequest) Reset()                    { *m = InternalConfirmRequest{} }
func (m *InternalConfirmRequest) String() string            { return proto.CompactTextString(m) }
func (*InternalConfirmRequest) ProtoMessage()               {}
func (*InternalConfirmRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *InternalConfirmRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *InternalConfirmRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type InternalConfirmResponse struct {
}

func (m *InternalConfirmResponse) Reset()                    { *m = InternalConfirmResponse{} }
func (m *InternalConfirmResponse) String() string            { return proto.CompactTextString(m) }
func (*InternalConfirmResponse) ProtoMessage()               {}
func (*InternalConfirmResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

type GetAccountStatusRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
}

func (m *GetAccountStatusRequest) Reset()                    { *m = GetAccountStatusRequest{} }
func (m *GetAccountStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAccountStatusRequest) ProtoMessage()               {}
func (*GetAccountStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *GetAccountStatusRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetAccountStatusRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *GetAccountStatusRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type GetAccountStatusResponse struct {
	Data    *GetAccountStatusResponse_Data `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Code    int64                          `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Message string                         `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
}

func (m *GetAccountStatusResponse) Reset()                    { *m = GetAccountStatusResponse{} }
func (m *GetAccountStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAccountStatusResponse) ProtoMessage()               {}
func (*GetAccountStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *GetAccountStatusResponse) GetData() *GetAccountStatusResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GetAccountStatusResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetAccountStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAccountStatusResponse_Data struct {
	Account *AccountStatusInfo `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
}

func (m *GetAccountStatusResponse_Data) Reset()         { *m = GetAccountStatusResponse_Data{} }
func (m *GetAccountStatusResponse_Data) String() string { return proto.CompactTextString(m) }
func (*GetAccountStatusResponse_Data) ProtoMessage()    {}
func (*GetAccountStatusResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{26, 0}
}

func (m *GetAccountStatusResponse_Data) GetAccount() *AccountStatusInfo {
	if m != nil {
		return m.Account
	}
	return nil
}

type SetAccountStatusRequest struct {
	UserId string        `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId  string        `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId string        `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Status AccountStatus `protobuf:"varint,4,opt,name=status,enum=go.micro.srv.account.AccountStatus" json:"status,omitempty"`
}

func (m *SetAccountStatusRequest) Reset()                    { *m = SetAccountStatusRequest{} }
func (m *SetAccountStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*SetAccountStatusRequest) ProtoMessage()               {}
func (*SetAccountStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *SetAccountStatusRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SetAccountStatusRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SetAccountStatusRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *SetAccountStatusRequest) GetStatus() AccountStatus {
	if m != nil {
		return m.Status
	}
	return AccountStatus_AccountStatus_NONE
}

type SetAccountStatusResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *SetAccountStatusResponse) Reset()                    { *m = SetAccountStatusResponse{} }
func (m *SetAccountStatusResponse) String() string            { return proto.CompactTextString(m) }
func (*SetAccountStatusResponse) ProtoMessage()               {}
func (*SetAccountStatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *SetAccountStatusResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *SetAccountStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ResetUserPasswordRequest struct {
	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	TeamId   string `protobuf:"bytes,3,opt,name=team_id,json=teamId" json:"team_id,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	Passcode string `protobuf:"bytes,5,opt,name=passcode" json:"passcode,omitempty"`
}

func (m *ResetUserPasswordRequest) Reset()                    { *m = ResetUserPasswordRequest{} }
func (m *ResetUserPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ResetUserPasswordRequest) ProtoMessage()               {}
func (*ResetUserPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *ResetUserPasswordRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ResetUserPasswordRequest) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *ResetUserPasswordRequest) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *ResetUserPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ResetUserPasswordRequest) GetPasscode() string {
	if m != nil {
		return m.Passcode
	}
	return ""
}

type ResetUserPasswordResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ResetUserPasswordResponse) Reset()                    { *m = ResetUserPasswordResponse{} }
func (m *ResetUserPasswordResponse) String() string            { return proto.CompactTextString(m) }
func (*ResetUserPasswordResponse) ProtoMessage()               {}
func (*ResetUserPasswordResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *ResetUserPasswordResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ResetUserPasswordResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type NewAccountConfirmationTokenRequest struct {
	Mode    int32    `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"`
	Token   string   `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	Account *Account `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
}

func (m *NewAccountConfirmationTokenRequest) Reset()         { *m = NewAccountConfirmationTokenRequest{} }
func (m *NewAccountConfirmationTokenRequest) String() string { return proto.CompactTextString(m) }
func (*NewAccountConfirmationTokenRequest) ProtoMessage()    {}
func (*NewAccountConfirmationTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{31}
}

func (m *NewAccountConfirmationTokenRequest) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *NewAccountConfirmationTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *NewAccountConfirmationTokenRequest) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type NewAccountConfirmationTokenResponse struct {
}

func (m *NewAccountConfirmationTokenResponse) Reset()         { *m = NewAccountConfirmationTokenResponse{} }
func (m *NewAccountConfirmationTokenResponse) String() string { return proto.CompactTextString(m) }
func (*NewAccountConfirmationTokenResponse) ProtoMessage()    {}
func (*NewAccountConfirmationTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32}
}

type ReadAccountTokenRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *ReadAccountTokenRequest) Reset()                    { *m = ReadAccountTokenRequest{} }
func (m *ReadAccountTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAccountTokenRequest) ProtoMessage()               {}
func (*ReadAccountTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ReadAccountTokenRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type ReadAccountTokenResponse struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *ReadAccountTokenResponse) Reset()                    { *m = ReadAccountTokenResponse{} }
func (m *ReadAccountTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAccountTokenResponse) ProtoMessage()               {}
func (*ReadAccountTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *ReadAccountTokenResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type Account struct {
	Id        string        `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Created   int64         `protobuf:"varint,2,opt,name=created" json:"created,omitempty"`
	Updated   int64         `protobuf:"varint,3,opt,name=updated" json:"updated,omitempty"`
	Email     string        `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Password  string        `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	Phone     string        `protobuf:"bytes,6,opt,name=phone" json:"phone,omitempty"`
	Passcode  string        `protobuf:"bytes,7,opt,name=passcode" json:"passcode,omitempty"`
	Confirmed bool          `protobuf:"varint,8,opt,name=confirmed" json:"confirmed,omitempty"`
	Status    AccountStatus `protobuf:"varint,9,opt,name=status,enum=go.micro.srv.account.AccountStatus" json:"status,omitempty"`
}

func (m *Account) Reset()                    { *m = Account{} }
func (m *Account) String() string            { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()               {}
func (*Account) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *Account) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Account) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Account) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Account) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Account) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Account) GetPasscode() string {
	if m != nil {
		return m.Passcode
	}
	return ""
}

func (m *Account) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

func (m *Account) GetStatus() AccountStatus {
	if m != nil {
		return m.Status
	}
	return AccountStatus_AccountStatus_NONE
}

type VerificationToken struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ExpiresAt int64  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (m *VerificationToken) Reset()                    { *m = VerificationToken{} }
func (m *VerificationToken) String() string            { return proto.CompactTextString(m) }
func (*VerificationToken) ProtoMessage()               {}
func (*VerificationToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *VerificationToken) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *VerificationToken) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type VerificationAccount struct {
	Token     string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	ExpiresAt int64  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (m *VerificationAccount) Reset()                    { *m = VerificationAccount{} }
func (m *VerificationAccount) String() string            { return proto.CompactTextString(m) }
func (*VerificationAccount) ProtoMessage()               {}
func (*VerificationAccount) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *VerificationAccount) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *VerificationAccount) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type SessionInfo struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId     string `protobuf:"bytes,3,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	ExpiresAt int64  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (m *SessionInfo) Reset()                    { *m = SessionInfo{} }
func (m *SessionInfo) String() string            { return proto.CompactTextString(m) }
func (*SessionInfo) ProtoMessage()               {}
func (*SessionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *SessionInfo) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *SessionInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SessionInfo) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *SessionInfo) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type AccountInfo struct {
	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	OrgId    string `protobuf:"bytes,2,opt,name=org_id,json=orgId" json:"org_id,omitempty"`
	Employee string `protobuf:"bytes,3,opt,name=employee" json:"employee,omitempty"`
}

func (m *AccountInfo) Reset()                    { *m = AccountInfo{} }
func (m *AccountInfo) String() string            { return proto.CompactTextString(m) }
func (*AccountInfo) ProtoMessage()               {}
func (*AccountInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *AccountInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AccountInfo) GetOrgId() string {
	if m != nil {
		return m.OrgId
	}
	return ""
}

func (m *AccountInfo) GetEmployee() string {
	if m != nil {
		return m.Employee
	}
	return ""
}

type AccountStatusInfo struct {
	Status AccountStatus `protobuf:"varint,1,opt,name=status,enum=go.micro.srv.account.AccountStatus" json:"status,omitempty"`
}

func (m *AccountStatusInfo) Reset()                    { *m = AccountStatusInfo{} }
func (m *AccountStatusInfo) String() string            { return proto.CompactTextString(m) }
func (*AccountStatusInfo) ProtoMessage()               {}
func (*AccountStatusInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *AccountStatusInfo) GetStatus() AccountStatus {
	if m != nil {
		return m.Status
	}
	return AccountStatus_AccountStatus_NONE
}

type Session struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ExpiresAt int64  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt" json:"expires_at,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *Session) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Session) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

type ConfirmVerifyRequest struct {
	Token string `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
}

func (m *ConfirmVerifyRequest) Reset()                    { *m = ConfirmVerifyRequest{} }
func (m *ConfirmVerifyRequest) String() string            { return proto.CompactTextString(m) }
func (*ConfirmVerifyRequest) ProtoMessage()               {}
func (*ConfirmVerifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ConfirmVerifyRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type ConfirmVerifyResponse struct {
	Code    int64  `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *ConfirmVerifyResponse) Reset()                    { *m = ConfirmVerifyResponse{} }
func (m *ConfirmVerifyResponse) String() string            { return proto.CompactTextString(m) }
func (*ConfirmVerifyResponse) ProtoMessage()               {}
func (*ConfirmVerifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *ConfirmVerifyResponse) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ConfirmVerifyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ReadSessionRequest)(nil), "go.micro.srv.account.ReadSessionRequest")
	proto.RegisterType((*ReadSessionResponse)(nil), "go.micro.srv.account.ReadSessionResponse")
	proto.RegisterType((*AccountData)(nil), "go.micro.srv.account.AccountData")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.account.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.account.ReadResponse")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.account.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.account.CreateResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.account.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.account.UpdateResponse")
	proto.RegisterType((*UpdateResponse_Data)(nil), "go.micro.srv.account.UpdateResponse.Data")
	proto.RegisterType((*ConfirmRegisterRequest)(nil), "go.micro.srv.account.ConfirmRegisterRequest")
	proto.RegisterType((*ConfirmRegisterResponse)(nil), "go.micro.srv.account.ConfirmRegisterResponse")
	proto.RegisterType((*ConfirmResendRequest)(nil), "go.micro.srv.account.ConfirmResendRequest")
	proto.RegisterType((*ConfirmResendResponse)(nil), "go.micro.srv.account.ConfirmResendResponse")
	proto.RegisterType((*LoginRequest)(nil), "go.micro.srv.account.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "go.micro.srv.account.LoginResponse")
	proto.RegisterType((*LoginResponse_Data)(nil), "go.micro.srv.account.LoginResponse.Data")
	proto.RegisterType((*LogoutRequest)(nil), "go.micro.srv.account.LogoutRequest")
	proto.RegisterType((*LogoutResponse)(nil), "go.micro.srv.account.LogoutResponse")
	proto.RegisterType((*RecoverPasswordRequest)(nil), "go.micro.srv.account.RecoverPasswordRequest")
	proto.RegisterType((*RecoverPasswordResponse)(nil), "go.micro.srv.account.RecoverPasswordResponse")
	proto.RegisterType((*RecoverPasswordResponse_Data)(nil), "go.micro.srv.account.RecoverPasswordResponse.Data")
	proto.RegisterType((*UpdatePasswordRequest)(nil), "go.micro.srv.account.UpdatePasswordRequest")
	proto.RegisterType((*UpdatePasswordResponse)(nil), "go.micro.srv.account.UpdatePasswordResponse")
	proto.RegisterType((*LockRequest)(nil), "go.micro.srv.account.LockRequest")
	proto.RegisterType((*LockResponse)(nil), "go.micro.srv.account.LockResponse")
	proto.RegisterType((*InternalConfirmRequest)(nil), "go.micro.srv.account.InternalConfirmRequest")
	proto.RegisterType((*InternalConfirmResponse)(nil), "go.micro.srv.account.InternalConfirmResponse")
	proto.RegisterType((*GetAccountStatusRequest)(nil), "go.micro.srv.account.GetAccountStatusRequest")
	proto.RegisterType((*GetAccountStatusResponse)(nil), "go.micro.srv.account.GetAccountStatusResponse")
	proto.RegisterType((*GetAccountStatusResponse_Data)(nil), "go.micro.srv.account.GetAccountStatusResponse.Data")
	proto.RegisterType((*SetAccountStatusRequest)(nil), "go.micro.srv.account.SetAccountStatusRequest")
	proto.RegisterType((*SetAccountStatusResponse)(nil), "go.micro.srv.account.SetAccountStatusResponse")
	proto.RegisterType((*ResetUserPasswordRequest)(nil), "go.micro.srv.account.ResetUserPasswordRequest")
	proto.RegisterType((*ResetUserPasswordResponse)(nil), "go.micro.srv.account.ResetUserPasswordResponse")
	proto.RegisterType((*NewAccountConfirmationTokenRequest)(nil), "go.micro.srv.account.NewAccountConfirmationTokenRequest")
	proto.RegisterType((*NewAccountConfirmationTokenResponse)(nil), "go.micro.srv.account.NewAccountConfirmationTokenResponse")
	proto.RegisterType((*ReadAccountTokenRequest)(nil), "go.micro.srv.account.ReadAccountTokenRequest")
	proto.RegisterType((*ReadAccountTokenResponse)(nil), "go.micro.srv.account.ReadAccountTokenResponse")
	proto.RegisterType((*Account)(nil), "go.micro.srv.account.Account")
	proto.RegisterType((*VerificationToken)(nil), "go.micro.srv.account.VerificationToken")
	proto.RegisterType((*VerificationAccount)(nil), "go.micro.srv.account.VerificationAccount")
	proto.RegisterType((*SessionInfo)(nil), "go.micro.srv.account.SessionInfo")
	proto.RegisterType((*AccountInfo)(nil), "go.micro.srv.account.AccountInfo")
	proto.RegisterType((*AccountStatusInfo)(nil), "go.micro.srv.account.AccountStatusInfo")
	proto.RegisterType((*Session)(nil), "go.micro.srv.account.Session")
	proto.RegisterType((*ConfirmVerifyRequest)(nil), "go.micro.srv.account.ConfirmVerifyRequest")
	proto.RegisterType((*ConfirmVerifyResponse)(nil), "go.micro.srv.account.ConfirmVerifyResponse")
	proto.RegisterEnum("go.micro.srv.account.AccountStatus", AccountStatus_name, AccountStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for AccountService service

type AccountServiceClient interface {
	ReadSession(ctx context.Context, in *ReadSessionRequest, opts ...client.CallOption) (*ReadSessionResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	ConfirmRegister(ctx context.Context, in *ConfirmRegisterRequest, opts ...client.CallOption) (*ConfirmRegisterResponse, error)
	ConfirmResend(ctx context.Context, in *ConfirmResendRequest, opts ...client.CallOption) (*ConfirmResendResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error)
	Logout(ctx context.Context, in *LogoutRequest, opts ...client.CallOption) (*LogoutResponse, error)
	RecoverPassword(ctx context.Context, in *RecoverPasswordRequest, opts ...client.CallOption) (*RecoverPasswordResponse, error)
	UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...client.CallOption) (*UpdatePasswordResponse, error)
	Lock(ctx context.Context, in *LockRequest, opts ...client.CallOption) (*LockResponse, error)
	InternalConfirm(ctx context.Context, in *InternalConfirmRequest, opts ...client.CallOption) (*InternalConfirmResponse, error)
	SetAccountStatus(ctx context.Context, in *SetAccountStatusRequest, opts ...client.CallOption) (*SetAccountStatusResponse, error)
	GetAccountStatus(ctx context.Context, in *GetAccountStatusRequest, opts ...client.CallOption) (*GetAccountStatusResponse, error)
	ResetUserPassword(ctx context.Context, in *ResetUserPasswordRequest, opts ...client.CallOption) (*ResetUserPasswordResponse, error)
	NewAccountConfirmationToken(ctx context.Context, in *NewAccountConfirmationTokenRequest, opts ...client.CallOption) (*NewAccountConfirmationTokenResponse, error)
	ConfirmVerify(ctx context.Context, in *ConfirmVerifyRequest, opts ...client.CallOption) (*ConfirmVerifyResponse, error)
	PassVerify(ctx context.Context, in *ConfirmVerifyRequest, opts ...client.CallOption) (*ConfirmVerifyResponse, error)
}

type accountServiceClient struct {
	c           client.Client
	serviceName string
}

func NewAccountServiceClient(serviceName string, c client.Client) AccountServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.account"
	}
	return &accountServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountServiceClient) ReadSession(ctx context.Context, in *ReadSessionRequest, opts ...client.CallOption) (*ReadSessionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.ReadSession", in)
	out := new(ReadSessionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ConfirmRegister(ctx context.Context, in *ConfirmRegisterRequest, opts ...client.CallOption) (*ConfirmRegisterResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.ConfirmRegister", in)
	out := new(ConfirmRegisterResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ConfirmResend(ctx context.Context, in *ConfirmResendRequest, opts ...client.CallOption) (*ConfirmResendResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.ConfirmResend", in)
	out := new(ConfirmResendResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.Login", in)
	out := new(LoginResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Logout(ctx context.Context, in *LogoutRequest, opts ...client.CallOption) (*LogoutResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.Logout", in)
	out := new(LogoutResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) RecoverPassword(ctx context.Context, in *RecoverPasswordRequest, opts ...client.CallOption) (*RecoverPasswordResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.RecoverPassword", in)
	out := new(RecoverPasswordResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...client.CallOption) (*UpdatePasswordResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.UpdatePassword", in)
	out := new(UpdatePasswordResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Lock(ctx context.Context, in *LockRequest, opts ...client.CallOption) (*LockResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.Lock", in)
	out := new(LockResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) InternalConfirm(ctx context.Context, in *InternalConfirmRequest, opts ...client.CallOption) (*InternalConfirmResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.InternalConfirm", in)
	out := new(InternalConfirmResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) SetAccountStatus(ctx context.Context, in *SetAccountStatusRequest, opts ...client.CallOption) (*SetAccountStatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.SetAccountStatus", in)
	out := new(SetAccountStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) GetAccountStatus(ctx context.Context, in *GetAccountStatusRequest, opts ...client.CallOption) (*GetAccountStatusResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.GetAccountStatus", in)
	out := new(GetAccountStatusResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ResetUserPassword(ctx context.Context, in *ResetUserPasswordRequest, opts ...client.CallOption) (*ResetUserPasswordResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.ResetUserPassword", in)
	out := new(ResetUserPasswordResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) NewAccountConfirmationToken(ctx context.Context, in *NewAccountConfirmationTokenRequest, opts ...client.CallOption) (*NewAccountConfirmationTokenResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.NewAccountConfirmationToken", in)
	out := new(NewAccountConfirmationTokenResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ConfirmVerify(ctx context.Context, in *ConfirmVerifyRequest, opts ...client.CallOption) (*ConfirmVerifyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.ConfirmVerify", in)
	out := new(ConfirmVerifyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) PassVerify(ctx context.Context, in *ConfirmVerifyRequest, opts ...client.CallOption) (*ConfirmVerifyResponse, error) {
	req := c.c.NewRequest(c.serviceName, "AccountService.PassVerify", in)
	out := new(ConfirmVerifyResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AccountService service

type AccountServiceHandler interface {
	ReadSession(context.Context, *ReadSessionRequest, *ReadSessionResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	ConfirmRegister(context.Context, *ConfirmRegisterRequest, *ConfirmRegisterResponse) error
	ConfirmResend(context.Context, *ConfirmResendRequest, *ConfirmResendResponse) error
	Login(context.Context, *LoginRequest, *LoginResponse) error
	Logout(context.Context, *LogoutRequest, *LogoutResponse) error
	RecoverPassword(context.Context, *RecoverPasswordRequest, *RecoverPasswordResponse) error
	UpdatePassword(context.Context, *UpdatePasswordRequest, *UpdatePasswordResponse) error
	Lock(context.Context, *LockRequest, *LockResponse) error
	InternalConfirm(context.Context, *InternalConfirmRequest, *InternalConfirmResponse) error
	SetAccountStatus(context.Context, *SetAccountStatusRequest, *SetAccountStatusResponse) error
	GetAccountStatus(context.Context, *GetAccountStatusRequest, *GetAccountStatusResponse) error
	ResetUserPassword(context.Context, *ResetUserPasswordRequest, *ResetUserPasswordResponse) error
	NewAccountConfirmationToken(context.Context, *NewAccountConfirmationTokenRequest, *NewAccountConfirmationTokenResponse) error
	ConfirmVerify(context.Context, *ConfirmVerifyRequest, *ConfirmVerifyResponse) error
	PassVerify(context.Context, *ConfirmVerifyRequest, *ConfirmVerifyResponse) error
}

func RegisterAccountServiceHandler(s server.Server, hdlr AccountServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&AccountService{hdlr}, opts...))
}

type AccountService struct {
	AccountServiceHandler
}

func (h *AccountService) ReadSession(ctx context.Context, in *ReadSessionRequest, out *ReadSessionResponse) error {
	return h.AccountServiceHandler.ReadSession(ctx, in, out)
}

func (h *AccountService) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.AccountServiceHandler.Read(ctx, in, out)
}

func (h *AccountService) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.AccountServiceHandler.Create(ctx, in, out)
}

func (h *AccountService) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.AccountServiceHandler.Update(ctx, in, out)
}

func (h *AccountService) ConfirmRegister(ctx context.Context, in *ConfirmRegisterRequest, out *ConfirmRegisterResponse) error {
	return h.AccountServiceHandler.ConfirmRegister(ctx, in, out)
}

func (h *AccountService) ConfirmResend(ctx context.Context, in *ConfirmResendRequest, out *ConfirmResendResponse) error {
	return h.AccountServiceHandler.ConfirmResend(ctx, in, out)
}

func (h *AccountService) Login(ctx context.Context, in *LoginRequest, out *LoginResponse) error {
	return h.AccountServiceHandler.Login(ctx, in, out)
}

func (h *AccountService) Logout(ctx context.Context, in *LogoutRequest, out *LogoutResponse) error {
	return h.AccountServiceHandler.Logout(ctx, in, out)
}

func (h *AccountService) RecoverPassword(ctx context.Context, in *RecoverPasswordRequest, out *RecoverPasswordResponse) error {
	return h.AccountServiceHandler.RecoverPassword(ctx, in, out)
}

func (h *AccountService) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, out *UpdatePasswordResponse) error {
	return h.AccountServiceHandler.UpdatePassword(ctx, in, out)
}

func (h *AccountService) Lock(ctx context.Context, in *LockRequest, out *LockResponse) error {
	return h.AccountServiceHandler.Lock(ctx, in, out)
}

func (h *AccountService) InternalConfirm(ctx context.Context, in *InternalConfirmRequest, out *InternalConfirmResponse) error {
	return h.AccountServiceHandler.InternalConfirm(ctx, in, out)
}

func (h *AccountService) SetAccountStatus(ctx context.Context, in *SetAccountStatusRequest, out *SetAccountStatusResponse) error {
	return h.AccountServiceHandler.SetAccountStatus(ctx, in, out)
}

func (h *AccountService) GetAccountStatus(ctx context.Context, in *GetAccountStatusRequest, out *GetAccountStatusResponse) error {
	return h.AccountServiceHandler.GetAccountStatus(ctx, in, out)
}

func (h *AccountService) ResetUserPassword(ctx context.Context, in *ResetUserPasswordRequest, out *ResetUserPasswordResponse) error {
	return h.AccountServiceHandler.ResetUserPassword(ctx, in, out)
}

func (h *AccountService) NewAccountConfirmationToken(ctx context.Context, in *NewAccountConfirmationTokenRequest, out *NewAccountConfirmationTokenResponse) error {
	return h.AccountServiceHandler.NewAccountConfirmationToken(ctx, in, out)
}

func (h *AccountService) ConfirmVerify(ctx context.Context, in *ConfirmVerifyRequest, out *ConfirmVerifyResponse) error {
	return h.AccountServiceHandler.ConfirmVerify(ctx, in, out)
}

func (h *AccountService) PassVerify(ctx context.Context, in *ConfirmVerifyRequest, out *ConfirmVerifyResponse) error {
	return h.AccountServiceHandler.PassVerify(ctx, in, out)
}

func init() { proto.RegisterFile("server/account-srv/proto/account/account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1496 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x59, 0x5f, 0x6f, 0x1b, 0x45,
	0x10, 0xcf, 0xf9, 0x6f, 0x32, 0x49, 0x8c, 0xb3, 0x4d, 0x63, 0xd7, 0x50, 0xa9, 0xbd, 0x52, 0x91,
	0xb6, 0x89, 0x5b, 0xa5, 0x42, 0x04, 0x51, 0x40, 0x21, 0x76, 0x5d, 0x43, 0x95, 0x86, 0x73, 0x53,
	0x09, 0x09, 0x61, 0x5d, 0x7d, 0x6b, 0x73, 0x34, 0xbe, 0xbb, 0xde, 0x9d, 0x5d, 0x2a, 0x1e, 0x10,
	0x42, 0x15, 0x2f, 0x3c, 0xf2, 0xc6, 0x03, 0xdf, 0x84, 0x77, 0xbe, 0x03, 0x1f, 0x82, 0x8f, 0x80,
	0x76, 0x6f, 0xf7, 0xfe, 0xf9, 0xf6, 0x6c, 0x5f, 0xdb, 0x27, 0xdf, 0xee, 0xce, 0xce, 0xcc, 0xfe,
	0xe6, 0xcf, 0xce, 0xac, 0xa1, 0xe9, 0x60, 0x7b, 0x8a, 0xed, 0xdb, 0xea, 0x60, 0x60, 0x4e, 0x0c,
	0x77, 0xdf, 0xb1, 0xa7, 0xb7, 0x2d, 0xdb, 0x74, 0x4d, 0x3e, 0xc3, 0x7f, 0x9b, 0x74, 0x16, 0x6d,
	0x8f, 0xcc, 0xe6, 0x58, 0x1f, 0xd8, 0x66, 0xd3, 0xb1, 0xa7, 0x4d, 0xb6, 0x26, 0xdf, 0x05, 0xa4,
	0x60, 0x55, 0xeb, 0x61, 0xc7, 0xd1, 0x4d, 0x43, 0xc1, 0xcf, 0x27, 0xd8, 0x71, 0xd1, 0x65, 0x00,
	0xc7, 0x9b, 0xe9, 0xeb, 0x5a, 0x5d, 0xba, 0x22, 0xed, 0xae, 0x29, 0x6b, 0x6c, 0xa6, 0xab, 0xc9,
	0x6d, 0xb8, 0x10, 0xd9, 0xe4, 0x58, 0xa6, 0xe1, 0x60, 0x54, 0x83, 0xf2, 0xc4, 0xc1, 0x76, 0xb0,
	0xa5, 0x44, 0x86, 0x5d, 0x0d, 0x5d, 0x84, 0x92, 0x69, 0x8f, 0xc8, 0x7c, 0x8e, 0xce, 0x17, 0x4d,
	0x7b, 0xd4, 0xd5, 0xe4, 0xfb, 0xb0, 0x7e, 0xe4, 0xa9, 0xd1, 0x52, 0x5d, 0x15, 0x7d, 0x04, 0x65,
	0xa6, 0x15, 0xdd, 0xbe, 0x7e, 0x70, 0xb9, 0x99, 0xa4, 0x72, 0x93, 0xed, 0x51, 0x38, 0x35, 0xe1,
	0x43, 0xd4, 0xe1, 0xca, 0x67, 0xe6, 0xe3, 0xc0, 0x86, 0xc7, 0x87, 0x9d, 0xe7, 0x43, 0x28, 0x68,
	0xaa, 0xab, 0x32, 0x2e, 0x57, 0x53, 0xb9, 0x90, 0x13, 0x28, 0x94, 0x1c, 0x21, 0x28, 0x0c, 0x4c,
	0x0d, 0xd3, 0xb3, 0xe6, 0x15, 0xfa, 0x8d, 0xea, 0x50, 0x1e, 0x63, 0xc7, 0x51, 0x47, 0xb8, 0x9e,
	0xa7, 0x10, 0xf0, 0xa1, 0xfc, 0x00, 0x36, 0x8f, 0x6d, 0xac, 0xba, 0xf8, 0xb5, 0xd5, 0xef, 0x43,
	0x85, 0x73, 0x62, 0x07, 0xc8, 0xca, 0x0a, 0x6d, 0x43, 0xd1, 0x35, 0x9f, 0x61, 0x83, 0xdb, 0x8b,
	0x0e, 0x88, 0xaa, 0x67, 0x96, 0xf6, 0x26, 0x54, 0xfd, 0x5b, 0x82, 0x0a, 0x67, 0xc5, 0x74, 0xfd,
	0x34, 0x02, 0xf6, 0x8d, 0x64, 0x46, 0xd1, 0x3d, 0xcd, 0xac, 0xa0, 0x37, 0x3e, 0x87, 0xc2, 0xeb,
	0xb9, 0xdc, 0xcf, 0xb0, 0x73, 0x6c, 0x1a, 0x43, 0xdd, 0x1e, 0x2b, 0x78, 0xa4, 0x3b, 0x2e, 0xb6,
	0x39, 0x26, 0xfb, 0x80, 0xa6, 0xd8, 0xd6, 0x87, 0xfa, 0x40, 0x75, 0x49, 0xfc, 0x78, 0x38, 0x7a,
	0xf1, 0xb0, 0x15, 0x5e, 0x79, 0x4c, 0x16, 0x50, 0x03, 0x56, 0x2d, 0xd5, 0x71, 0x5e, 0x98, 0x36,
	0x0f, 0x0e, 0x7f, 0xcc, 0xd7, 0xe8, 0xb9, 0xf2, 0xc1, 0x1a, 0x19, 0xcb, 0x1d, 0xa8, 0xcd, 0x28,
	0xc0, 0x90, 0xe4, 0x50, 0x48, 0xc9, 0x50, 0xe4, 0xa2, 0xfe, 0xf7, 0x05, 0x6c, 0xfb, 0x8c, 0x1c,
	0x6c, 0xf8, 0x51, 0xb4, 0x0d, 0x45, 0x3c, 0x56, 0xf5, 0x73, 0xa6, 0xba, 0x37, 0x20, 0xb3, 0xd6,
	0xf7, 0xa6, 0xc1, 0xb9, 0x78, 0x03, 0xb9, 0x0d, 0x17, 0x63, 0x3c, 0x32, 0xa9, 0xf2, 0x2a, 0x07,
	0x1b, 0x0f, 0xcd, 0x91, 0x6e, 0xa4, 0xeb, 0x90, 0x06, 0x99, 0xaf, 0x5f, 0x3e, 0xa4, 0x5f, 0x04,
	0xc8, 0x42, 0x14, 0x48, 0x74, 0x15, 0x36, 0x34, 0x3c, 0xd5, 0x07, 0x98, 0x59, 0xaa, 0x48, 0xd7,
	0xd7, 0xbd, 0xb9, 0xc0, 0x46, 0xe7, 0xaa, 0x3b, 0x34, 0xed, 0x71, 0xbd, 0x74, 0x45, 0xda, 0x2d,
	0x2a, 0xfe, 0x18, 0xdd, 0x82, 0xad, 0x89, 0xa1, 0x3f, 0x9f, 0xe0, 0xbe, 0xae, 0x61, 0xc3, 0xd5,
	0x87, 0x3a, 0xb6, 0xeb, 0x65, 0xca, 0xa3, 0xea, 0x2d, 0x74, 0xfd, 0x79, 0x74, 0x1d, 0x2a, 0xaa,
	0x65, 0x85, 0x29, 0x57, 0x29, 0xe5, 0xa6, 0x6a, 0x59, 0x01, 0x99, 0xfc, 0x6b, 0x0e, 0x36, 0x19,
	0x0e, 0x0c, 0xc7, 0x7b, 0x91, 0xe0, 0xd8, 0x4d, 0x76, 0xd2, 0xc8, 0x96, 0xec, 0xb1, 0xf1, 0x4a,
	0x0a, 0x82, 0x83, 0xa5, 0xfc, 0xf4, 0xe0, 0xe0, 0xd7, 0x00, 0xa7, 0x46, 0x2d, 0xd8, 0x60, 0x6b,
	0x7d, 0xdd, 0x18, 0x9a, 0x54, 0xee, 0xbc, 0xfc, 0xd9, 0x35, 0x86, 0xa6, 0xb2, 0xae, 0x06, 0x03,
	0xf9, 0x3b, 0x0a, 0x82, 0x39, 0x71, 0x17, 0xbb, 0x94, 0xc2, 0xb7, 0x4f, 0x4e, 0x70, 0xfb, 0xe4,
	0xc3, 0xb7, 0xcf, 0x67, 0x50, 0xe1, 0xfc, 0x33, 0x79, 0x6b, 0x0b, 0x76, 0x14, 0x3c, 0x30, 0xa7,
	0xd8, 0x3e, 0x65, 0xde, 0x97, 0x25, 0x74, 0xfe, 0x91, 0xa0, 0x36, 0xc3, 0x86, 0xe9, 0x73, 0x3f,
	0x62, 0xf5, 0x83, 0x64, 0xfc, 0x04, 0x9b, 0xb3, 0xdb, 0xff, 0x90, 0x99, 0xff, 0x0e, 0x6c, 0xf3,
	0xb0, 0xea, 0xdb, 0xd8, 0xc1, 0x6e, 0x24, 0x95, 0x21, 0x2b, 0x10, 0x88, 0x5d, 0x1a, 0x27, 0xf2,
	0x2f, 0x12, 0x5c, 0xf4, 0x32, 0x74, 0x1c, 0x91, 0xa5, 0x79, 0x65, 0xce, 0x8b, 0xf7, 0x61, 0x27,
	0xae, 0x42, 0x26, 0xeb, 0xee, 0xc1, 0xfa, 0x43, 0x73, 0xf0, 0x2c, 0xe4, 0x7b, 0xbe, 0x4b, 0xfb,
	0xbe, 0xc7, 0xbd, 0x55, 0x93, 0xef, 0x91, 0xc4, 0x45, 0xa8, 0x33, 0xc9, 0xea, 0xc1, 0x4e, 0xd7,
	0x70, 0xb1, 0x6d, 0xa8, 0xe7, 0x7e, 0x1a, 0x5d, 0x44, 0x6c, 0x1a, 0x48, 0xf2, 0x25, 0xa8, 0xcd,
	0x30, 0xf5, 0xb4, 0x93, 0x9f, 0x42, 0xad, 0x83, 0x5d, 0x16, 0x78, 0x3d, 0x57, 0x75, 0x27, 0x0e,
	0x17, 0xb8, 0x64, 0x09, 0x47, 0xe8, 0x5d, 0xac, 0x8e, 0x83, 0xe0, 0x2a, 0x91, 0x61, 0x57, 0x93,
	0xff, 0x95, 0xa0, 0x3e, 0x2b, 0x84, 0xc1, 0xd3, 0x89, 0x38, 0xf6, 0xdd, 0x64, 0xc7, 0x16, 0xed,
	0xce, 0xee, 0xd9, 0x5d, 0xe6, 0xd9, 0x47, 0xf1, 0x5b, 0xff, 0x83, 0xd4, 0xd4, 0xe4, 0x89, 0xa7,
	0x09, 0xca, 0xbf, 0xff, 0xff, 0x92, 0xa0, 0xd6, 0x7b, 0xcb, 0x18, 0xa2, 0x4f, 0xa0, 0xe4, 0x50,
	0xce, 0xf4, 0xd2, 0xaa, 0x1c, 0x5c, 0x5b, 0x40, 0x4d, 0x85, 0x6d, 0x91, 0x1f, 0x40, 0xbd, 0x27,
	0xc2, 0x7f, 0x39, 0xf7, 0xfc, 0x53, 0x82, 0x3a, 0x8d, 0xcc, 0x33, 0x67, 0x36, 0xd7, 0xbd, 0xb1,
	0xc3, 0x86, 0x7d, 0xb9, 0x90, 0x12, 0xf0, 0xc5, 0x58, 0xc0, 0x77, 0xe1, 0x52, 0x82, 0x72, 0x99,
	0x0e, 0xfa, 0x9b, 0x04, 0xf2, 0x09, 0x7e, 0xc1, 0x30, 0x63, 0x51, 0x13, 0xd4, 0x6a, 0xfc, 0xc8,
	0x08, 0x0a, 0x63, 0xce, 0xb4, 0xa8, 0xd0, 0xef, 0xe4, 0x82, 0x39, 0x5c, 0x5e, 0xe6, 0x97, 0x2a,
	0x2f, 0xaf, 0xc3, 0xb5, 0x54, 0x45, 0x58, 0x20, 0x1f, 0x92, 0xbb, 0x43, 0xd5, 0x18, 0x5d, 0x44,
	0xc9, 0x39, 0x09, 0xeb, 0x0e, 0x31, 0x69, 0x7c, 0x27, 0x03, 0xcd, 0x3f, 0x8b, 0x14, 0x2e, 0xfe,
	0x7f, 0xcf, 0x41, 0x99, 0x91, 0xa3, 0x0a, 0xe4, 0x7c, 0xa6, 0x39, 0x5d, 0x23, 0x90, 0x0e, 0x68,
	0xe7, 0xa1, 0xb1, 0x48, 0xe4, 0x43, 0xb2, 0x32, 0xa1, 0xe9, 0xd8, 0x33, 0x77, 0x5e, 0xe1, 0xc3,
	0xe0, 0x92, 0x2c, 0x88, 0x6a, 0xbb, 0xa2, 0xa8, 0xb6, 0x2b, 0x89, 0x6a, 0xbb, 0x72, 0xac, 0xb6,
	0x7b, 0x0f, 0xd6, 0x06, 0x1e, 0x78, 0x58, 0xa3, 0xa5, 0xd6, 0xaa, 0x12, 0x4c, 0x84, 0xc2, 0x6b,
	0x6d, 0xf9, 0xf0, 0xfa, 0x1a, 0xb6, 0x9e, 0xcc, 0x14, 0xf3, 0x73, 0xd2, 0xf5, 0x65, 0x00, 0xfc,
	0xa3, 0xa5, 0xdb, 0xd8, 0xe9, 0xab, 0x2e, 0x43, 0x6a, 0x8d, 0xcd, 0x1c, 0xb9, 0xf2, 0x97, 0x70,
	0x21, 0xcc, 0xf2, 0x28, 0xde, 0x8b, 0x85, 0xcd, 0x31, 0x8f, 0xd7, 0x4f, 0xb0, 0xce, 0xca, 0x32,
	0x92, 0xb7, 0xe6, 0x29, 0xb6, 0x64, 0xe9, 0x14, 0x13, 0x5e, 0x88, 0x0b, 0xff, 0xc6, 0xef, 0xeb,
	0xa9, 0xf0, 0x65, 0x53, 0x44, 0x03, 0x56, 0xf1, 0xd8, 0x3a, 0x37, 0x5f, 0x62, 0xff, 0x7a, 0xe7,
	0x63, 0xf9, 0x14, 0xb6, 0x66, 0xb2, 0x72, 0xc8, 0x90, 0xd2, 0xf2, 0x86, 0x3c, 0x84, 0x32, 0x43,
	0x6a, 0xc6, 0xad, 0xe7, 0x60, 0xbc, 0xe7, 0x77, 0x4e, 0xd4, 0x6c, 0x2f, 0x43, 0xe5, 0x5f, 0x42,
	0xfc, 0x04, 0x3d, 0x12, 0xa7, 0xce, 0x92, 0xa3, 0x6e, 0x7e, 0x0b, 0x9b, 0x91, 0x73, 0xa0, 0x1d,
	0x40, 0x91, 0x89, 0xfe, 0xc9, 0xa3, 0x93, 0x76, 0x75, 0x05, 0x6d, 0xc0, 0x6a, 0xf7, 0xe4, 0xe8,
	0xf8, 0x71, 0xf7, 0x49, 0xbb, 0x2a, 0x21, 0x80, 0x12, 0xfb, 0xce, 0x91, 0xef, 0x87, 0x8f, 0x8e,
	0xbf, 0x6a, 0xb7, 0xaa, 0x79, 0xb4, 0x09, 0x6b, 0xbd, 0xb3, 0xde, 0x69, 0xfb, 0xa4, 0xd5, 0x6e,
	0x55, 0x0b, 0x07, 0xff, 0x55, 0xa0, 0xc2, 0xb9, 0x61, 0x9b, 0x74, 0x40, 0x48, 0xf3, 0x1e, 0x57,
	0x38, 0x46, 0xbb, 0xa2, 0x2a, 0x34, 0xfe, 0x86, 0xd4, 0xb8, 0xb1, 0x00, 0x25, 0xcb, 0x63, 0x2b,
	0xe8, 0x11, 0x14, 0xc8, 0x02, 0xba, 0x2a, 0xde, 0xc4, 0xf9, 0xca, 0x69, 0x24, 0x3e, 0xc3, 0x33,
	0x28, 0x79, 0x8f, 0x21, 0x48, 0xe0, 0x0d, 0x91, 0x47, 0x97, 0xc6, 0xfb, 0xe9, 0x44, 0x61, 0xb6,
	0x5e, 0x79, 0x29, 0x62, 0x1b, 0x79, 0x20, 0x11, 0xb1, 0x8d, 0x3e, 0x63, 0xc8, 0x2b, 0xc8, 0x82,
	0x77, 0x62, 0xdd, 0x3c, 0xda, 0x13, 0x68, 0x94, 0xf8, 0xea, 0xd0, 0xd8, 0x5f, 0x90, 0xda, 0x97,
	0xf8, 0x03, 0x6c, 0x46, 0x5a, 0x76, 0x74, 0x73, 0x0e, 0x87, 0xd0, 0xdb, 0x40, 0xe3, 0xd6, 0x42,
	0xb4, 0xbe, 0x2c, 0x05, 0x8a, 0xb4, 0x37, 0x45, 0x72, 0x6a, 0xe3, 0xea, 0xf1, 0xbe, 0xb6, 0x40,
	0x73, 0xeb, 0x19, 0xc2, 0xeb, 0xde, 0x90, 0x78, 0x43, 0xd0, 0x3b, 0x8a, 0x0c, 0x11, 0x6d, 0x00,
	0x3d, 0x43, 0xc4, 0x1a, 0x2a, 0x91, 0x21, 0x92, 0x7b, 0x3f, 0x91, 0x21, 0x04, 0x5d, 0x9a, 0xbc,
	0x82, 0xc6, 0xfc, 0x25, 0xcc, 0x17, 0x78, 0x2b, 0xcd, 0x69, 0xe2, 0xf2, 0xf6, 0x16, 0x23, 0x0e,
	0x07, 0x1a, 0xe9, 0x54, 0x44, 0x81, 0x16, 0xea, 0x79, 0x1a, 0x72, 0x1a, 0x49, 0x18, 0xb1, 0x58,
	0x9f, 0x21, 0x42, 0x2c, 0xb9, 0xc7, 0x11, 0x21, 0x26, 0x6a, 0x5e, 0x56, 0x90, 0x03, 0xd5, 0x78,
	0x65, 0x8b, 0xf6, 0x45, 0x4f, 0x13, 0x89, 0x25, 0x7a, 0xa3, 0xb9, 0x28, 0x79, 0x58, 0x68, 0x67,
	0x41, 0xa1, 0x9d, 0xe5, 0x84, 0x76, 0xc4, 0x42, 0xa7, 0xb0, 0x35, 0x53, 0xdb, 0xa2, 0xa6, 0xc8,
	0xc3, 0x92, 0x2b, 0xf4, 0xc6, 0xed, 0x85, 0xe9, 0x7d, 0xb9, 0x7f, 0x48, 0xf0, 0x6e, 0x4a, 0xfd,
	0x89, 0x0e, 0x93, 0x59, 0xce, 0xaf, 0x9d, 0x1b, 0x1f, 0x67, 0xd8, 0x99, 0x90, 0xb3, 0xbc, 0x2b,
	0x74, 0x4e, 0xce, 0x8a, 0xdc, 0xca, 0x73, 0x72, 0x56, 0xf4, 0x4e, 0x96, 0x57, 0xd0, 0x08, 0x80,
	0x00, 0xf3, 0xd6, 0x05, 0x3d, 0x2d, 0xd1, 0x7f, 0x67, 0xee, 0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff,
	0x7a, 0xa8, 0x33, 0x21, 0xcf, 0x19, 0x00, 0x00,
}
